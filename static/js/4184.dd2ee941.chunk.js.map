{"version":3,"file":"static/js/4184.dd2ee941.chunk.js","mappings":"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","sources":["../../../../../../walletconnect/node_modules/@ethersproject/logger/src.ts/index.ts","../../../../../../walletconnect/node_modules/@ethersproject/logger/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/bytes/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/bytes/src.ts/index.ts","../../../../../../walletconnect/node_modules/@ethersproject/bignumber/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts","../../../../../../walletconnect/node_modules/@ethersproject/properties/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/properties/src.ts/index.ts","../../../../../../walletconnect/node_modules/@ethersproject/abstract-provider/src.ts/index.ts","../../../../../../walletconnect/node_modules/@ethersproject/abstract-provider/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/networks/src.ts/index.ts","../../../../../../walletconnect/node_modules/@ethersproject/networks/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/base64/src.ts/browser-base64.ts","../../../../../../walletconnect/node_modules/@ethersproject/basex/src.ts/index.ts","../../../../../../walletconnect/node_modules/@ethersproject/strings/src.ts/utf8.ts","../../../../../../walletconnect/node_modules/@ethersproject/strings/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/keccak256/src.ts/index.ts","../../../../../../walletconnect/node_modules/@ethersproject/hash/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/hash/src.ts/ens-normalize/decoder.ts","../../../../../../walletconnect/node_modules/@ethersproject/hash/src.ts/ens-normalize/lib.ts","../../../../../../walletconnect/node_modules/@ethersproject/hash/src.ts/ens-normalize/include.ts","../../../../../../walletconnect/node_modules/@ethersproject/hash/src.ts/namehash.ts","../../../../../../walletconnect/node_modules/@ethersproject/sha2/src.ts/browser-sha2.ts","../../../../../../walletconnect/node_modules/@ethersproject/sha2/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/web/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/web/src.ts/browser-geturl.ts","../../../../../../walletconnect/node_modules/@ethersproject/web/src.ts/index.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/rlp/src.ts/index.ts","../../../../../../walletconnect/node_modules/@ethersproject/rlp/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/address/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/address/src.ts/index.ts","../../../../../../walletconnect/node_modules/@ethersproject/constants/src.ts/addresses.ts","../../../../../../walletconnect/node_modules/@ethersproject/constants/src.ts/bignumbers.ts","../../../../../../walletconnect/node_modules/node_modules/minimalistic-assert/index.js","../../../../../../walletconnect/node_modules/node_modules/minimalistic-crypto-utils/lib/utils.js","../../../../../../walletconnect/node_modules/node_modules/elliptic/lib/elliptic/utils.js","../../../../../../walletconnect/node_modules/node_modules/elliptic/lib/elliptic/curve/base.js","../../../../../../walletconnect/node_modules/node_modules/inherits/inherits_browser.js","../../../../../../walletconnect/node_modules/node_modules/elliptic/lib/elliptic/curve/short.js","../../../../../../walletconnect/node_modules/node_modules/elliptic/lib/elliptic/curve/index.js","../../../../../../walletconnect/node_modules/node_modules/elliptic/lib/elliptic/curves.js","../../../../../../walletconnect/node_modules/node_modules/hmac-drbg/lib/hmac-drbg.js","../../../../../../walletconnect/node_modules/node_modules/elliptic/lib/elliptic/ec/key.js","../../../../../../walletconnect/node_modules/node_modules/elliptic/lib/elliptic/ec/signature.js","../../../../../../walletconnect/node_modules/node_modules/elliptic/lib/elliptic/ec/index.js","../../../../../../walletconnect/node_modules/@ethersproject/signing-key/lib.esm/elliptic.js","../../../../../../walletconnect/node_modules/node_modules/elliptic/lib/elliptic.js","../../../../../../walletconnect/node_modules/@ethersproject/signing-key/src.ts/index.ts","../../../../../../walletconnect/node_modules/@ethersproject/signing-key/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/transactions/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/transactions/src.ts/index.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/formatter.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/base-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/constants/src.ts/hashes.ts","../../../../../../walletconnect/node_modules/@ethersproject/abstract-signer/src.ts/index.ts","../../../../../../walletconnect/node_modules/@ethersproject/abstract-signer/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/hash/src.ts/id.ts","../../../../../../walletconnect/node_modules/@ethersproject/hash/src.ts/typed-data.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/json-rpc-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/browser-ws.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/websocket-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/url-json-rpc-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/alchemy-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/ankr-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/cloudflare-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/etherscan-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/random/src.ts/shuffle.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/fallback-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/browser-ipc-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/infura-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/json-rpc-batch-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/nodesmith-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/pocket-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/web3-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/index.ts","../node_modules/@web3-onboard/walletconnect/node_modules/bn.js/lib/bn.js"],"sourcesContent":["\"use strict\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\n\nconst LogLevels: { [ name: string ]: number } = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\n\nimport { version } from \"./_version\";\n\nlet _globalLogger: Logger = null;\n\nfunction _checkNormalize(): string {\n    try {\n        const missing: Array<string> = [ ];\n\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                };\n            } catch(error) {\n                missing.push(form);\n            }\n        });\n\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\")\n        }\n    } catch (error) {\n        return error.message;\n    }\n\n    return null;\n}\n\nconst _normalizeError = _checkNormalize();\n\nexport enum LogLevel {\n    DEBUG    = \"DEBUG\",\n    INFO     = \"INFO\",\n    WARNING  = \"WARNING\",\n    ERROR    = \"ERROR\",\n    OFF      = \"OFF\"\n}\n\n\nexport enum ErrorCode {\n\n    ///////////////////\n    // Generic Errors\n\n    // Unknown Error\n    UNKNOWN_ERROR = \"UNKNOWN_ERROR\",\n\n    // Not Implemented\n    NOT_IMPLEMENTED = \"NOT_IMPLEMENTED\",\n\n    // Unsupported Operation\n    //   - operation\n    UNSUPPORTED_OPERATION = \"UNSUPPORTED_OPERATION\",\n\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    NETWORK_ERROR = \"NETWORK_ERROR\",\n\n    // Some sort of bad response from the server\n    SERVER_ERROR = \"SERVER_ERROR\",\n\n    // Timeout\n    TIMEOUT = \"TIMEOUT\",\n\n    ///////////////////\n    // Operational  Errors\n\n    // Buffer Overrun\n    BUFFER_OVERRUN = \"BUFFER_OVERRUN\",\n\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    NUMERIC_FAULT = \"NUMERIC_FAULT\",\n\n\n    ///////////////////\n    // Argument Errors\n\n    // Missing new operator to an object\n    //  - name: The name of the class\n    MISSING_NEW = \"MISSING_NEW\",\n\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    INVALID_ARGUMENT = \"INVALID_ARGUMENT\",\n\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    MISSING_ARGUMENT = \"MISSING_ARGUMENT\",\n\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    UNEXPECTED_ARGUMENT = \"UNEXPECTED_ARGUMENT\",\n\n\n    ///////////////////\n    // Blockchain Errors\n\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    CALL_EXCEPTION = \"CALL_EXCEPTION\",\n\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    INSUFFICIENT_FUNDS = \"INSUFFICIENT_FUNDS\",\n\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    NONCE_EXPIRED = \"NONCE_EXPIRED\",\n\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    REPLACEMENT_UNDERPRICED = \"REPLACEMENT_UNDERPRICED\",\n\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    UNPREDICTABLE_GAS_LIMIT = \"UNPREDICTABLE_GAS_LIMIT\",\n\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    TRANSACTION_REPLACED = \"TRANSACTION_REPLACED\",\n\n\n    ///////////////////\n    // Interaction Errors\n\n    // The user rejected the action, such as signing a message or sending\n    // a transaction\n    ACTION_REJECTED = \"ACTION_REJECTED\",\n};\n\nconst HEX = \"0123456789abcdef\";\n\nexport class Logger {\n    readonly version: string;\n\n    static errors = ErrorCode;\n\n    static levels = LogLevel;\n\n    constructor(version: string) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n\n    _log(logLevel: LogLevel, args: Array<any>): void {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) { return; }\n        console.log.apply(console, args);\n    }\n\n    debug(...args: Array<any>): void {\n        this._log(Logger.levels.DEBUG, args);\n    }\n\n    info(...args: Array<any>): void {\n        this._log(Logger.levels.INFO, args);\n    }\n\n    warn(...args: Array<any>): void {\n        this._log(Logger.levels.WARNING, args);\n    }\n\n    makeError(message: string, code?: ErrorCode, params?: any): Error {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, { });\n        }\n\n        if (!code) { code = Logger.errors.UNKNOWN_ERROR; }\n        if (!params) { params = {}; }\n\n        const messageDetails: Array<string> = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                      hex += HEX[value[i] >> 4];\n                      hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                } else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            } catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${ code }`);\n        messageDetails.push(`version=${ this.version }`);\n\n        const reason = message;\n\n        let url = \"\";\n\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n\n                switch (fault) {\n                    case \"overflow\": case \"underflow\": case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\": case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n\n        // @TODO: Any??\n        const error: any = new Error(message);\n        error.reason = reason;\n        error.code = code\n\n        Object.keys(params).forEach(function(key) {\n            error[key] = params[key];\n        });\n\n        return error;\n    }\n\n    throwError(message: string, code?: ErrorCode, params?: any): never {\n        throw this.makeError(message, code, params);\n    }\n\n    throwArgumentError(message: string, name: string, value: any): never {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n\n    assert(condition: any, message: string, code?: ErrorCode, params?: any): void {\n        if (!!condition) { return; }\n        this.throwError(message, code, params);\n    }\n\n    assertArgument(condition: any, message: string, name: string, value: any): void {\n        if (!!condition) { return; }\n        this.throwArgumentError(message, name, value);\n    }\n\n    checkNormalize(message?: string): void {\n        if (message == null) { message = \"platform missing String.prototype.normalize\"; }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n\n    checkSafeUint53(value: number, message?: string): void {\n        if (typeof(value) !== \"number\") { return; }\n\n        if (message == null) { message = \"value not safe\"; }\n\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n\n    checkArgumentCount(count: number, expectedCount: number, message?: string): void {\n        if (message) {\n            message = \": \" + message;\n        } else {\n            message = \"\";\n        }\n\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n\n    checkNew(target: any, kind: any): void {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    checkAbstract(target: any, kind: any): void {\n        if (target === kind) {\n            this.throwError(\n                \"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { name: target.name, operation: \"new\" }\n            );\n        } else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    static globalLogger(): Logger {\n        if (!_globalLogger) { _globalLogger = new Logger(version); }\n        return _globalLogger;\n    }\n\n    static setCensorship(censorship: boolean, permanent?: boolean): void {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        if (_permanentCensorErrors) {\n            if (!censorship) { return; }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n\n    static setLogLevel(logLevel: LogLevel): void {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n\n    static from(version: string): Logger {\n        return new Logger(version);\n    }\n}\n","export const version = \"logger/5.7.0\";\n","export const version = \"bytes/5.7.0\";\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type Bytes = ArrayLike<number>;\n\nexport type BytesLike = Bytes | string;\n\nexport type DataOptions = {\n    allowMissingPrefix?: boolean;\n    hexPad?: \"left\" | \"right\" | null;\n};\n\nexport interface Hexable {\n    toHexString(): string;\n}\n\n\n/*\nexport interface HexString {\n    length: number;\n    substring: (start: number, end?: number) => string;\n\n    [index: number]: string;\n}\n*/\n\nexport type SignatureLike  = {\n    r: string;\n    s?: string;\n    _vs?: string,\n    recoveryParam?: number;\n    v?: number;\n} | BytesLike;\n\nexport interface Signature {\n    r: string;\n\n    s: string;\n    _vs: string,\n\n    recoveryParam: number;\n    v: number;\n\n    yParityAndS: string\n    compact: string;\n}\n\n///////////////////////////////\n\n\nfunction isHexable(value: any): value is Hexable {\n    return !!(value.toHexString);\n}\n\nfunction addSlice(array: Uint8Array): Uint8Array {\n    if (array.slice) { return array; }\n\n    array.slice = function() {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    }\n\n    return array;\n}\n\nexport function isBytesLike(value: any): value is BytesLike {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\n\nfunction isInteger(value: number) {\n    return (typeof(value) === \"number\" && value == value && (value % 1) === 0);\n}\n\nexport function isBytes(value: any): value is Bytes {\n    if (value == null) { return false; }\n\n    if (value.constructor === Uint8Array) { return true; }\n    if (typeof(value) === \"string\") { return false; }\n    if (!isInteger(value.length) || value.length < 0) { return false; }\n\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) { return false; }\n    }\n    return true;\n}\n\n\nexport function arrayify(value: BytesLike | Hexable | number, options?: DataOptions): Uint8Array {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) { result.push(0); }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { value = value.toHexString(); }\n\n    if (isHexString(value)) {\n        let hex = (<string>value).substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0\" + hex;\n            } else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\n\nexport function concat(items: ReadonlyArray<BytesLike>): Uint8Array {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n\n    const result = new Uint8Array(length);\n\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n\n    return addSlice(result);\n}\n\nexport function stripZeros(value: BytesLike): Uint8Array {\n    let result: Uint8Array = arrayify(value);\n\n    if (result.length === 0) { return result; }\n\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) { start++ }\n\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n\n    return result;\n}\n\nexport function zeroPad(value: BytesLike, length: number): Uint8Array {\n    value = arrayify(value);\n\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\n\n\nexport function isHexString(value: any, length?: number): boolean {\n    if (typeof(value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false\n    }\n    if (length && value.length !== 2 + 2 * length) { return false; }\n    return true;\n}\n\nconst HexCharacters: string = \"0123456789abcdef\";\n\nexport function hexlify(value: BytesLike | Hexable | number | bigint, options?: DataOptions): string {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n\n        if (hex.length) {\n            if (hex.length % 2) { hex = \"0\" + hex; }\n            return \"0x\" + hex;\n        }\n\n        return \"0x00\";\n    }\n\n    if (typeof(value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) { return (\"0x0\" + value); }\n        return \"0x\" + value;\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { return value.toHexString(); }\n\n    if (isHexString(value)) {\n        if ((<string>value).length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + (<string>value).substring(2);\n            } else if (options.hexPad === \"right\") {\n                value += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return (<string>value).toLowerCase();\n    }\n\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n             let v = value[i];\n             result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data: BytesLike) {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n\n    return (data.length - 2) / 2;\n}\n\nexport function hexDataSlice(data: BytesLike, offset: number, endOffset?: number): string {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data );\n    }\n\n    offset = 2 + 2 * offset;\n\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n\n    return \"0x\" + data.substring(offset);\n}\n\nexport function hexConcat(items: ReadonlyArray<BytesLike>): string {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\n\nexport function hexValue(value: BytesLike | Hexable | number | bigint): string {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") { return \"0x0\"; }\n    return trimmed;\n}\n\nexport function hexStripZeros(value: BytesLike): string {\n    if (typeof(value) !== \"string\") { value = hexlify(value); }\n\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") { offset++; }\n    return \"0x\" + value.substring(offset);\n}\n\nexport function hexZeroPad(value: BytesLike, length: number): string {\n    if (typeof(value) !== \"string\") {\n        value = hexlify(value);\n    } else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n\n    return value;\n}\n\nexport function splitSignature(signature: SignatureLike): Signature {\n\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n\n    if (isBytesLike(signature)) {\n        let bytes: Uint8Array = arrayify(signature);\n\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n\n        } else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        } else {\n\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n\n\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            } else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) { bytes[32] |= 0x80; }\n        result._vs = hexlify(bytes.slice(32, 64))\n\n    } else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1: 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            } else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            } else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            } else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            } else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        } else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            } else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v :(1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        } else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        } else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) { vs[0] |= 0x80; }\n        const _vs = hexlify(vs);\n\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        } else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n\n    return result;\n}\n\nexport function joinSignature(signature: SignatureLike): string {\n    signature = splitSignature(signature);\n\n    return hexlify(concat([\n         signature.r,\n         signature.s,\n         (signature.recoveryParam ? \"0x1c\": \"0x1b\")\n    ]));\n}\n\n","export const version = \"bignumber/5.7.0\";\n","\"use strict\";\n\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\n\nimport _BN from \"bn.js\";\nimport BN = _BN.BN;\n\nimport { Bytes, Hexable, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst _constructorGuard = { };\n\nconst MAX_SAFE = 0x1fffffffffffff;\n\n\nexport type BigNumberish = BigNumber | Bytes | bigint | string | number;\n\nexport function isBigNumberish(value: any): value is BigNumberish {\n    return (value != null) && (\n        BigNumber.isBigNumber(value) ||\n        (typeof(value) === \"number\" && (value % 1) === 0) ||\n        (typeof(value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof(value) === \"bigint\") ||\n        isBytes(value)\n    );\n}\n\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\n\nexport class BigNumber implements Hexable {\n    readonly _hex: string;\n    readonly _isBigNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n\n        this._hex = hex;\n        this._isBigNumber = true;\n\n        Object.freeze(this);\n    }\n\n    fromTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n\n    toTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n\n    abs(): BigNumber {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n\n    add(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n\n    sub(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n\n    div(other: BigNumberish): BigNumber {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division-by-zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n\n    mul(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n\n    mod(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"division-by-zero\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n\n    pow(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"negative-power\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n\n    and(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n\n    or(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n\n    xor(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n\n    mask(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n\n    shl(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n\n    shr(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n\n    eq(other: BigNumberish): boolean {\n        return toBN(this).eq(toBN(other));\n    }\n\n    lt(other: BigNumberish): boolean {\n        return toBN(this).lt(toBN(other));\n    }\n\n    lte(other: BigNumberish): boolean {\n        return toBN(this).lte(toBN(other));\n    }\n\n    gt(other: BigNumberish): boolean {\n        return toBN(this).gt(toBN(other));\n   }\n\n    gte(other: BigNumberish): boolean {\n        return toBN(this).gte(toBN(other));\n    }\n\n    isNegative(): boolean {\n        return (this._hex[0] === \"-\");\n    }\n\n    isZero(): boolean {\n        return toBN(this).isZero();\n    }\n\n    toNumber(): number {\n        try {\n            return toBN(this).toNumber();\n        } catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n\n    toBigInt(): bigint {\n        try {\n            return BigInt(this.toString());\n        } catch (e) { }\n\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n\n    toString(): string {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            } else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            } else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            }\n        }\n        return toBN(this).toString(10);\n    }\n\n    toHexString(): string {\n        return this._hex;\n    }\n\n    toJSON(key?: string): any {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n\n    static from(value: any): BigNumber {\n        if (value instanceof BigNumber) { return value; }\n\n        if (typeof(value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n\n        if (typeof(value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n\n            return BigNumber.from(String(value));\n        }\n\n        const anyValue = <any>value;\n\n        if (typeof(anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n\n        if (anyValue) {\n\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof(hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n\n            } else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n\n                if (typeof(hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n\n    static isBigNumber(value: any): value is BigNumber {\n        return !!(value && value._isBigNumber);\n    }\n}\n\n// Normalize the hex string\nfunction toHex(value: string | BN): string {\n\n    // For BN, call on the hex string\n    if (typeof(value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") { logger.throwArgumentError(\"invalid hex\", \"value\", value); }\n\n        // Call toHex on the positive component\n        value = toHex(value);\n\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") { return value; }\n\n        // Negate the value\n        return \"-\" + value;\n    }\n\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n\n    // Normalize zero\n    if (value === \"0x\") { return \"0x00\"; }\n\n    // Make the string even length\n    if (value.length % 2) { value = \"0x0\" + value.substring(2); }\n\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n\n    return value;\n}\n\nfunction toBigNumber(value: BN): BigNumber {\n    return BigNumber.from(toHex(value));\n}\n\nfunction toBN(value: BigNumberish): BN {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value != null) { params.value = value; }\n\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// value should have no prefix\nexport function _base36To16(value: string): string {\n    return (new BN(value, 36)).toString(16);\n}\n\n// value should have no prefix\nexport function _base16To36(value: string): string {\n    return (new BN(value, 16)).toString(36);\n}\n","export const version = \"properties/5.7.0\";\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function defineReadOnly<T, K extends keyof T>(object: T, name: K, value: T[K]): void {\n    Object.defineProperty(object, name, {\n        enumerable: true,\n        value: value,\n        writable: false,\n    });\n}\n\n// Crawl up the constructor chain to find a static method\nexport function getStatic<T>(ctor: any, key: string): T {\n    for (let i = 0; i < 32; i++) {\n        if (ctor[key]) { return ctor[key]; }\n        if (!ctor.prototype || typeof(ctor.prototype) !== \"object\") { break; }\n        ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n    }\n    return null;\n}\n\nexport type Deferrable<T> = {\n    [ K in keyof T ]: T[K] | Promise<T[K]>;\n}\n\n\ntype Result = { key: string, value: any};\n\nexport async function resolveProperties<T>(object: Readonly<Deferrable<T>>): Promise<T> {\n    const promises: Array<Promise<Result>> = Object.keys(object).map((key) => {\n        const value = object[<keyof Deferrable<T>>key];\n        return Promise.resolve(value).then((v) => ({ key: key, value: v }));\n    });\n\n    const results = await Promise.all(promises);\n\n    return results.reduce((accum, result) => {\n        accum[<keyof T>(result.key)] = result.value;\n        return accum;\n    }, <T>{ });\n}\n\nexport function checkProperties(object: any, properties: { [ name: string ]: boolean }): void {\n    if (!object || typeof(object) !== \"object\") {\n        logger.throwArgumentError(\"invalid object\", \"object\", object);\n    }\n\n    Object.keys(object).forEach((key) => {\n        if (!properties[key]) {\n            logger.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n        }\n    });\n}\n\nexport function shallowCopy<T>(object: T): T {\n    const result: any = {};\n    for (const key in object) { result[key] = object[key]; }\n    return result;\n}\n\nconst opaque: { [key: string]: boolean } = { bigint: true, boolean: true, \"function\": true, number: true, string: true };\n\nfunction _isFrozen(object: any): boolean {\n\n    // Opaque objects are not mutable, so safe to copy by assignment\n    if (object === undefined || object === null || opaque[typeof(object)]) { return true; }\n\n    if (Array.isArray(object) || typeof(object) === \"object\") {\n        if (!Object.isFrozen(object)) { return false; }\n\n        const keys = Object.keys(object);\n        for (let i = 0; i < keys.length; i++) {\n            let value: any = null;\n            try {\n                value = object[keys[i]];\n            } catch (error) {\n                // If accessing a value triggers an error, it is a getter\n                // designed to do so (e.g. Result) and is therefore \"frozen\"\n                continue;\n            }\n\n            if (!_isFrozen(value)) { return false; }\n        }\n\n        return true;\n    }\n\n    return logger.throwArgumentError(`Cannot deepCopy ${ typeof(object) }`, \"object\", object);\n}\n\n// Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\nfunction _deepCopy(object: any): any {\n\n    if (_isFrozen(object)) { return object; }\n\n    // Arrays are mutable, so we need to create a copy\n    if (Array.isArray(object)) {\n        return Object.freeze(object.map((item) => deepCopy(item)));\n    }\n\n    if (typeof(object) === \"object\") {\n        const result: { [ key: string ]: any } = {};\n        for (const key in object) {\n            const value = object[key];\n            if (value === undefined) { continue; }\n            defineReadOnly(result, key, deepCopy(value));\n        }\n\n        return result;\n    }\n\n    return logger.throwArgumentError(`Cannot deepCopy ${ typeof(object) }`, \"object\", object);\n}\n\nexport function deepCopy<T>(object: T): T {\n    return _deepCopy(object);\n}\n\nexport class Description<T = any> {\n    constructor(info: { [ K in keyof T ]: T[K] }) {\n        for (const key in info) {\n            (<any>this)[key] = deepCopy(info[key]);\n        }\n    }\n}\n","\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { BytesLike, isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { Deferrable, Description, defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { AccessListish, Transaction } from \"@ethersproject/transactions\";\nimport { OnceBlockable } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\n\nexport type TransactionRequest = {\n    to?: string,\n    from?: string,\n    nonce?: BigNumberish,\n\n    gasLimit?: BigNumberish,\n    gasPrice?: BigNumberish,\n\n    data?: BytesLike,\n    value?: BigNumberish,\n    chainId?: number\n\n    type?: number;\n    accessList?: AccessListish;\n\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n}\n\nexport interface TransactionResponse extends Transaction {\n    hash: string;\n\n    // Only if a transaction has been mined\n    blockNumber?: number,\n    blockHash?: string,\n    timestamp?: number,\n\n    confirmations: number,\n\n    // Not optional (as it is in Transaction)\n    from: string;\n\n    // The raw transaction\n    raw?: string,\n\n    // This function waits until the transaction has been mined\n    wait: (confirmations?: number) => Promise<TransactionReceipt>\n};\n\nexport type BlockTag = string | number;\n\nexport interface _Block {\n    hash: string;\n    parentHash: string;\n    number: number;\n\n    timestamp: number;\n    nonce: string;\n    difficulty: number;\n    _difficulty: BigNumber;\n\n    gasLimit: BigNumber;\n    gasUsed: BigNumber;\n\n    miner: string;\n    extraData: string;\n\n    baseFeePerGas?: null | BigNumber;\n}\n\nexport interface Block extends _Block {\n    transactions: Array<string>;\n}\n\nexport interface BlockWithTransactions extends _Block {\n    transactions: Array<TransactionResponse>;\n}\n\n\nexport interface Log {\n    blockNumber: number;\n    blockHash: string;\n    transactionIndex: number;\n\n    removed: boolean;\n\n    address: string;\n    data: string;\n\n    topics: Array<string>;\n\n    transactionHash: string;\n    logIndex: number;\n}\n\nexport interface TransactionReceipt {\n    to: string;\n    from: string;\n    contractAddress: string,\n    transactionIndex: number,\n    root?: string,\n    gasUsed: BigNumber,\n    logsBloom: string,\n    blockHash: string,\n    transactionHash: string,\n    logs: Array<Log>,\n    blockNumber: number,\n    confirmations: number,\n    cumulativeGasUsed: BigNumber,\n    effectiveGasPrice: BigNumber,\n    byzantium: boolean,\n    type: number;\n    status?: number\n};\n\nexport interface FeeData {\n    lastBaseFeePerGas: null | BigNumber;\n    maxFeePerGas: null | BigNumber;\n    maxPriorityFeePerGas: null | BigNumber;\n    gasPrice: null | BigNumber;\n}\n\nexport interface EventFilter {\n    address?: string;\n    topics?: Array<string | Array<string> | null>;\n}\n\nexport interface Filter extends EventFilter {\n    fromBlock?: BlockTag,\n    toBlock?: BlockTag,\n}\n\nexport interface FilterByBlockHash extends EventFilter {\n    blockHash?: string;\n}\n\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\n\nexport abstract class ForkEvent extends Description {\n    readonly expiry: number;\n\n    readonly _isForkEvent?: boolean;\n\n    static isForkEvent(value: any): value is ForkEvent {\n        return !!(value && value._isForkEvent);\n    }\n}\n\nexport class BlockForkEvent extends ForkEvent {\n    readonly blockHash: string;\n\n    readonly _isBlockForkEvent?: boolean;\n\n    constructor(blockHash: string, expiry?: number) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\n\nexport class TransactionForkEvent extends ForkEvent {\n    readonly hash: string;\n\n    readonly _isTransactionOrderForkEvent?: boolean;\n\n    constructor(hash: string, expiry?: number) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\n\nexport class TransactionOrderForkEvent extends ForkEvent {\n    readonly beforeHash: string;\n    readonly afterHash: string;\n\n    constructor(beforeHash: string, afterHash: string, expiry?: number) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n\nexport type EventType = string | Array<string | Array<string>> | EventFilter | ForkEvent;\n\nexport type Listener = (...args: Array<any>) => void;\n\n///////////////////////////////\n// Exported Abstracts\nexport abstract class Provider implements OnceBlockable {\n\n    // Network\n    abstract getNetwork(): Promise<Network>;\n\n    // Latest State\n    abstract getBlockNumber(): Promise<number>;\n    abstract getGasPrice(): Promise<BigNumber>;\n    async getFeeData(): Promise<FeeData> {\n        const { block, gasPrice } = await resolveProperties({\n            block: this.getBlock(\"latest\"),\n            gasPrice: this.getGasPrice().catch((error) => {\n                // @TODO: Why is this now failing on Calaveras?\n                //console.log(error);\n                return null;\n            })\n        });\n\n        let lastBaseFeePerGas = null, maxFeePerGas = null, maxPriorityFeePerGas = null;\n\n        if (block && block.baseFeePerGas) {\n            // We may want to compute this more accurately in the future,\n            // using the formula \"check if the base fee is correct\".\n            // See: https://eips.ethereum.org/EIPS/eip-1559\n            lastBaseFeePerGas = block.baseFeePerGas;\n            maxPriorityFeePerGas = BigNumber.from(\"1500000000\");\n            maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n        }\n\n        return { lastBaseFeePerGas, maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n    }\n\n    // Account\n    abstract getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber>;\n    abstract getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number>;\n    abstract getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> ;\n    abstract getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n\n    // Execution\n    abstract sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse>;\n    abstract call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n    abstract estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber>;\n\n    // Queries\n    abstract getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block>;\n    abstract getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions>;\n    abstract getTransaction(transactionHash: string): Promise<TransactionResponse>;\n    abstract getTransactionReceipt(transactionHash: string): Promise<TransactionReceipt>;\n\n    // Bloom-filter Queries\n    abstract getLogs(filter: Filter): Promise<Array<Log>>;\n\n    // ENS\n    abstract resolveName(name: string | Promise<string>): Promise<null | string>;\n    abstract lookupAddress(address: string | Promise<string>): Promise<null | string>;\n\n    // Event Emitter (ish)\n    abstract on(eventName: EventType, listener: Listener): Provider;\n    abstract once(eventName: EventType, listener: Listener): Provider;\n    abstract emit(eventName: EventType, ...args: Array<any>): boolean\n    abstract listenerCount(eventName?: EventType): number;\n    abstract listeners(eventName?: EventType): Array<Listener>;\n    abstract off(eventName: EventType, listener?: Listener): Provider;\n    abstract removeAllListeners(eventName?: EventType): Provider;\n\n    // Alias for \"on\"\n    addListener(eventName: EventType, listener: Listener): Provider {\n        return this.on(eventName, listener);\n    }\n\n    // Alias for \"off\"\n    removeListener(eventName: EventType, listener: Listener): Provider {\n        return this.off(eventName, listener);\n    }\n\n    // @TODO: This *could* be implemented here, but would pull in events...\n    abstract waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt>;\n\n    readonly _isProvider: boolean;\n\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n\n    static isProvider(value: any): value is Provider {\n        return !!(value && value._isProvider);\n    }\n\n/*\n    static getResolver(network: Network, callable: CallTransactionable, namehash: string): string {\n        // No ENS...\n        if (!network.ensAddress) {\n            errors.throwError(\n                \"network does support ENS\",\n                errors.UNSUPPORTED_OPERATION,\n                { operation: \"ENS\", network: network.name }\n            );\n        }\n\n        // Not a namehash\n        if (!isHexString(namehash, 32)) {\n            errors.throwArgumentError(\"invalid name hash\", \"namehash\", namehash);\n        }\n\n        // keccak256(\"resolver(bytes32)\")\n        let data = \"0x0178b8bf\" + namehash.substring(2);\n        let transaction = { to: network.ensAddress, data: data };\n\n        return provider.call(transaction).then((data) => {\n            return provider.formatter.callAddress(data);\n        });\n    }\n\n    static resolveNamehash(network: Network, callable: CallTransactionable, namehash: string): string {\n        return this.getResolver(network, callable, namehash).then((resolverAddress) => {\n            if (!resolverAddress) { return null; }\n\n            // keccak256(\"addr(bytes32)\")\n            let data = \"0x3b3b57de\" + namehash(name).substring(2);\n            let transaction = { to: resolverAddress, data: data };\n            return callable.call(transaction).then((data) => {\n                return this.formatter.callAddress(data);\n            });\n\n        })\n    }\n*/\n}\n","export const version = \"abstract-provider/5.7.0\";\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Network, Networkish } from \"./types\";\n\nexport {\n    Network,\n    Networkish\n};\n\ntype DefaultProviderFunc = (providers: any, options?: any) => any;\n\ninterface Renetworkable extends DefaultProviderFunc {\n    renetwork: (network: Network) => DefaultProviderFunc;\n};\n\nfunction isRenetworkable(value: any): value is Renetworkable {\n    return (value && typeof(value.renetwork) === \"function\");\n}\n\nfunction ethDefaultProvider(network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (options == null) { options = { }; }\n        const providerList: Array<any> = [];\n\n        if (providers.InfuraProvider && options.infura !== \"-\") {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            } catch(error) { }\n        }\n\n        if (providers.EtherscanProvider && options.etherscan !== \"-\") {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            } catch(error) { }\n        }\n\n        if (providers.AlchemyProvider && options.alchemy !== \"-\") {\n            try {\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            } catch(error) { }\n        }\n\n        if (providers.PocketProvider && options.pocket !== \"-\") {\n            // These networks are currently faulty on Pocket as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            const skip = [ \"goerli\", \"ropsten\", \"rinkeby\" ];\n            try {\n                const provider = new providers.PocketProvider(network, options.pocket);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providers.CloudflareProvider && options.cloudflare !== \"-\") {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            } catch(error) { }\n        }\n\n        if (providers.AnkrProvider && options.ankr !== \"-\") {\n            try {\n                const skip = [ \"ropsten\" ];\n                const provider = new providers.AnkrProvider(network, options.ankr);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providerList.length === 0) { return null; }\n\n        if (providers.FallbackProvider) {\n            let quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            } else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n\n        return providerList[0];\n    };\n\n    func.renetwork = function(network: Network) {\n        return ethDefaultProvider(network);\n    };\n\n    return func;\n}\n\nfunction etcDefaultProvider(url: string, network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n\n        return null;\n    };\n\n    func.renetwork = function(network: Network) {\n        return etcDefaultProvider(url, network);\n    };\n\n    return func;\n}\n\nconst homestead: Network = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\n\nconst ropsten: Network = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\n\nconst classicMordor: Network = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\n\n// See: https://chainlist.org\nconst networks: { [name: string]: Network } = {\n    unspecified: { chainId: 0, name: \"unspecified\" },\n\n    homestead: homestead,\n    mainnet: homestead,\n\n    morden: { chainId: 2, name: \"morden\" },\n\n    ropsten: ropsten,\n    testnet: ropsten,\n\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n\n    kintsugi: { chainId: 1337702, name: \"kintsugi\" },\n\n\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n    },\n\n    classicMorden: { chainId: 62, name: \"classicMorden\" },\n\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n\n    xdai: { chainId: 100, name: \"xdai\" },\n\n    matic: {\n        chainId: 137,\n        name: \"matic\",\n        _defaultProvider: ethDefaultProvider(\"matic\")\n    },\n    maticmum: { chainId: 80001, name: \"maticmum\" },\n\n    optimism: {\n        chainId: 10,\n        name: \"optimism\",\n        _defaultProvider: ethDefaultProvider(\"optimism\")\n    },\n    \"optimism-kovan\": { chainId: 69, name: \"optimism-kovan\" },\n    \"optimism-goerli\": { chainId: 420, name: \"optimism-goerli\" },\n\n    arbitrum: { chainId: 42161, name: \"arbitrum\" },\n    \"arbitrum-rinkeby\": { chainId: 421611, name: \"arbitrum-rinkeby\" },\n    \"arbitrum-goerli\": { chainId: 421613, name: \"arbitrum-goerli\" },\n\n    bnb: { chainId: 56, name: \"bnb\" },\n    bnbt: { chainId: 97, name: \"bnbt\" },\n}\n\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nexport function getNetwork(network: Networkish): Network {\n    // No network (null)\n    if (network == null) { return null; }\n\n    if (typeof(network) === \"number\") {\n        for (const name in networks) {\n            const standard = networks[name];\n            if (standard.chainId === network) {\n                return {\n                    name: standard.name,\n                    chainId: standard.chainId,\n                    ensAddress: (standard.ensAddress || null),\n                    _defaultProvider: (standard._defaultProvider || null)\n                };\n            }\n        }\n\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n\n    if (typeof(network) === \"string\") {\n        const standard = networks[network];\n        if (standard == null) { return null; }\n        return {\n            name: standard.name,\n            chainId: standard.chainId,\n            ensAddress: standard.ensAddress,\n            _defaultProvider: (standard._defaultProvider || null)\n        };\n    }\n\n    const standard  = networks[network.name];\n\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof(network.chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    let defaultProvider: DefaultProviderFunc = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        } else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\n","export const version = \"networks/5.7.0\";\n","\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function decode(textData: string): Uint8Array {\n    textData = atob(textData);\n    const data = [];\n    for (let i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return arrayify(data);\n}\n\nexport function encode(data: BytesLike): string {\n    data = arrayify(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n\n\n","/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nexport class BaseX {\n    readonly alphabet: string;\n    readonly base: number;\n\n    _alphabetMap: { [ character: string ]: number };\n    _leader: string;\n\n    constructor(alphabet: string) {\n        defineReadOnly(this, \"alphabet\", alphabet);\n        defineReadOnly(this, \"base\", alphabet.length);\n\n        defineReadOnly(this, \"_alphabetMap\", { });\n        defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n\n        // pre-compute lookup table\n        for (let i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n\n    encode(value: BytesLike): string {\n        let source = arrayify(value);\n\n        if (source.length === 0) { return \"\"; }\n\n        let digits = [ 0 ]\n        for (let i = 0; i < source.length; ++i) {\n            let carry = source[i];\n            for (let j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n\n        let string = \"\"\n\n        // deal with leading zeros\n        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n\n        // convert digits to a string\n        for (let q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n\n        return string;\n    }\n\n    decode(value: string): Uint8Array {\n        if (typeof(value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n\n        let bytes: Array<number> = [];\n        if (value.length === 0) { return new Uint8Array(bytes); }\n\n        bytes.push(0);\n        for (let i = 0; i < value.length; i++) {\n            let byte = this._alphabetMap[value[i]];\n\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n\n            let carry = byte;\n            for (let j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n\n        // deal with leading zeros\n        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0)\n        }\n\n        return arrayify(new Uint8Array(bytes.reverse()))\n    }\n}\n\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\n\nexport { Base32, Base58 };\n\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n","\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n\nexport enum UnicodeNormalizationForm {\n    current  = \"\",\n    NFC      = \"NFC\",\n    NFD      = \"NFD\",\n    NFKC     = \"NFKC\",\n    NFKD     = \"NFKD\"\n};\n\nexport enum Utf8ErrorReason {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    UNEXPECTED_CONTINUE   = \"unexpected continuation byte\",\n\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    BAD_PREFIX            = \"bad codepoint prefix\",\n\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    OVERRUN               = \"string overrun\",\n\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    MISSING_CONTINUE      = \"missing continuation byte\",\n\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    OUT_OF_RANGE          = \"out of UTF-8 range\",\n\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    UTF16_SURROGATE       = \"UTF-16 surrogate\",\n\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    OVERLONG              = \"overlong representation\",\n};\n\n\nexport type Utf8ErrorFunc = (reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number) => number;\n\nfunction errorFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n    return logger.throwArgumentError(`invalid codepoint at offset ${ offset }; ${ reason }`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) { break; }\n            i++;\n        }\n        return i;\n    }\n\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n\n    // Nothing to skip\n    return 0;\n}\n\nfunction replaceFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n\n    // Put the replacement character into the output\n    output.push(0xfffd);\n\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\n// Common error handing strategies\nexport const Utf8ErrorFuncs: { [ name: string ]: Utf8ErrorFunc } = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes: BytesLike, onError?: Utf8ErrorFunc): Array<number> {\n    if (onError == null) { onError = Utf8ErrorFuncs.error; }\n\n    bytes = arrayify(bytes);\n\n    const result: Array<number> = [];\n    let i = 0;\n\n    // Invalid bytes are ignored\n    while(i < bytes.length) {\n\n        const c = bytes[i++];\n\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n\n        // 1110 xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n\n        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n\n        } else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            } else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            };\n\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n\n        // See above loop for invalid continuation byte\n        if (res === null) { continue; }\n\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        result.push(res);\n    }\n\n    return result;\n}\n\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Uint8Array {\n\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n\n        if (c < 0x80) {\n            result.push(c);\n\n        } else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n\n        } else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n\n        } else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n\n    return arrayify(result);\n};\n\nfunction escapeChar(value: number) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\n\nexport function _toEscapedUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8:  return \"\\\\b\";\n                case 9:  return \"\\\\t\";\n                case 10: return \"\\\\n\"\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\n\nexport function _toUtf8String(codePoints: Array<number>): string {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode(\n            (((codePoint >> 10) & 0x3ff) + 0xd800),\n            ((codePoint & 0x3ff) + 0xdc00)\n        );\n    }).join(\"\");\n}\n\nexport function toUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\nexport function toUtf8CodePoints(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Array<number> {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n","export const version = \"strings/5.7.0\";\n","\"use strict\";\n\nimport sha3 from \"js-sha3\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function keccak256(data: BytesLike): string {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n","export const version = \"hash/5.7.0\";\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nexport type Numbers = Uint8Array | Array<number>;\nexport type NextFunc = (...args: Array<any>) => number;\n\n// https://github.com/behnammodi/polyfill/blob/master/array.polyfill.js\nfunction flat(array: Array<any>, depth?: number): Array<any> {\n    if (depth == null) { depth = 1; }\n    const result: Array<any> = [];\n\n    const forEach = result.forEach;\n\n    const flatDeep = function (arr: Array<any>, depth: number) {\n        forEach.call(arr, function (val: any) {\n            if (depth > 0 && Array.isArray(val)) {\n                flatDeep(val, depth - 1);\n            } else {\n               result.push(val);\n            }\n        });\n    };\n\n    flatDeep(array, depth);\n    return result;\n}\n\nfunction fromEntries<T extends string | number | symbol = string | number | symbol, U = any>(array: Array<[T, U]>): Record<T, U> {\n    const result: Record<T, U> = <Record<T, U>>{ };\n    for (let i = 0; i < array.length; i++) {\n        const value = array[i];\n        result[value[0]] = value[1];\n    }\n    return result;\n}\n\nexport function decode_arithmetic(bytes: Numbers): Array<number> {\n\tlet pos = 0;\n\tfunction u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\n\t\n\t// decode the frequency table\n\tlet symbol_count = u16();\n\tlet total = 1;\n\tlet acc = [0, 1]; // first symbol has frequency 1\n\tfor (let i = 1; i < symbol_count; i++) {\n\t\tacc.push(total += u16());\n\t}\n\n\t// skip the sized-payload that the last 3 symbols index into\n\tlet skip = u16();\n\tlet pos_payload = pos;\n\tpos += skip;\n\n\tlet read_width = 0;\n\tlet read_buffer = 0; \n\tfunction read_bit() {\n\t\tif (read_width == 0) {\n\t\t\t// this will read beyond end of buffer\n\t\t\t// but (undefined|0) => zero pad\n\t\t\tread_buffer = (read_buffer << 8) | bytes[pos++];\n\t\t\tread_width = 8;\n\t\t}\n\t\treturn (read_buffer >> --read_width) & 1;\n\t}\n\n\tconst N = 31;\n\tconst FULL = 2**N;\n\tconst HALF = FULL >>> 1;\n\tconst QRTR = HALF >> 1;\n\tconst MASK = FULL - 1;\n\n\t// fill register\n\tlet register = 0;\n\tfor (let i = 0; i < N; i++) register = (register << 1) | read_bit();\n\n\tlet symbols = [];\n\tlet low = 0;\n\tlet range = FULL; // treat like a float\n\twhile (true) {\n\t\tlet value = Math.floor((((register - low + 1) * total) - 1) / range);\n\t\tlet start = 0;\n\t\tlet end = symbol_count;\n\t\twhile (end - start > 1) { // binary search\n\t\t\tlet mid = (start + end) >>> 1;\n\t\t\tif (value < acc[mid]) {\n\t\t\t\tend = mid;\n\t\t\t} else {\n\t\t\t\tstart = mid;\n\t\t\t}\n\t\t}\n\t\tif (start == 0) break; // first symbol is end mark\n\t\tsymbols.push(start);\n\t\tlet a = low + Math.floor(range * acc[start]   / total);\n\t\tlet b = low + Math.floor(range * acc[start+1] / total) - 1\n\t\twhile (((a ^ b) & HALF) == 0) {\n\t\t\tregister = (register << 1) & MASK | read_bit();\n\t\t\ta = (a << 1) & MASK;\n\t\t\tb = (b << 1) & MASK | 1;\n\t\t}\n\t\twhile (a & ~b & QRTR) {\n\t\t\tregister = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\n\t\t\ta = (a << 1) ^ HALF;\n\t\t\tb = ((b ^ HALF) << 1) | HALF | 1;\n\t\t}\n\t\tlow = a;\n\t\trange = 1 + b - a;\n\t}\n\tlet offset = symbol_count - 4;\n\treturn symbols.map(x => { // index into payload\n\t\tswitch (x - offset) {\n\t\t\tcase 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 1: return offset + bytes[pos_payload++];\n\t\t\tdefault: return x - 1;\n\t\t}\n\t});\n}\t\n\n\n// returns an iterator which returns the next symbol\nexport function read_payload(v: Numbers): NextFunc {\n\tlet pos = 0;\n\treturn () => v[pos++];\n}\nexport function read_compressed_payload(bytes: Numbers): NextFunc {\n\treturn read_payload(decode_arithmetic(bytes));\n}\n\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\nexport function signed(i: number): number { \n\treturn (i & 1) ? (~i >> 1) : (i >> 1);\n}\n\nfunction read_counts(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0; i < n; i++) v[i] = 1 + next();\n\treturn v;\n}\n\nfunction read_ascending(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = -1; i < n; i++) v[i] = x += 1 + next();\n\treturn v;\n}\n\nfunction read_deltas(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = 0; i < n; i++) v[i] = x += signed(next());\n\treturn v;\n}\n\nexport function read_member_array(next: NextFunc, lookup?: Record<number, number>) {\n    let v = read_ascending(next(), next);\n    let n = next();\n    let vX = read_ascending(n, next);\n    let vN = read_counts(n, next);\n    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < vN[i]; j++) {\n            v.push(vX[i] + j);\n        }\n    }\n    return lookup ? v.map(x => lookup[x]) : v;\n}\n\n// returns array of \n// [x, ys] => single replacement rule\n// [x, ys, n, dx, dx] => linear map\nexport function read_mapped_map(next: NextFunc): Record<number, Array<number>> {\n\tlet ret = [];\n\twhile (true) {\n\t\tlet w = next();\n\t\tif (w == 0) break;\n\t\tret.push(read_linear_table(w, next));\n\t}\n\twhile (true) {\n\t\tlet w = next() - 1;\n\t\tif (w < 0) break;\n\t\tret.push(read_replacement_table(w, next));\n\t}\n\treturn fromEntries<number, Array<number>>(flat(ret));\n}\n\nexport function read_zero_terminated_array(next: NextFunc): Array<number> {\n\tlet v = [];\n\twhile (true) {\n\t\tlet i = next();\n\t\tif (i == 0) break;\n\t\tv.push(i);\n\t}\n\treturn v;\n}\n\nfunction read_transposed(n: number, w: number, next: NextFunc): Array<Array<number>> {\n    let m = Array(n).fill(undefined).map(() => []);\n    for (let i = 0; i < w; i++) {\n        read_deltas(n, next).forEach((x, j) => m[j].push(x));\n    }\n    return m;\n}\n\n\nfunction read_linear_table(w: number, next: NextFunc): Array<Array<number | Array<number>>> {\n\tlet dx = 1 + next();\n\tlet dy = next();\n\tlet vN = read_zero_terminated_array(next);\n\tlet m = read_transposed(vN.length, 1+w, next);\n\treturn flat(m.map((v, i) => {\n\t  const x = v[0], ys = v.slice(1);\n\t\t//let [x, ...ys] = v;\n\t\t//return Array(vN[i]).fill().map((_, j) => {\n\t\treturn Array(vN[i]).fill(undefined).map((_, j) => {\n\t\t\tlet j_dy = j * dy;\n\t\t\treturn [x + j * dx, ys.map(y => y + j_dy)];\n\t\t});\n\t}));\n}\n\nfunction read_replacement_table(w: number, next: NextFunc): Array<[ number, Array<number> ]> {\n\tlet n = 1 + next();\n\tlet m = read_transposed(n, 1+w, next);\n\treturn m.map(v => [v[0], v.slice(1)]);\n}\n\nexport type Branch = {\n    set: Set<number>;\n    node: Node;\n};\n\nexport type Node = {\n    branches: Array<Branch>;\n    valid: number;\n    fe0f: boolean;\n    save: boolean;\n    check: boolean;\n};\n\nexport function read_emoji_trie(next: NextFunc): Node {\n\tlet sorted = read_member_array(next).sort((a, b) => a - b);\n\treturn read();\n\tfunction read(): Node {\n\t\tlet branches = [];\n\t\twhile (true) {\n\t\t\tlet keys = read_member_array(next, sorted);\n\t\t\tif (keys.length == 0) break;\n\t\t\tbranches.push({set: new Set(keys), node: read()});\n\t\t}\n    branches.sort((a, b) => b.set.size - a.set.size); // sort by likelihood\n \t\tlet temp = next();\n \t\tlet valid = temp % 3;\n \t\ttemp = (temp / 3)|0;\n \t\tlet fe0f = !!(temp & 1);\n \t\ttemp >>= 1;\n \t\tlet save = temp == 1;\n \t\tlet check = temp == 2;\n \t\treturn {branches, valid, fe0f, save, check};\n\t}\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { toUtf8CodePoints } from \"@ethersproject/strings\";\n\nimport { getData } from './include.js';\nconst r = getData();\n\nimport {read_member_array, read_mapped_map, read_emoji_trie} from './decoder.js';\n\n// @TODO: This should be lazily loaded\n\nconst VALID = new Set(read_member_array(r));\nconst IGNORED = new Set(read_member_array(r));\nconst MAPPED = read_mapped_map(r);\nconst EMOJI_ROOT = read_emoji_trie(r);\n//const NFC_CHECK = new Set(read_member_array(r, Array.from(VALID.values()).sort((a, b) => a - b)));\n\n//const STOP = 0x2E;\nconst HYPHEN = 0x2D;\nconst UNDERSCORE = 0x5F;\n\nfunction explode_cp(name: string): Array<number> {\n    return toUtf8CodePoints(name);\n}\n\nfunction filter_fe0f(cps: Array<number>): Array<number> {\n    return cps.filter(cp => cp != 0xFE0F);\n}\n\nexport function ens_normalize_post_check(name: string): string {\n\tfor (let label of name.split('.')) {\n\t\tlet cps = explode_cp(label);\n\t\ttry {\n\t\t\tfor (let i = cps.lastIndexOf(UNDERSCORE) - 1; i >= 0; i--) {\n\t\t\t\tif (cps[i] !== UNDERSCORE) {\n\t\t\t\t\tthrow new Error(`underscore only allowed at start`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (cps.length >= 4 && cps.every(cp => cp < 0x80) && cps[2] === HYPHEN && cps[3] === HYPHEN) {\n\t\t\t\tthrow new Error(`invalid label extension`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthrow new Error(`Invalid label \"${label}\": ${err.message}`);\n\t\t}\n\t}\n\treturn name;\n}\n\nexport function ens_normalize(name: string): string {\n\treturn ens_normalize_post_check(normalize(name, filter_fe0f));\n}\n\nfunction normalize(name: string, emoji_filter: (a: Array<number>) => Array<number>): string {\n\tlet input = explode_cp(name).reverse(); // flip for pop\n\tlet output = [];\n\twhile (input.length) {\t\t\n\t\tlet emoji = consume_emoji_reversed(input);\n\t\tif (emoji) {\n\t\t\toutput.push(...emoji_filter(emoji));\n\t\t\tcontinue;\n\t\t}\n\t\tlet cp = input.pop();\n\t\tif (VALID.has(cp)) {\n\t\t\toutput.push(cp);\n\t\t\tcontinue;\n\t\t} \n\t\tif (IGNORED.has(cp)) {\n\t\t\tcontinue;\n\t\t}\n\t\tlet cps = MAPPED[cp];\n\t\tif (cps) {\n\t\t\toutput.push(...cps);\n\t\t\tcontinue;\n\t\t}\n\t\tthrow new Error(`Disallowed codepoint: 0x${cp.toString(16).toUpperCase()}`);\n\t}\n\treturn ens_normalize_post_check(nfc(String.fromCodePoint(...output)));\n}\n\nfunction nfc(s: string): string {\n    return s.normalize('NFC');\n}\n\nfunction consume_emoji_reversed(cps: Array<number>, eaten?: Array<number>) {\n\tlet node = EMOJI_ROOT;\n\tlet emoji;\n\tlet saved;\n\tlet stack = [];\n\tlet pos = cps.length;\n\tif (eaten) eaten.length = 0; // clear input buffer (if needed)\n\twhile (pos) {\n\t\tlet cp = cps[--pos];\n\t\tnode = node.branches.find(x => x.set.has(cp))?.node;\n\t\tif (!node) break;\n\t\tif (node.save) { // remember\n\t\t\tsaved = cp;\n\t\t} else if (node.check) { // check exclusion\n\t\t\tif (cp === saved) break;\n\t\t}\n\t\tstack.push(cp);\n\t\tif (node.fe0f) {\n\t\t\tstack.push(0xFE0F);\n\t\t\tif (pos > 0 && cps[pos - 1] == 0xFE0F) pos--; // consume optional FE0F\n\t\t}\n\t\tif (node.valid) { // this is a valid emoji (so far)\n\t\t\temoji = stack.slice(); // copy stack\n\t\t\tif (node.valid == 2) emoji.splice(1, 1); // delete FE0F at position 1 (RGI ZWJ don't follow spec!)\n\t\t\tif (eaten) eaten.push(...cps.slice(pos).reverse()); // copy input (if needed)\n\t\t\tcps.length = pos; // truncate\n\t\t}\n\t}\n\treturn emoji;\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { decode } from \"@ethersproject/base64\";\n\nimport {read_compressed_payload} from './decoder.js';\n\nexport function getData(): () => number {\n    return read_compressed_payload(decode(''));\n}\n\n","import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { ens_normalize } from \"./ens-normalize/lib\";\n\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\n\nfunction checkComponent(comp: Uint8Array): Uint8Array {\n    if (comp.length === 0) { throw new Error(\"invalid ENS name; empty component\"); }\n    return comp;\n}\n\nfunction ensNameSplit(name: string): Array<Uint8Array> {\n    const bytes = toUtf8Bytes(ens_normalize(name));\n    const comps: Array<Uint8Array> = [ ];\n\n    if (name.length === 0) { return comps; }\n\n    let last = 0;\n    for (let i = 0; i < bytes.length; i++) {\n        const d = bytes[i];\n\n        // A separator (i.e. \".\"); copy this component\n        if (d === 0x2e) {\n            comps.push(checkComponent(bytes.slice(last, i)));\n            last = i + 1;\n        }\n    }\n\n    // There was a stray separator at the end of the name\n    if (last >= bytes.length) { throw new Error(\"invalid ENS name; empty component\"); }\n\n    comps.push(checkComponent(bytes.slice(last)));\n    return comps;\n}\n\nexport function ensNormalize(name: string): string {\n    return ensNameSplit(name).map((comp) => toUtf8String(comp)).join(\".\");\n}\n\nexport function isValidName(name: string): boolean {\n    try {\n        return (ensNameSplit(name).length !== 0);\n    } catch (error) { }\n    return false;\n}\n\nexport function namehash(name: string): string {\n    /* istanbul ignore if */\n    if (typeof(name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n\n    let result: string | Uint8Array = Zeros;\n\n    const comps = ensNameSplit(name);\n    while (comps.length) {\n        result = keccak256(concat([result, keccak256(comps.pop())]));\n    }\n\n    return hexlify(result);\n}\n\nexport function dnsEncode(name: string): string {\n    return hexlify(concat(ensNameSplit(name).map((comp) => {\n        // DNS does not allow components over 63 bytes in length\n        if (comp.length > 63) {\n            throw new Error(\"invalid DNS encoded entry; length exceeds 63 bytes\");\n        }\n\n        const bytes = new Uint8Array(comp.length + 1);\n        bytes.set(comp, 1);\n        bytes[0] = bytes.length - 1;\n        return bytes;\n\n    }))) + \"00\";\n}\n","\"use strict\";\n\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { SupportedAlgorithm } from \"./types\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function ripemd160(data: BytesLike): string {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha256(data: BytesLike): string {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha512(data: BytesLike): string {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function computeHmac(algorithm: SupportedAlgorithm, key: BytesLike, data: BytesLike): string {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n\n    return \"0x\" + hash.hmac((<any>hash)[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n\n","export const version = \"sha2/5.7.0\";\n","export const version = \"web/5.7.0\";\n","\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport type { GetUrlResponse, Options } from \"./types\";\n\nexport { GetUrlResponse, Options };\n\nexport async function getUrl(href: string, options?: Options): Promise<GetUrlResponse> {\n    if (options == null) { options = { }; }\n\n    const request: RequestInit = {\n        method: (options.method || \"GET\"),\n        headers: (options.headers || { }),\n        body: (options.body || undefined),\n    };\n\n    if (options.skipFetchSetup !== true) {\n        request.mode = <RequestMode>\"cors\";              // no-cors, cors, *same-origin\n        request.cache = <RequestCache>\"no-cache\";        // *default, no-cache, reload, force-cache, only-if-cached\n        request.credentials = <RequestCredentials>\"same-origin\";  // include, *same-origin, omit\n        request.redirect = <RequestRedirect>\"follow\";    // manual, *follow, error\n        request.referrer = \"client\";                     // no-referrer, *client\n    };\n\n    if (options.fetchOptions != null) {\n        const opts = options.fetchOptions;\n        if (opts.mode) { request.mode = <RequestMode>(opts.mode); }\n        if (opts.cache) { request.cache = <RequestCache>(opts.cache); }\n        if (opts.credentials) { request.credentials = <RequestCredentials>(opts.credentials); }\n        if (opts.redirect) { request.redirect = <RequestRedirect>(opts.redirect); }\n        if (opts.referrer) { request.referrer = opts.referrer; }\n    }\n\n    const response = await fetch(href, request);\n    const body = await response.arrayBuffer();\n\n    const headers: { [ name: string ]: string } = { };\n    if (response.headers.forEach) {\n        response.headers.forEach((value, key) => {\n            headers[key.toLowerCase()] = value;\n        });\n    } else {\n        (<() => Array<string>>((<any>(response.headers)).keys))().forEach((key) => {\n            headers[key.toLowerCase()] = response.headers.get(key);\n        });\n    }\n\n    return {\n        headers: headers,\n        statusCode: response.status,\n        statusMessage: response.statusText,\n        body: arrayify(new Uint8Array(body)),\n    }\n}\n","\"use strict\";\n\nimport { decode as base64Decode, encode as base64Encode } from \"@ethersproject/base64\";\nimport { hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { getUrl, GetUrlResponse, Options } from \"./geturl\";\n\nfunction staller(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\nfunction bodyify(value: any, type: string): string {\n    if (value == null) { return null; }\n\n    if (typeof(value) === \"string\") { return value; }\n\n    if (isBytesLike(value)) {\n        if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n                return toUtf8String(value);\n            } catch (error) { };\n        }\n        return hexlify(value);\n    }\n\n    return value;\n}\n\n// Exported Types\nexport type ConnectionInfo = {\n    url: string,\n    headers?: { [key: string]: string | number }\n\n    user?: string,\n    password?: string,\n\n    allowInsecureAuthentication?: boolean,\n    allowGzip?: boolean,\n\n    throttleLimit?: number,\n    throttleSlotInterval?: number;\n    throttleCallback?: (attempt: number, url: string) => Promise<boolean>,\n\n    skipFetchSetup?: boolean;\n    fetchOptions?: Record<string, string>;\n    errorPassThrough?: boolean;\n\n    timeout?: number,\n};\n\nexport interface OnceBlockable {\n    once(eventName: \"block\", handler: () => void): void;\n}\n\nexport interface OncePollable {\n    once(eventName: \"poll\", handler: () => void): void;\n}\n\nexport type PollOptions = {\n    timeout?: number,\n    floor?: number,\n    ceiling?: number,\n    interval?: number,\n    retryLimit?: number,\n    onceBlock?: OnceBlockable\n    oncePoll?: OncePollable\n};\n\nexport type FetchJsonResponse = {\n    statusCode: number;\n    headers: { [ header: string ]: string };\n};\n\n\ntype Header = { key: string, value: string };\n\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nexport function _fetchData<T = Uint8Array>(connection: string | ConnectionInfo, body?: Uint8Array, processFunc?: (value: Uint8Array, response: FetchJsonResponse) => T): Promise<T> {\n\n    // How many times to retry in the event of a throttle\n    const attemptLimit = (typeof(connection) === \"object\" && connection.throttleLimit != null) ? connection.throttleLimit: 12;\n    logger.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0),\n        \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n\n    const throttleCallback = ((typeof(connection) === \"object\") ? connection.throttleCallback: null);\n    const throttleSlotInterval = ((typeof(connection) === \"object\" && typeof(connection.throttleSlotInterval) === \"number\") ? connection.throttleSlotInterval: 100);\n    logger.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0),\n        \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n\n    const errorPassThrough = ((typeof(connection) === \"object\") ? !!(connection.errorPassThrough): false);\n\n    const headers: { [key: string]: Header } = { };\n\n    let url: string = null;\n\n    // @TODO: Allow ConnectionInfo to override some of these values\n    const options: Options = {\n        method: \"GET\",\n    };\n\n    let allow304 = false;\n\n    let timeout = 2 * 60 * 1000;\n\n    if (typeof(connection) === \"string\") {\n        url = connection;\n\n    } else if (typeof(connection) === \"object\") {\n        if (connection == null || connection.url == null) {\n            logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n        }\n\n        url = connection.url;\n\n        if (typeof(connection.timeout) === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n\n        if (connection.headers) {\n            for (const key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n                if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                    allow304 = true;\n                }\n            }\n        }\n\n        options.allowGzip = !!connection.allowGzip;\n\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n                logger.throwError(\n                    \"basic authentication requires a secure https url\",\n                    Logger.errors.INVALID_ARGUMENT,\n                    { argument: \"url\", url: url, user: connection.user, password: \"[REDACTED]\" }\n                );\n            }\n\n            const authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n                key: \"Authorization\",\n                value: \"Basic \" + base64Encode(toUtf8Bytes(authorization))\n            };\n        }\n\n        if (connection.skipFetchSetup != null) {\n            options.skipFetchSetup = !!connection.skipFetchSetup;\n        }\n\n        if (connection.fetchOptions != null) {\n            options.fetchOptions = shallowCopy(connection.fetchOptions);\n        }\n    }\n\n    const reData = new RegExp(\"^data:([a-z0-9-]+/[a-z0-9-]+);base64,(.*)$\", \"i\");\n    const dataMatch = ((url) ? url.match(reData): null);\n    if (dataMatch) {\n        try {\n            const response = {\n                statusCode: 200,\n                statusMessage: \"OK\",\n                headers: { \"content-type\": dataMatch[1] },\n                body: base64Decode(dataMatch[2])\n            };\n\n            let result: T = <T><unknown>response.body;\n            if (processFunc) {\n                result = processFunc(response.body, response);\n            }\n            return Promise.resolve(<T><unknown>result);\n\n        } catch (error) {\n            logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                body: bodyify(dataMatch[1], dataMatch[2]),\n                error: error,\n                requestBody: null,\n                requestMethod: \"GET\",\n                url: url\n            });\n        }\n    }\n\n    if (body) {\n        options.method = \"POST\";\n        options.body = body;\n        if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n        }\n        if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n        }\n    }\n\n    const flatHeaders: { [ key: string ]: string } = { };\n    Object.keys(headers).forEach((key) => {\n        const header = headers[key];\n        flatHeaders[header.key] = header.value;\n    });\n    options.headers = flatHeaders;\n\n    const runningTimeout = (function() {\n        let timer: NodeJS.Timer = null;\n        const promise: Promise<never> = new Promise(function(resolve, reject) {\n            if (timeout) {\n                timer = setTimeout(() => {\n                    if (timer == null) { return; }\n                    timer = null;\n\n                    reject(logger.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        timeout: timeout,\n                        url: url\n                    }));\n                }, timeout);\n            }\n        });\n\n        const cancel = function() {\n            if (timer == null) { return; }\n            clearTimeout(timer);\n            timer = null;\n        }\n\n        return { promise, cancel };\n    })();\n\n    const runningFetch = (async function() {\n\n        for (let attempt = 0; attempt < attemptLimit; attempt++) {\n            let response: GetUrlResponse = null;\n\n            try {\n                response = await getUrl(url, options);\n\n                if (attempt < attemptLimit) {\n                    if (response.statusCode === 301 || response.statusCode === 302) {\n                        // Redirection; for now we only support absolute locataions\n                        const location = response.headers.location || \"\";\n                        if (options.method === \"GET\" && location.match(/^https:/)) {\n                            url = response.headers.location;\n                            continue;\n                        }\n\n                    } else if (response.statusCode === 429) {\n                        // Exponential back-off throttling\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            let stall = 0;\n\n                            const retryAfter = response.headers[\"retry-after\"];\n                            if (typeof(retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                                stall = parseInt(retryAfter) * 1000;\n                            } else {\n                                stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            }\n\n                            //console.log(\"Stalling 429\");\n                            await staller(stall);\n                            continue;\n                        }\n                    }\n                }\n\n            } catch (error) {\n                response = (<any>error).response;\n                if (response == null) {\n                    runningTimeout.cancel();\n                    logger.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        serverError: error,\n                        url: url\n                    });\n                }\n            }\n\n\n            let body = response.body;\n\n            if (allow304 && response.statusCode === 304) {\n                body = null;\n            } else if (!errorPassThrough && (response.statusCode < 200 || response.statusCode >= 300)) {\n                runningTimeout.cancel();\n                logger.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n                    status: response.statusCode,\n                    headers: response.headers,\n                    body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                    requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                    requestMethod: options.method,\n                    url: url\n                });\n            }\n\n            if (processFunc) {\n                try {\n                    const result = await processFunc(body, response);\n                    runningTimeout.cancel();\n                    return result;\n\n                } catch (error) {\n                    // Allow the processFunc to trigger a throttle\n                    if (error.throttleRetry && attempt < attemptLimit) {\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            //console.log(\"Stalling callback\");\n                            await staller(timeout);\n                            continue;\n                        }\n                    }\n\n                    runningTimeout.cancel();\n                    logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                        body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                        error: error,\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        url: url\n                    });\n                }\n            }\n\n            runningTimeout.cancel();\n\n            // If we had a processFunc, it either returned a T or threw above.\n            // The \"body\" is now a Uint8Array.\n            return <T>(<unknown>body);\n        }\n\n        return logger.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n            requestMethod: options.method,\n            url: url\n        });\n    })();\n\n    return Promise.race([ runningTimeout.promise, runningFetch ]);\n}\n\nexport function fetchJson(connection: string | ConnectionInfo, json?: string, processFunc?: (value: any, response: FetchJsonResponse) => any): Promise<any> {\n    let processJsonFunc = (value: Uint8Array, response: FetchJsonResponse) => {\n        let result: any = null;\n        if (value != null) {\n            try {\n                result = JSON.parse(toUtf8String(value));\n            } catch (error) {\n                logger.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n                    body: value,\n                    error: error\n                });\n            }\n        }\n\n        if (processFunc) {\n            result = processFunc(result, response);\n        }\n\n        return result;\n    }\n\n    // If we have json to send, we must\n    // - add content-type of application/json (unless already overridden)\n    // - convert the json to bytes\n    let body: Uint8Array = null;\n    if (json != null) {\n        body = toUtf8Bytes(json);\n\n        // Create a connection with the content-type set for JSON\n        const updated: ConnectionInfo = (typeof(connection) === \"string\") ? ({ url: connection }): shallowCopy(connection);\n        if (updated.headers) {\n            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === \"content-type\")).length) !== 0;\n            if (!hasContentType) {\n                updated.headers = shallowCopy(updated.headers);\n                updated.headers[\"content-type\"] = \"application/json\";\n            }\n        } else {\n            updated.headers = { \"content-type\": \"application/json\" };\n        }\n        connection = updated;\n    }\n\n    return _fetchData<any>(connection, body, processJsonFunc);\n}\n\nexport function poll<T>(func: () => Promise<T>, options?: PollOptions): Promise<T> {\n    if (!options) { options = {}; }\n    options = shallowCopy(options);\n    if (options.floor == null) { options.floor = 0; }\n    if (options.ceiling == null) { options.ceiling = 10000; }\n    if (options.interval == null) { options.interval = 250; }\n\n    return new Promise(function(resolve, reject) {\n\n        let timer: NodeJS.Timer = null;\n        let done: boolean = false;\n\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        const cancel = (): boolean => {\n            if (done) { return false; }\n            done = true;\n            if (timer) { clearTimeout(timer); }\n            return true;\n        };\n\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                if (cancel()) { reject(new Error(\"timeout\")); }\n            }, options.timeout)\n        }\n\n        const retryLimit = options.retryLimit;\n\n        let attempt = 0;\n        function check() {\n            return func().then(function(result) {\n\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) { resolve(result); }\n\n                } else if (options.oncePoll) {\n                    options.oncePoll.once(\"poll\", check);\n\n                } else if (options.onceBlock) {\n                    options.onceBlock.once(\"block\", check);\n\n                // Otherwise, exponential back-off (up to 10s) our next request\n                } else if (!done) {\n                    attempt++;\n                    if (attempt > retryLimit) {\n                        if (cancel()) { reject(new Error(\"retry limit reached\")); }\n                        return;\n                    }\n\n                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) { timeout = options.floor; }\n                    if (timeout > options.ceiling) { timeout = options.ceiling; }\n\n                    setTimeout(check, timeout);\n                }\n\n                return null;\n            }, function(error) {\n                if (cancel()) { reject(error); }\n            });\n        }\n        check();\n    });\n}\n\n","export const version = \"providers/5.7.0\";\n","\"use strict\";\n\n//See: https://github.com/ethereum/wiki/wiki/RLP\n\nimport { arrayify, BytesLike, hexlify, isBytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction arrayifyInteger(value: number): Array<number> {\n    const result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\n\nfunction unarrayifyInteger(data: Uint8Array, offset: number, length: number): number {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\n\nfunction _encode(object: Array<any> | string): Array<number> {\n    if (Array.isArray(object)) {\n        let payload: Array<number> = [];\n        object.forEach(function(child) {\n            payload = payload.concat(_encode(child));\n        });\n\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length)\n            return payload;\n        }\n\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n\n        return length.concat(payload);\n\n    }\n\n    if (!isBytesLike(object)) {\n        logger.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n    }\n\n    const data: Array<number> = Array.prototype.slice.call(arrayify(object));\n\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n\n    } else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n\n    return length.concat(data);\n}\n\nexport function encode(object: any): string {\n    return hexlify(_encode(object));\n}\n\ntype Decoded = {\n    result: any;\n    consumed: number;\n};\n\nfunction _decodeChildren(data: Uint8Array, offset: number, childOffset: number, length: number): Decoded {\n    const result = [];\n\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n\n        result.push(decoded.result);\n\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            logger.throwError(\"child data too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n    }\n\n    return {consumed: (1 + length), result: result};\n}\n\n// returns { consumed: number, result: Object }\nfunction _decode(data: Uint8Array, offset: number): { consumed: number, result: any } {\n    if (data.length === 0) {\n        logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, { });\n    }\n\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data short segment too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data long segment too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n\n    } else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        return _decodeChildren(data, offset, offset + 1, length);\n\n    } else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result }\n\n    } else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result }\n    }\n    return { consumed: 1, result: hexlify(data[offset]) };\n}\n\nexport function decode(data: BytesLike): any {\n    const bytes = arrayify(data);\n    const decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        logger.throwArgumentError(\"invalid rlp data\", \"data\", data);\n    }\n    return decoded.result;\n}\n\n","export const version = \"rlp/5.7.0\";\n","export const version = \"address/5.7.0\";\n","\"use strict\";\n\nimport { arrayify, BytesLike, concat, hexDataLength, hexDataSlice, isHexString, stripZeros } from \"@ethersproject/bytes\";\nimport { BigNumber, BigNumberish, _base16To36, _base36To16 } from \"@ethersproject/bignumber\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { encode } from \"@ethersproject/rlp\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction getChecksumAddress(address: string): string {\n    if (!isHexString(address, 20)) {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    address = address.toLowerCase();\n\n    const chars = address.substring(2).split(\"\");\n\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n\n    const hashed = arrayify(keccak256(expanded));\n\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n\n    return \"0x\" + chars.join(\"\");\n}\n\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER: number = 0x1fffffffffffff;\n\nfunction log10(x: number): number {\n    if (Math.log10) { return Math.log10(x); }\n    return Math.log(x) / Math.LN10;\n}\n\n\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n\n// Create lookup table\nconst ibanLookup: { [character: string]: string } = { };\nfor (let i = 0; i < 10; i++) { ibanLookup[String(i)] = String(i); }\nfor (let i = 0; i < 26; i++) { ibanLookup[String.fromCharCode(65 + i)] = String(10 + i); }\n\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\n\nfunction ibanChecksum(address: string): string {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits){\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) { checksum = \"0\" + checksum; }\n\n    return checksum;\n};\n\nexport function getAddress(address: string): string {\n    let result = null;\n\n    if (typeof(address) !== \"string\") {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") { address = \"0x\" + address; }\n\n        result = getChecksumAddress(address);\n\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n\n    // Maybe ICAP? (we only support direct mode)\n    } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n\n        result = _base36To16(address.substring(4));\n        while (result.length < 40) { result = \"0\" + result; }\n        result = getChecksumAddress(\"0x\" + result);\n\n    } else {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    return result;\n}\n\nexport function isAddress(address: string): boolean {\n    try {\n        getAddress(address);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function getIcapAddress(address: string): string {\n    let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    while (base36.length < 30) { base36 = \"0\" + base36; }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nexport function getContractAddress(transaction: { from: string, nonce: BigNumberish }) {\n    let from: string = null;\n    try {\n        from = getAddress(transaction.from);\n    } catch (error) {\n        logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n\n    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n\n    return getAddress(hexDataSlice(keccak256(encode([ from, nonce ])), 12));\n}\n\nexport function getCreate2Address(from: string, salt: BytesLike, initCodeHash: BytesLike): string {\n    if (hexDataLength(salt) !== 32) {\n        logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n    }\n    if (hexDataLength(initCodeHash) !== 32) {\n        logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n    }\n    return getAddress(hexDataSlice(keccak256(concat([ \"0xff\", getAddress(from), salt, initCodeHash ])), 12))\n}\n","export const AddressZero = \"0x0000000000000000000000000000000000000000\";\n\n","import { BigNumber } from \"@ethersproject/bignumber\";\n\nconst NegativeOne: BigNumber = (/*#__PURE__*/BigNumber.from(-1));\nconst Zero: BigNumber = (/*#__PURE__*/BigNumber.from(0));\nconst One: BigNumber = (/*#__PURE__*/BigNumber.from(1));\nconst Two: BigNumber = (/*#__PURE__*/BigNumber.from(2));\nconst WeiPerEther: BigNumber = (/*#__PURE__*/BigNumber.from(\"1000000000000000000\"));\nconst MaxUint256: BigNumber = (/*#__PURE__*/BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\nconst MinInt256: BigNumber = (/*#__PURE__*/BigNumber.from(\"-0x8000000000000000000000000000000000000000000000000000000000000000\"));\nconst MaxInt256: BigNumber = (/*#__PURE__*/BigNumber.from(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\nexport {\n    NegativeOne,\n    Zero,\n    One,\n    Two,\n    WeiPerEther,\n    MaxUint256,\n    MinInt256,\n    MaxInt256,\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","import _ec from \"elliptic\";\nvar EC = _ec.ec;\nexport { EC };\n//# sourceMappingURL=elliptic.js.map","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","\"use strict\";\n\nimport { EC } from \"./elliptic\";\n\nimport { arrayify, BytesLike, hexDataLength, hexlify, hexZeroPad, Signature, SignatureLike, splitSignature } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nlet _curve: EC = null\nfunction getCurve() {\n    if (!_curve) {\n        _curve = new EC(\"secp256k1\");\n    }\n    return _curve;\n}\n\nexport class SigningKey {\n\n    readonly curve: string;\n\n    readonly privateKey: string;\n    readonly publicKey: string;\n    readonly compressedPublicKey: string;\n\n    //readonly address: string;\n\n    readonly _isSigningKey: boolean;\n\n    constructor(privateKey: BytesLike) {\n        defineReadOnly(this, \"curve\", \"secp256k1\");\n\n        defineReadOnly(this, \"privateKey\", hexlify(privateKey));\n        if (hexDataLength(this.privateKey) !== 32) {\n            logger.throwArgumentError(\"invalid private key\", \"privateKey\", \"[[ REDACTED ]]\");\n        }\n\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n\n        defineReadOnly(this, \"publicKey\", \"0x\" + keyPair.getPublic(false, \"hex\"));\n        defineReadOnly(this, \"compressedPublicKey\", \"0x\" + keyPair.getPublic(true, \"hex\"));\n\n        defineReadOnly(this, \"_isSigningKey\", true);\n    }\n\n    _addPoint(other: BytesLike): string {\n        const p0 =  getCurve().keyFromPublic(arrayify(this.publicKey));\n        const p1 =  getCurve().keyFromPublic(arrayify(other));\n        return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n    }\n\n    signDigest(digest: BytesLike): Signature {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const digestBytes = arrayify(digest);\n        if (digestBytes.length !== 32) {\n            logger.throwArgumentError(\"bad digest length\", \"digest\", digest);\n        }\n        const signature = keyPair.sign(digestBytes, { canonical: true });\n        return splitSignature({\n            recoveryParam: signature.recoveryParam,\n            r: hexZeroPad(\"0x\" + signature.r.toString(16), 32),\n            s: hexZeroPad(\"0x\" + signature.s.toString(16), 32),\n        })\n    }\n\n    computeSharedSecret(otherKey: BytesLike): string {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));\n        return hexZeroPad(\"0x\" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n    }\n\n    static isSigningKey(value: any): value is SigningKey {\n        return !!(value && value._isSigningKey);\n    }\n}\n\nexport function recoverPublicKey(digest: BytesLike, signature: SignatureLike): string {\n    const sig = splitSignature(signature);\n    const rs = { r: arrayify(sig.r), s: arrayify(sig.s) };\n    return \"0x\" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode(\"hex\", false);\n}\n\nexport function computePublicKey(key: BytesLike, compressed?: boolean): string {\n    const bytes = arrayify(key);\n\n    if (bytes.length === 32) {\n        const signingKey = new SigningKey(bytes);\n        if (compressed) {\n            return \"0x\" + getCurve().keyFromPrivate(bytes).getPublic(true, \"hex\");\n        }\n        return signingKey.publicKey;\n\n    } else if (bytes.length === 33) {\n        if (compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(false, \"hex\");\n\n    } else if (bytes.length === 65) {\n        if (!compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(true, \"hex\");\n    }\n\n    return logger.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\n\n","export const version = \"signing-key/5.7.0\";\n","export const version = \"transactions/5.7.0\";\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, DataOptions, hexConcat, hexDataLength, hexDataSlice, hexlify, hexZeroPad, isBytesLike, SignatureLike, splitSignature, stripZeros, } from \"@ethersproject/bytes\";\nimport { Zero } from \"@ethersproject/constants\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { checkProperties } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey } from \"@ethersproject/signing-key\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type AccessList = Array<{ address: string, storageKeys: Array<string> }>;\n\n// Input allows flexibility in describing an access list\nexport type AccessListish = AccessList |\n                            Array<[ string, Array<string> ]> |\n                            Record<string, Array<string>>;\n\nexport enum TransactionTypes {\n    legacy = 0,\n    eip2930 = 1,\n    eip1559 = 2,\n};\n\nexport type UnsignedTransaction = {\n    to?: string;\n    nonce?: number;\n\n    gasLimit?: BigNumberish;\n    gasPrice?: BigNumberish;\n\n    data?: BytesLike;\n    value?: BigNumberish;\n    chainId?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessListish;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n}\n\nexport interface Transaction {\n    hash?: string;\n\n    to?: string;\n    from?: string;\n    nonce: number;\n\n    gasLimit: BigNumber;\n    gasPrice?: BigNumber;\n\n    data: string;\n    value: BigNumber;\n    chainId: number;\n\n    r?: string;\n    s?: string;\n    v?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessList;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumber;\n    maxFeePerGas?: BigNumber;\n}\n\n///////////////////////////////\n\nfunction handleAddress(value: string): string {\n    if (value === \"0x\") { return null; }\n    return getAddress(value);\n}\n\nfunction handleNumber(value: string): BigNumber {\n    if (value === \"0x\") { return Zero; }\n    return BigNumber.from(value);\n}\n\n// Legacy Transaction Fields\nconst transactionFields = [\n    { name: \"nonce\",    maxLength: 32, numeric: true },\n    { name: \"gasPrice\", maxLength: 32, numeric: true },\n    { name: \"gasLimit\", maxLength: 32, numeric: true },\n    { name: \"to\",          length: 20 },\n    { name: \"value\",    maxLength: 32, numeric: true },\n    { name: \"data\" },\n];\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, type: true, value: true\n}\n\nexport function computeAddress(key: BytesLike | string): string {\n    const publicKey = computePublicKey(key);\n    return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\n\nexport function recoverAddress(digest: BytesLike, signature: SignatureLike): string {\n    return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\n\nfunction formatNumber(value: BigNumberish, name: string): Uint8Array {\n    const result = stripZeros(BigNumber.from(value).toHexString());\n    if (result.length > 32) {\n        logger.throwArgumentError(\"invalid length for \" + name, (\"transaction:\" + name), value);\n    }\n    return result;\n}\n\nfunction accessSetify(addr: string, storageKeys: Array<string>): { address: string,storageKeys: Array<string> } {\n    return {\n        address: getAddress(addr),\n        storageKeys: (storageKeys || []).map((storageKey, index) => {\n            if (hexDataLength(storageKey) !== 32) {\n                logger.throwArgumentError(\"invalid access list storageKey\", `accessList[${ addr }:${ index }]`, storageKey)\n            }\n            return storageKey.toLowerCase();\n        })\n    };\n}\n\nexport function accessListify(value: AccessListish): AccessList {\n    if (Array.isArray(value)) {\n        return (<Array<[ string, Array<string>] | { address: string, storageKeys: Array<string>}>>value).map((set, index) => {\n            if (Array.isArray(set)) {\n                if (set.length > 2) {\n                    logger.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", `value[${ index }]`, set);\n                }\n                return accessSetify(set[0], set[1])\n            }\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n\n    const result: Array<{ address: string, storageKeys: Array<string> }> = Object.keys(value).map((addr) => {\n        const storageKeys: Record<string, true> = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, <Record<string, true>>{ });\n        return accessSetify(addr, Object.keys(storageKeys).sort())\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\n\nfunction formatAccessList(value: AccessListish): Array<[ string, Array<string> ]> {\n    return accessListify(value).map((set) => [ set.address, set.storageKeys ]);\n}\n\nfunction _serializeEip1559(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // If there is an explicit gasPrice, make sure it matches the\n    // EIP-1559 fees; otherwise they may not understand what they\n    // think they are setting in terms of fee.\n    if (transaction.gasPrice != null) {\n        const gasPrice = BigNumber.from(transaction.gasPrice);\n        const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);\n        if (!gasPrice.eq(maxFeePerGas)) {\n            logger.throwArgumentError(\"mismatch EIP-1559 gasPrice != maxFeePerGas\", \"tx\", {\n                gasPrice, maxFeePerGas\n            });\n        }\n    }\n\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(transaction.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x02\", RLP.encode(fields)]);\n}\n\nfunction _serializeEip2930(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.gasPrice || 0, \"gasPrice\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x01\", RLP.encode(fields)]);\n}\n\n// Legacy Transactions and EIP-155\nfunction _serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    checkProperties(transaction, allowedTransactionKeys);\n\n    const raw: Array<string | Uint8Array> = [];\n\n    transactionFields.forEach(function(fieldInfo) {\n        let value = (<any>transaction)[fieldInfo.name] || ([]);\n        const options: DataOptions = { };\n        if (fieldInfo.numeric) { options.hexPad = \"left\"; }\n        value = arrayify(hexlify(value, options));\n\n        // Fixed-width field\n        if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n            logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n        }\n\n        // Variable-width (with a maximum)\n        if (fieldInfo.maxLength) {\n            value = stripZeros(value);\n            if (value.length > fieldInfo.maxLength) {\n                logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value );\n            }\n        }\n\n        raw.push(hexlify(value));\n    });\n\n    let chainId = 0;\n    if (transaction.chainId != null) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = transaction.chainId;\n\n        if (typeof(chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n        }\n\n    } else if (signature && !isBytesLike(signature) && signature.v > 28) {\n        // No chainId provided, but the signature is signing with EIP-155; derive chainId\n        chainId = Math.floor((signature.v - 35) / 2);\n    }\n\n    // We have an EIP-155 transaction (chainId was specified and non-zero)\n    if (chainId !== 0) {\n        raw.push(hexlify(chainId)); // @TODO: hexValue?\n        raw.push(\"0x\");\n        raw.push(\"0x\");\n    }\n\n    // Requesting an unsigned transaction\n    if (!signature) {\n        return RLP.encode(raw);\n    }\n\n    // The splitSignature will ensure the transaction has a recoveryParam in the\n    // case that the signTransaction function only adds a v.\n    const sig = splitSignature(signature);\n\n    // We pushed a chainId and null r, s on for hashing only; remove those\n    let v = 27 + sig.recoveryParam\n    if (chainId !== 0) {\n        raw.pop();\n        raw.pop();\n        raw.pop();\n        v += chainId * 2 + 8;\n\n        // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n        if (sig.v > 28 && sig.v !== v) {\n             logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n        }\n    } else if (sig.v !== v) {\n         logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n\n    raw.push(hexlify(v));\n    raw.push(stripZeros(arrayify(sig.r)));\n    raw.push(stripZeros(arrayify(sig.s)));\n\n    return RLP.encode(raw);\n}\n\nexport function serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // Legacy and EIP-155 Transactions\n    if (transaction.type == null || transaction.type === 0) {\n        if (transaction.accessList != null) {\n            logger.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\", \"transaction\", transaction);\n        }\n        return _serialize(transaction, signature);\n    }\n\n    // Typed Transactions (EIP-2718)\n    switch (transaction.type) {\n        case 1:\n            return _serializeEip2930(transaction, signature);\n        case 2:\n            return _serializeEip1559(transaction, signature);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ transaction.type }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"serializeTransaction\",\n        transactionType: transaction.type\n    });\n}\n\nfunction _parseEipSignature(tx: Transaction, fields: Array<string>, serialize: (tx: UnsignedTransaction) => string): void {\n    try {\n        const recid = handleNumber(fields[0]).toNumber();\n        if (recid !== 0 && recid !== 1) { throw new Error(\"bad recid\"); }\n        tx.v = recid;\n    } catch (error) {\n        logger.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", fields[0]);\n    }\n\n    tx.r = hexZeroPad(fields[1], 32);\n    tx.s = hexZeroPad(fields[2], 32);\n\n    try {\n        const digest = keccak256(serialize(tx));\n        tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });\n    } catch (error) { }\n}\n\nfunction _parseEip1559(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 9 && transaction.length !== 12) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 2\", \"payload\", hexlify(payload));\n    }\n\n    const maxPriorityFeePerGas = handleNumber(transaction[2]);\n    const maxFeePerGas = handleNumber(transaction[3]);\n    const tx: Transaction = {\n        type:                  2,\n        chainId:               handleNumber(transaction[0]).toNumber(),\n        nonce:                 handleNumber(transaction[1]).toNumber(),\n        maxPriorityFeePerGas:  maxPriorityFeePerGas,\n        maxFeePerGas:          maxFeePerGas,\n        gasPrice:              null,\n        gasLimit:              handleNumber(transaction[4]),\n        to:                    handleAddress(transaction[5]),\n        value:                 handleNumber(transaction[6]),\n        data:                  transaction[7],\n        accessList:            accessListify(transaction[8]),\n    };\n\n    // Unsigned EIP-1559 Transaction\n    if (transaction.length === 9) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);\n\n    return tx;\n}\n\nfunction _parseEip2930(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 8 && transaction.length !== 11) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", hexlify(payload));\n    }\n\n    const tx: Transaction = {\n        type:       1,\n        chainId:    handleNumber(transaction[0]).toNumber(),\n        nonce:      handleNumber(transaction[1]).toNumber(),\n        gasPrice:   handleNumber(transaction[2]),\n        gasLimit:   handleNumber(transaction[3]),\n        to:         handleAddress(transaction[4]),\n        value:      handleNumber(transaction[5]),\n        data:       transaction[6],\n        accessList: accessListify(transaction[7])\n    };\n\n    // Unsigned EIP-2930 Transaction\n    if (transaction.length === 8) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);\n\n    return tx;\n}\n\n// Legacy Transactions and EIP-155\nfunction _parse(rawTransaction: Uint8Array): Transaction {\n    const transaction = RLP.decode(rawTransaction);\n\n    if (transaction.length !== 9 && transaction.length !== 6) {\n        logger.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n    }\n\n    const tx: Transaction = {\n        nonce:    handleNumber(transaction[0]).toNumber(),\n        gasPrice: handleNumber(transaction[1]),\n        gasLimit: handleNumber(transaction[2]),\n        to:       handleAddress(transaction[3]),\n        value:    handleNumber(transaction[4]),\n        data:     transaction[5],\n        chainId:  0\n    };\n\n    // Legacy unsigned transaction\n    if (transaction.length === 6) { return tx; }\n\n    try {\n        tx.v = BigNumber.from(transaction[6]).toNumber();\n\n    } catch (error) {\n        // @TODO: What makes snese to do? The v is too big\n        return tx;\n    }\n\n    tx.r = hexZeroPad(transaction[7], 32);\n    tx.s = hexZeroPad(transaction[8], 32);\n\n    if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n        // EIP-155 unsigned transaction\n        tx.chainId = tx.v;\n        tx.v = 0;\n\n    } else {\n        // Signed Transaction\n\n        tx.chainId = Math.floor((tx.v - 35) / 2);\n        if (tx.chainId < 0) { tx.chainId = 0; }\n\n        let recoveryParam = tx.v - 27;\n\n        const raw = transaction.slice(0, 6);\n\n        if (tx.chainId !== 0) {\n            raw.push(hexlify(tx.chainId));\n            raw.push(\"0x\");\n            raw.push(\"0x\");\n            recoveryParam -= tx.chainId * 2 + 8;\n        }\n\n        const digest = keccak256(RLP.encode(raw));\n        try {\n            tx.from = recoverAddress(digest, { r: hexlify(tx.r), s: hexlify(tx.s), recoveryParam: recoveryParam });\n        } catch (error) { }\n\n        tx.hash = keccak256(rawTransaction);\n    }\n\n    tx.type = null;\n\n    return tx;\n}\n\n\nexport function parse(rawTransaction: BytesLike): Transaction {\n    const payload = arrayify(rawTransaction);\n\n    // Legacy and EIP-155 Transactions\n    if (payload[0] > 0x7f) { return _parse(payload); }\n\n    // Typed Transaction (EIP-2718)\n    switch (payload[0]) {\n        case 1:\n            return _parseEip2930(payload);\n        case 2:\n            return _parseEip1559(payload);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ payload[0] }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"parseTransaction\",\n        transactionType: payload[0]\n    });\n}\n\n","\"use strict\";\n\nimport { Block, TransactionReceipt, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexDataLength, hexDataSlice, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { AccessList, accessListify, parse as parseTransaction } from \"@ethersproject/transactions\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport type FormatFunc = (value: any) => any;\n\nexport type FormatFuncs = { [ key: string ]: FormatFunc };\n\nexport type Formats = {\n    transaction: FormatFuncs,\n    transactionRequest: FormatFuncs,\n    receipt: FormatFuncs,\n    receiptLog: FormatFuncs,\n    block: FormatFuncs,\n    blockWithTransactions: FormatFuncs,\n    filter: FormatFuncs,\n    filterLog: FormatFuncs,\n};\n\nexport class Formatter {\n    readonly formats: Formats;\n\n    constructor() {\n        this.formats = this.getDefaultFormats();\n    }\n\n    getDefaultFormats(): Formats {\n        const formats: Formats = <Formats>({ });\n\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const type = this.type.bind(this);\n\n        const strictData = (v: any) => { return this.data(v, true); };\n\n        formats.transaction = {\n            hash: hash,\n\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n\n            confirmations: Formatter.allowNull(number, null),\n\n            from: address,\n\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n\n            creates: Formatter.allowNull(address, null),\n\n            raw: Formatter.allowNull(data),\n        };\n\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),// @TODO: should this be data?\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n\n        formats.block = {\n            hash: Formatter.allowNull(hash),\n            parentHash: hash,\n            number: number,\n\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n\n            miner: Formatter.allowNull(address),\n            extraData: data,\n\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n\n            topics: Formatter.arrayOf(hash),\n\n            transactionHash: hash,\n            logIndex: number,\n        };\n\n        return formats;\n    }\n\n    accessList(accessList: Array<any>): AccessList {\n        return accessListify(accessList || []);\n    }\n\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number: any): number {\n        if (number === \"0x\") { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    type(number: any): number {\n        if (number === \"0x\" || number == null) { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    // Strict! Used on input.\n    bigNumber(value: any): BigNumber {\n        return BigNumber.from(value);\n    }\n\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value: any): boolean {\n        if (typeof(value) === \"boolean\") { return value; }\n        if (typeof(value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") { return true; }\n            if (value === \"false\") { return false; }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n\n    hex(value: any, strict?: boolean): string {\n        if (typeof(value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n            if (isHexString(value)) {\n               return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n\n    data(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n\n    // Requires an address\n    // Strict! Used on input.\n    address(value: any): string {\n        return getAddress(value);\n    }\n\n    callAddress(value: any): string {\n        if (!isHexString(value, 32)) { return null; }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null: address;\n    }\n\n    contractAddress(value: any): string {\n        return getContractAddress(value);\n    }\n\n    // Strict! Used on input.\n    blockTag(blockTag: any): string {\n        if (blockTag == null) { return \"latest\"; }\n\n        if (blockTag === \"earliest\") { return \"0x0\"; }\n\n        switch (blockTag) {\n            case \"earliest\": return \"0x0\";\n            case \"latest\": case \"pending\": case \"safe\": case \"finalized\":\n                return blockTag;\n        }\n\n        if (typeof(blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(<number | string>blockTag);\n        }\n\n        throw new Error(\"invalid blockTag\");\n    }\n\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value: any): number {\n        if (value == null) { return null; }\n\n        const v = BigNumber.from(value);\n\n        try {\n            return v.toNumber();\n        } catch (error) { }\n\n       return null;\n    }\n\n    uint256(value: any): string {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n\n    _block(value: any, format: any): Block {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        const difficulty = (value._difficulty != null) ? value._difficulty: value.difficulty;\n        const result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null: BigNumber.from(difficulty));\n        return result;\n    }\n\n    block(value: any): Block {\n        return this._block(value, this.formats.block);\n    }\n\n    blockWithTransactions(value: any): Block {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n\n    // Strict! Used on input.\n    transactionRequest(value: any): any {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n\n    transactionResponse(transaction: any): TransactionResponse {\n\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n\n        if ((transaction.type === 1 || transaction.type === 2)&& transaction.accessList == null) {\n            transaction.accessList = [ ];\n        }\n\n        const result: TransactionResponse = Formatter.check(this.formats.transaction, transaction);\n\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            result.chainId = chainId;\n\n        } else {\n            let chainId = transaction.networkId;\n\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            if (typeof(chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) { chainId = 0; }\n                chainId = parseInt(chainId);\n            }\n\n            if (typeof(chainId) !== \"number\") { chainId = 0; }\n\n            result.chainId = chainId;\n        }\n\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n\n        return result;\n    }\n\n    transaction(value: any): any {\n        return parseTransaction(value);\n    }\n\n    receiptLog(value: any): any {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n\n    receipt(value: any): TransactionReceipt {\n        const result: TransactionReceipt = Formatter.check(this.formats.receipt, value);\n\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                } else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            } else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n\n        return result;\n    }\n\n    topics(value: any): any {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n\n        } else if (value != null) {\n            return this.hash(value, true);\n        }\n\n        return null;\n    }\n\n    filter(value: any): any {\n        return Formatter.check(this.formats.filter, value);\n    }\n\n    filterLog(value: any): any {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n\n    static check(format: { [ name: string ]: FormatFunc }, object: any): any {\n        const result: any = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) { result[key] = value; }\n            } catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n\n    // if value is null-ish, nullValue is returned\n    static allowNull(format: FormatFunc, nullValue?: any): FormatFunc {\n        return (function(value: any) {\n            if (value == null) { return nullValue; }\n            return format(value);\n        });\n    }\n\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format: FormatFunc, replaceValue: any): FormatFunc {\n        return (function(value: any) {\n            if (!value) { return replaceValue; }\n            return format(value);\n        });\n    }\n\n    // Requires an Array satisfying check\n    static arrayOf(format: FormatFunc): FormatFunc {\n        return (function(array: any): Array<any> {\n            if (!Array.isArray(array)) { throw new Error(\"not an array\"); }\n\n            const result: any = [];\n\n            array.forEach(function(value) {\n                result.push(format(value));\n            });\n\n            return result;\n        });\n    }\n}\n\nexport interface CommunityResourcable {\n    isCommunityResource(): boolean;\n}\n\nexport function isCommunityResourcable(value: any): value is CommunityResourcable {\n    return (value && typeof(value.isCommunityResource) === \"function\");\n}\n\nexport function isCommunityResource(value: any): boolean {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n\n// Show the throttle message only once\nlet throttleMessage = false;\nexport function showThrottleMessage() {\n    if (throttleMessage) { return; }\n    throttleMessage = true;\n\n    console.log(\"========= NOTICE =========\")\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n\n","\"use strict\";\n\nimport {\n    Block, BlockTag, BlockWithTransactions, EventType, Filter, FilterByBlockHash, ForkEvent,\n    Listener, Log, Provider, TransactionReceipt, TransactionRequest, TransactionResponse\n} from \"@ethersproject/abstract-provider\";\nimport { encode as base64Encode } from \"@ethersproject/base64\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexConcat, hexDataLength, hexDataSlice, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { dnsEncode, namehash } from \"@ethersproject/hash\";\nimport { getNetwork, Network, Networkish } from \"@ethersproject/networks\";\nimport { Deferrable, defineReadOnly, getStatic, resolveProperties } from \"@ethersproject/properties\";\nimport { Transaction } from \"@ethersproject/transactions\";\nimport { sha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\n\nimport bech32 from \"bech32\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Formatter } from \"./formatter\";\n\nconst MAX_CCIP_REDIRECTS = 10;\n\n//////////////////////////////\n// Event Serializeing\n\nfunction checkTopic(topic: string): string {\n     if (topic == null) { return \"null\"; }\n     if (hexDataLength(topic) !== 32) {\n         logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n     }\n     return topic.toLowerCase();\n}\n\nfunction serializeTopics(topics: Array<string | Array<string>>): string {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) { topics.pop(); }\n\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n\n            // Only track unique OR-topics\n            const unique: { [ topic: string ]: boolean } = { }\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n\n            return sorted.join(\"|\");\n\n        } else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\n\nfunction deserializeTopics(data: string): Array<string | Array<string>> {\n    if (data === \"\") { return [ ]; }\n\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") { return [ ]; }\n\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null: topic);\n        });\n\n        return ((comps.length === 1) ? comps[0]: comps);\n    });\n}\n\nfunction getEventTag(eventName: EventType): string {\n    if (typeof(eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n\n    } else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n\n    } else if (ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n\n    } else if (eventName && typeof(eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n\n    throw new Error(\"invalid event - \" + eventName);\n}\n\n//////////////////////////////\n// Helper Object\n\nfunction getTime() {\n    return (new Date()).getTime();\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\n//////////////////////////////\n// Provider Object\n\n\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\n\nconst PollableEvents = [ \"block\", \"network\", \"pending\", \"poll\" ];\n\nexport class Event {\n    readonly listener: Listener;\n    readonly once: boolean;\n    readonly tag: string;\n\n    _lastBlockNumber: number\n    _inflight: boolean;\n\n    constructor(tag: string, listener: Listener, once: boolean) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n\n        this._lastBlockNumber = -2;\n        this._inflight = false;\n    }\n\n    get event(): EventType {\n        switch (this.type) {\n            case \"tx\":\n               return this.hash;\n            case \"filter\":\n               return this.filter;\n        }\n        return this.tag;\n    }\n\n    get type(): string {\n        return this.tag.split(\":\")[0]\n    }\n\n    get hash(): string {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") { return null; }\n        return comps[1];\n    }\n\n    get filter(): Filter {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") { return null; }\n        const address = comps[1];\n\n        const topics = deserializeTopics(comps[2]);\n        const filter: Filter = { };\n\n        if (topics.length > 0) { filter.topics = topics; }\n        if (address && address !== \"*\") { filter.address = address; }\n\n        return filter;\n    }\n\n    pollable(): boolean {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n\nexport interface EnsResolver {\n\n    // Name this Resolver is associated with\n    readonly name: string;\n\n    // The address of the resolver\n    readonly address: string;\n\n    // Multichain address resolution (also normal address resolution)\n    // See: https://eips.ethereum.org/EIPS/eip-2304\n    getAddress(coinType?: 60): Promise<null | string>\n\n    // Contenthash field\n    // See: https://eips.ethereum.org/EIPS/eip-1577\n    getContentHash(): Promise<null | string>;\n\n    // Storage of text records\n    // See: https://eips.ethereum.org/EIPS/eip-634\n    getText(key: string): Promise<null | string>;\n};\n\nexport interface EnsProvider {\n    resolveName(name: string): Promise<null | string>;\n    lookupAddress(address: string): Promise<null | string>;\n    getResolver(name: string): Promise<null | EnsResolver>;\n}\n\ntype CoinInfo = {\n    symbol: string,\n    ilk?: string,     // General family\n    prefix?: string,  // Bech32 prefix\n    p2pkh?: number,   // Pay-to-Public-Key-Hash Version\n    p2sh?: number,    // Pay-to-Script-Hash Version\n};\n\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos: { [ coinType: string ]: CoinInfo } = {\n    \"0\":   { symbol: \"btc\",  p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\":   { symbol: \"ltc\",  p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\":   { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\":  { symbol: \"eth\",  ilk: \"eth\" },\n    \"61\":  { symbol: \"etc\",  ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\n\nfunction bytes32ify(value: number): string {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data: Uint8Array): string {\n    return Base58.encode(concat([ data, hexDataSlice(sha256(sha256(data)), 0, 4) ]));\n}\n\nexport interface Avatar {\n    url: string;\n    linkage: Array<{ type: string, content: string }>;\n}\n\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\n\nfunction _parseString(result: string, start: number): null | string {\n    try {\n        return toUtf8String(_parseBytes(result, start));\n    } catch(error) { }\n    return null;\n}\n\nfunction _parseBytes(result: string, start: number): null | string {\n    if (result === \"0x\") { return null; }\n\n    const offset = BigNumber.from(hexDataSlice(result, start, start + 32)).toNumber();\n    const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n\n    return hexDataSlice(result, offset + 32, offset + 32 + length);\n}\n\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link: string): string {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    } else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    } else {\n        logger.throwArgumentError(\"unsupported IPFS format\", \"link\", link);\n    }\n\n    return `https:/\\/gateway.ipfs.io/ipfs/${ link }`;\n}\n\nfunction numPad(value: number): Uint8Array {\n    const result = arrayify(value);\n    if (result.length > 32) { throw new Error(\"internal; should not happen\"); }\n\n    const padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\n\nfunction bytesPad(value: Uint8Array): Uint8Array {\n    if ((value.length % 32) === 0) { return value; }\n\n    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\n\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas: Array<BytesLike>) {\n    const result: Array<Uint8Array> = [ ];\n\n    let byteCount = 0;\n\n    // Add place-holders for pointers as we add items\n    for (let i = 0; i < datas.length; i++) {\n        result.push(null);\n        byteCount += 32;\n    }\n\n    for (let i = 0; i < datas.length; i++) {\n        const data = arrayify(datas[i]);\n\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n\n    return hexConcat(result);\n}\n\nexport class Resolver implements EnsResolver {\n    readonly provider: BaseProvider;\n\n    readonly name: string;\n    readonly address: string;\n\n    readonly _resolvedAddress: null | string;\n\n    // For EIP-2544 names, the ancestor that provided the resolver\n    _supportsEip2544: null | Promise<boolean>;\n\n    // The resolvedAddress is only for creating a ReverseLookup resolver\n    constructor(provider: BaseProvider, address: string, name: string, resolvedAddress?: string) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n        defineReadOnly(this, \"_resolvedAddress\", resolvedAddress);\n    }\n\n    supportsWildcard(): Promise<boolean> {\n        if (!this._supportsEip2544) {\n            // supportsInterface(bytes4 = selector(\"resolve(bytes,bytes)\"))\n            this._supportsEip2544 = this.provider.call({\n                to: this.address,\n                data: \"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000\"\n            }).then((result) => {\n                return BigNumber.from(result).eq(1);\n            }).catch((error) => {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return false; }\n                // Rethrow the error: link is down, etc. Let future attempts retry.\n                this._supportsEip2544 = null;\n                throw error;\n            });\n        }\n\n        return this._supportsEip2544;\n    }\n\n    async _fetch(selector: string, parameters?: string): Promise<null | string> {\n\n        // e.g. keccak256(\"addr(bytes32,uint256)\")\n        const tx = {\n            to: this.address,\n            ccipReadEnabled: true,\n            data: hexConcat([ selector, namehash(this.name), (parameters || \"0x\") ])\n        };\n\n        // Wildcard support; use EIP-2544 to resolve the request\n        let parseBytes = false;\n        if (await this.supportsWildcard()) {\n            parseBytes = true;\n\n            // selector(\"resolve(bytes,bytes)\")\n            tx.data = hexConcat([ \"0x9061b923\", encodeBytes([ dnsEncode(this.name), tx.data ]) ]);\n        }\n\n        try {\n            let result = await this.provider.call(tx);\n            if ((arrayify(result).length % 32) === 4) {\n                logger.throwError(\"resolver threw error\", Logger.errors.CALL_EXCEPTION, {\n                    transaction: tx, data: result\n                });\n            }\n            if (parseBytes) { result = _parseBytes(result, 0); }\n            return result;\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n            throw error;\n        }\n    }\n\n    async _fetchBytes(selector: string, parameters?: string): Promise<null | string> {\n        const result = await this._fetch(selector, parameters);\n        if (result != null) { return _parseBytes(result, 0); }\n        return null;\n    }\n\n    _getAddress(coinType: number, hexBytes: string): string {\n        const coinInfo = coinInfos[String(coinType)];\n\n        if (coinInfo == null) {\n            logger.throwError(`unsupported coin type: ${ coinType }`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`\n            });\n        }\n\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n\n        const bytes = arrayify(hexBytes);\n\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2pkh ], (\"0x\" + p2pkh[2]) ]));\n                }\n            }\n        }\n\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2sh ], (\"0x\" + p2sh[2]) ]));\n                }\n            }\n        }\n\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            } else {\n                version = -1;\n            }\n\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n\n        return null;\n    }\n\n\n    async getAddress(coinType?: number): Promise<string> {\n        if (coinType == null) { coinType = 60; }\n\n        // If Ethereum, use the standard `addr(bytes32)`\n        if (coinType === 60) {\n            try {\n                // keccak256(\"addr(bytes32)\")\n                const result = await this._fetch(\"0x3b3b57de\");\n\n                // No address\n                if (result === \"0x\" || result === HashZero) { return null; }\n\n                return this.provider.formatter.callAddress(result);\n            } catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n                throw error;\n            }\n        }\n\n        // keccak256(\"addr(bytes32,uint256\")\n        const hexBytes = await this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n\n        // No address\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // Compute the address\n        const address = this._getAddress(coinType, hexBytes);\n\n        if (address == null) {\n            logger.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`,\n                coinType: coinType,\n                data: hexBytes\n            });\n        }\n\n        return address;\n    }\n\n    async getAvatar(): Promise<null | Avatar> {\n        const linkage: Array<{ type: string, content: string }> = [ { type: \"name\", content: this.name } ];\n        try {\n            // test data for ricmoo.eth\n            //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n            const avatar = await this.getText(\"avatar\");\n            if (avatar == null) { return null; }\n\n            for (let i = 0; i < matchers.length; i++) {\n                const match = avatar.match(matchers[i]);\n                if (match == null) { continue; }\n\n                const scheme = match[1].toLowerCase();\n\n                switch (scheme) {\n                    case \"https\":\n                        linkage.push({ type: \"url\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"data\":\n                        linkage.push({ type: \"data\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"ipfs\":\n                        linkage.push({ type: \"ipfs\", content: avatar });\n                        return { linkage, url: getIpfsLink(avatar) };\n\n                    case \"erc721\":\n                    case \"erc1155\": {\n                        // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                        const selector = (scheme === \"erc721\") ? \"0xc87b56dd\": \"0x0e89341c\";\n                        linkage.push({ type: scheme, content: avatar });\n\n                        // The owner of this name\n                        const owner = (this._resolvedAddress || await this.getAddress());\n\n                        const comps = (match[2] || \"\").split(\"/\");\n                        if (comps.length !== 2) { return null; }\n\n                        const addr = await this.provider.formatter.address(comps[0]);\n                        const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);\n\n                        // Check that this account owns the token\n                        if (scheme === \"erc721\") {\n                            // ownerOf(uint256 tokenId)\n                            const tokenOwner = this.provider.formatter.callAddress(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x6352211e\", tokenId ])\n                            }));\n                            if (owner !== tokenOwner) { return null; }\n                            linkage.push({ type: \"owner\", content: tokenOwner });\n\n                        } else if (scheme === \"erc1155\") {\n                            // balanceOf(address owner, uint256 tokenId)\n                            const balance = BigNumber.from(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x00fdd58e\", hexZeroPad(owner, 32), tokenId ])\n                            }));\n                            if (balance.isZero()) { return null; }\n                            linkage.push({ type: \"balance\", content: balance.toString() });\n                        }\n\n                        // Call the token contract for the metadata URL\n                        const tx = {\n                            to: this.provider.formatter.address(comps[0]),\n                            data: hexConcat([ selector, tokenId ])\n                        };\n\n                        let metadataUrl = _parseString(await this.provider.call(tx), 0);\n                        if (metadataUrl == null) { return null; }\n                        linkage.push({ type: \"metadata-url-base\", content: metadataUrl });\n\n                        // ERC-1155 allows a generic {id} in the URL\n                        if (scheme === \"erc1155\") {\n                            metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                            linkage.push({ type: \"metadata-url-expanded\", content: metadataUrl });\n                        }\n\n                        // Transform IPFS metadata links\n                        if (metadataUrl.match(/^ipfs:/i)) {\n                            metadataUrl = getIpfsLink(metadataUrl);\n                        }\n\n                        linkage.push({ type: \"metadata-url\", content: metadataUrl });\n\n                        // Get the token metadata\n                        const metadata = await fetchJson(metadataUrl);\n                        if (!metadata) { return null; }\n                        linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n\n                        // Pull the image URL out\n                        let imageUrl = metadata.image;\n                        if (typeof(imageUrl) !== \"string\") { return null; }\n\n                        if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                            // Allow\n                        } else {\n                            // Transform IPFS link to gateway\n                            const ipfs = imageUrl.match(matcherIpfs);\n                            if (ipfs == null) { return null; }\n\n                            linkage.push({ type: \"url-ipfs\", content: imageUrl });\n                            imageUrl = getIpfsLink(imageUrl);\n                        }\n\n                        linkage.push({ type: \"url\", content: imageUrl });\n\n                        return { linkage, url: imageUrl };\n                    }\n                }\n            }\n        } catch (error) { }\n\n        return null;\n    }\n\n    async getContentHash(): Promise<string> {\n\n        // keccak256(\"contenthash()\")\n        const hexBytes = await this._fetchBytes(\"0xbc1c58d1\");\n\n        // No contenthash\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // IPFS (CID: 1, Type: DAG-PB)\n        const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipfs) {\n            const length = parseInt(ipfs[3], 16);\n            if (ipfs[4].length === length * 2) {\n                return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n            }\n        }\n\n        // IPNS (CID: 1, Type: libp2p-key)\n        const ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipns) {\n            const length = parseInt(ipns[3], 16);\n            if (ipns[4].length === length * 2) {\n                return \"ipns:/\\/\" + Base58.encode(\"0x\" + ipns[1]);\n            }\n        }\n\n        // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n        const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/)\n        if (swarm) {\n            if (swarm[1].length === (32 * 2)) {\n                return \"bzz:/\\/\" + swarm[1]\n            }\n        }\n\n        const skynet = hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);\n        if (skynet) {\n            if (skynet[1].length === (34 * 2)) {\n                // URL Safe base64; https://datatracker.ietf.org/doc/html/rfc4648#section-5\n                const urlSafe: Record<string, string> = { \"=\": \"\", \"+\": \"-\", \"/\": \"_\" };\n                const hash = base64Encode(\"0x\" + skynet[1]).replace(/[=+\\/]/g, (a) => (urlSafe[a]));\n                return \"sia:/\\/\" + hash;\n            }\n        }\n\n        return logger.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"getContentHash()\",\n            data: hexBytes\n        });\n    }\n\n    async getText(key: string): Promise<string> {\n\n        // The key encoded as parameter to fetchBytes\n        let keyBytes = toUtf8Bytes(key);\n\n        // The nodehash consumes the first slot, so the string pointer targets\n        // offset 64, with the length at offset 64 and data starting at offset 96\n        keyBytes = concat([ bytes32ify(64), bytes32ify(keyBytes.length), keyBytes ]);\n\n        // Pad to word-size (32 bytes)\n        if ((keyBytes.length % 32) !== 0) {\n            keyBytes = concat([ keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32)) ])\n        }\n\n        const hexBytes = await this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        return toUtf8String(hexBytes);\n    }\n}\n\nlet defaultFormatter: Formatter = null;\n\nlet nextPollId = 1;\n\nexport class BaseProvider extends Provider implements EnsProvider {\n    _networkPromise: Promise<Network>;\n    _network: Network;\n\n    _events: Array<Event>;\n\n    formatter: Formatter;\n\n    // To help mitigate the eventually consistent nature of the blockchain\n    // we keep a mapping of events we emit. If we emit an event X, we expect\n    // that a user should be able to query for that event in the callback,\n    // if the node returns null, we stall the response until we get back a\n    // meaningful value, since we may be hitting a re-org, or a node that\n    // has not indexed the event yet.\n    // Events:\n    //   - t:{hash}    - Transaction hash\n    //   - b:{hash}    - BlockHash\n    //   - block       - The most recent emitted block\n    _emitted: { [ eventName: string ]: number | \"pending\" };\n\n    _pollingInterval: number;\n    _poller: NodeJS.Timer;\n    _bootstrapPoll: NodeJS.Timer;\n\n    _lastBlockNumber: number;\n    _maxFilterBlockRange: number;\n\n    _fastBlockNumber: number;\n    _fastBlockNumberPromise: Promise<number>;\n    _fastQueryDate: number;\n\n    _maxInternalBlockNumber: number;\n    _internalBlockNumber: Promise<{ blockNumber: number, reqTime: number, respTime: number }>;\n\n    readonly anyNetwork: boolean;\n\n    disableCcipRead: boolean;\n\n\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n\n    constructor(network: Networkish | Promise<Network>) {\n        super();\n\n        // Events being listened to\n        this._events = [];\n\n        this._emitted = { block: -2 };\n\n        this.disableCcipRead = false;\n\n        this.formatter = new.target.getFormatter();\n\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) { network = this.detectNetwork(); }\n\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n\n        } else {\n            const knownNetwork = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n\n            } else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n\n        this._maxInternalBlockNumber = -1024;\n\n        this._lastBlockNumber = -2;\n        this._maxFilterBlockRange = 10;\n\n        this._pollingInterval = 4000;\n\n        this._fastQueryDate = 0;\n    }\n\n    async _ready(): Promise<Network> {\n        if (this._network == null) {\n            let network: Network = null;\n            if (this._networkPromise) {\n                try {\n                    network = await this._networkPromise;\n                } catch (error) { }\n            }\n\n            // Try the Provider's network detection (this MUST throw if it cannot)\n            if (network == null) {\n                network = await this.detectNetwork();\n            }\n\n            // This should never happen; every Provider sub-class should have\n            // suggested a network by here (or have thrown).\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // Possible this call stacked so do not call defineReadOnly again\n            if (this._network == null) {\n                if (this.anyNetwork) {\n                    this._network = network;\n                } else {\n                    defineReadOnly(this, \"_network\", network);\n                }\n                this.emit(\"network\", network, null);\n            }\n        }\n\n        return this._network;\n    }\n\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is reflected); otherwise this cannot change\n    get ready(): Promise<Network> {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter(): Formatter {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network: Networkish): Network {\n        return getNetwork((network == null) ? \"homestead\": network);\n    }\n\n    async ccipReadFetch(tx: Transaction, calldata: string, urls: Array<string>): Promise<null | string> {\n        if (this.disableCcipRead || urls.length === 0) { return null; }\n\n        const sender = tx.to.toLowerCase();\n        const data = calldata.toLowerCase();\n\n        const errorMessages: Array<string> = [ ];\n\n        for (let i = 0; i < urls.length; i++) {\n            const url = urls[i];\n\n            // URL expansion\n            const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n\n            // If no {data} is present, use POST; otherwise GET\n            const json: string | null = (url.indexOf(\"{data}\") >= 0) ? null: JSON.stringify({ data, sender });\n\n            const result = await fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {\n                value.status = response.statusCode;\n                return value;\n            });\n\n            if (result.data) { return result.data; }\n\n            const errorMessage = (result.message || \"unknown error\");\n\n            // 4xx indicates the result is not present; stop\n            if (result.status >= 400 && result.status < 500) {\n                return logger.throwError(`response not found during CCIP fetch: ${ errorMessage }`, Logger.errors.SERVER_ERROR, { url, errorMessage });\n            }\n\n            // 5xx indicates server issue; try the next url\n            errorMessages.push(errorMessage);\n        }\n\n        return logger.throwError(`error encountered during CCIP fetch: ${ errorMessages.map((m) => JSON.stringify(m)).join(\", \") }`, Logger.errors.SERVER_ERROR, {\n            urls, errorMessages\n        });\n    }\n\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    async _getInternalBlockNumber(maxAge: number): Promise<number> {\n        await this._ready();\n\n        // Allowing stale data up to maxAge old\n        if (maxAge > 0) {\n\n            // While there are pending internal block requests...\n            while (this._internalBlockNumber) {\n\n                // ...\"remember\" which fetch we started with\n                const internalBlockNumber = this._internalBlockNumber;\n\n                try {\n                    // Check the result is not too stale\n                    const result = await internalBlockNumber;\n                    if ((getTime() - result.respTime) <= maxAge) {\n                        return result.blockNumber;\n                    }\n\n                    // Too old; fetch a new value\n                    break;\n\n                } catch(error) {\n\n                    // The fetch rejected; if we are the first to get the\n                    // rejection, drop through so we replace it with a new\n                    // fetch; all others blocked will then get that fetch\n                    // which won't match the one they \"remembered\" and loop\n                    if (this._internalBlockNumber === internalBlockNumber) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        const reqTime = getTime();\n\n        const checkInternalBlockNumber = resolveProperties({\n            blockNumber: this.perform(\"getBlockNumber\", { }),\n            networkError: this.getNetwork().then((network) => (null), (error) => (error))\n        }).then(({ blockNumber, networkError }) => {\n            if (networkError) {\n                // Unremember this bad internal block number\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n                throw networkError;\n            }\n\n            const respTime = getTime();\n\n            blockNumber = BigNumber.from(blockNumber).toNumber();\n            if (blockNumber < this._maxInternalBlockNumber) { blockNumber = this._maxInternalBlockNumber; }\n\n            this._maxInternalBlockNumber = blockNumber;\n            this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n            return { blockNumber, reqTime, respTime };\n        });\n\n        this._internalBlockNumber = checkInternalBlockNumber;\n\n        // Swallow unhandled exceptions; if needed they are handled else where\n        checkInternalBlockNumber.catch((error) => {\n            // Don't null the dead (rejected) fetch, if it has already been updated\n            if (this._internalBlockNumber === checkInternalBlockNumber) {\n                this._internalBlockNumber = null;\n            }\n        });\n\n        return (await checkInternalBlockNumber).blockNumber;\n    }\n\n    async poll(): Promise<void> {\n        const pollId = nextPollId++;\n\n        // Track all running promises, so we can trigger a post-poll once they are complete\n        const runners: Array<Promise<void>> = [];\n\n        let blockNumber: number = null;\n        try {\n            blockNumber = await this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n        } catch (error) {\n            this.emit(\"error\", error);\n            return;\n        }\n        this._setFastBlockNumber(blockNumber);\n\n        // Emit a poll event after we have the latest (fast) block number\n        this.emit(\"poll\", pollId, blockNumber);\n\n        // If the block has not changed, meh.\n        if (blockNumber === this._lastBlockNumber) {\n            this.emit(\"didPoll\", pollId);\n            return;\n        }\n\n        // First polling cycle, trigger a \"block\" events\n        if (this._emitted.block === -2) {\n            this._emitted.block = blockNumber - 1;\n        }\n\n        if (Math.abs((<number>(this._emitted.block)) - blockNumber) > 1000) {\n            logger.warn(`network block skew detected; skipping block events (emitted=${ this._emitted.block } blockNumber${ blockNumber })`);\n            this.emit(\"error\", logger.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                blockNumber: blockNumber,\n                event: \"blockSkew\",\n                previousBlockNumber: this._emitted.block\n            }));\n            this.emit(\"block\", blockNumber);\n\n        } else {\n            // Notify all listener for each block that has passed\n            for (let i = (<number>this._emitted.block) + 1; i <= blockNumber; i++) {\n                this.emit(\"block\", i);\n            }\n        }\n\n        // The emitted block was updated, check for obsolete events\n        if ((<number>this._emitted.block) !== blockNumber) {\n            this._emitted.block = blockNumber;\n\n            Object.keys(this._emitted).forEach((key) => {\n                // The block event does not expire\n                if (key === \"block\") { return; }\n\n                // The block we were at when we emitted this event\n                const eventBlockNumber = this._emitted[key];\n\n                // We cannot garbage collect pending transactions or blocks here\n                // They should be garbage collected by the Provider when setting\n                // \"pending\" events\n                if (eventBlockNumber === \"pending\") { return; }\n\n                // Evict any transaction hashes or block hashes over 12 blocks\n                // old, since they should not return null anyways\n                if (blockNumber - eventBlockNumber > 12) {\n                    delete this._emitted[key];\n                }\n            });\n        }\n\n        // First polling cycle\n        if (this._lastBlockNumber === -2) {\n            this._lastBlockNumber = blockNumber - 1;\n        }\n        // Find all transaction hashes we are waiting on\n        this._events.forEach((event) => {\n            switch (event.type) {\n                case \"tx\": {\n                    const hash = event.hash;\n                    let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt || receipt.blockNumber == null) { return null; }\n                        this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                        this.emit(hash, receipt);\n                        return null;\n                    }).catch((error: Error) => { this.emit(\"error\", error); });\n\n                    runners.push(runner);\n\n                    break;\n                }\n\n                case \"filter\": {\n                    // We only allow a single getLogs to be in-flight at a time\n                    if (!event._inflight) {\n                        event._inflight = true;\n\n                        // This is the first filter for this event, so we want to\n                        // restrict events to events that happened no earlier than now\n                        if (event._lastBlockNumber === -2) {\n                            event._lastBlockNumber = blockNumber - 1;\n                        }\n\n                        // Filter from the last *known* event; due to load-balancing\n                        // and some nodes returning updated block numbers before\n                        // indexing events, a logs result with 0 entries cannot be\n                        // trusted and we must retry a range which includes it again\n                        const filter = event.filter;\n                        filter.fromBlock = event._lastBlockNumber + 1;\n                        filter.toBlock = blockNumber;\n\n                        // Prevent fitler ranges from growing too wild, since it is quite\n                        // likely there just haven't been any events to move the lastBlockNumber.\n                        const minFromBlock = filter.toBlock - this._maxFilterBlockRange;\n                        if (minFromBlock > filter.fromBlock) { filter.fromBlock = minFromBlock; }\n\n                        if (filter.fromBlock < 0) { filter.fromBlock = 0; }\n\n                        const runner = this.getLogs(filter).then((logs) => {\n                            // Allow the next getLogs\n                            event._inflight = false;\n\n                            if (logs.length === 0) { return; }\n\n                            logs.forEach((log: Log) => {\n                                // Only when we get an event for a given block number\n                                // can we trust the events are indexed\n                                if (log.blockNumber > event._lastBlockNumber) {\n                                    event._lastBlockNumber = log.blockNumber;\n                                }\n\n                                // Make sure we stall requests to fetch blocks and txs\n                                this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n\n                                this.emit(filter, log);\n                            });\n                        }).catch((error: Error) => {\n                            this.emit(\"error\", error);\n\n                            // Allow another getLogs (the range was not updated)\n                            event._inflight = false;\n                        });\n                        runners.push(runner);\n                    }\n\n                    break;\n                }\n            }\n        });\n\n        this._lastBlockNumber = blockNumber;\n\n        // Once all events for this loop have been processed, emit \"didPoll\"\n        Promise.all(runners).then(() => {\n            this.emit(\"didPoll\", pollId);\n        }).catch((error) => { this.emit(\"error\", error); });\n\n        return;\n    }\n\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber: number): void {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) { this.poll(); }\n    }\n\n    get network(): Network {\n        return this._network;\n    }\n\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    async detectNetwork(): Promise<Network> {\n        return logger.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"provider.detectNetwork\"\n        });\n    }\n\n    async getNetwork(): Promise<Network> {\n        const network = await this._ready();\n\n        // Make sure we are still connected to the same network; this is\n        // only an external call for backends which can have the underlying\n        // network change spontaneously\n        const currentNetwork = await this.detectNetwork();\n        if (network.chainId !== currentNetwork.chainId) {\n\n            // We are allowing network changes, things can get complex fast;\n            // make sure you know what you are doing if you use \"any\"\n            if (this.anyNetwork) {\n                this._network = currentNetwork;\n\n                // Reset all internal block number guards and caches\n                this._lastBlockNumber = -2;\n                this._fastBlockNumber = null;\n                this._fastBlockNumberPromise = null;\n                this._fastQueryDate = 0;\n                this._emitted.block = -2;\n                this._maxInternalBlockNumber = -1024;\n                this._internalBlockNumber = null;\n\n                // The \"network\" event MUST happen before this method resolves\n                // so any events have a chance to unregister, so we stall an\n                // additional event loop before returning from /this/ call\n                this.emit(\"network\", currentNetwork, network);\n                await stall(0);\n\n                return this._network;\n            }\n\n            const error = logger.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                event: \"changed\",\n                network: network,\n                detectedNetwork: currentNetwork\n            });\n\n            this.emit(\"error\", error);\n            throw error;\n        }\n\n        return network;\n    }\n\n    get blockNumber(): number {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber: -1;\n    }\n\n    get polling(): boolean {\n        return (this._poller != null);\n    }\n\n    set polling(value: boolean) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) { this.poll(); }\n\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n\n        } else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n\n    get pollingInterval(): number {\n        return this._pollingInterval;\n    }\n\n    set pollingInterval(value: number) {\n        if (typeof(value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n\n        this._pollingInterval = value;\n\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n\n    _getFastBlockNumber(): Promise<number> {\n        const now = getTime();\n\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n\n        return this._fastBlockNumberPromise;\n    }\n\n    _setFastBlockNumber(blockNumber: number): void {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) { return; }\n\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n\n    async waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt> {\n        return this._waitForTransaction(transactionHash, (confirmations == null) ? 1: confirmations, timeout || 0, null);\n    }\n\n    async _waitForTransaction(transactionHash: string, confirmations: number, timeout: number, replaceable: { data: string, from: string, nonce: number, to: string, value: BigNumber, startBlock: number }): Promise<TransactionReceipt> {\n        const receipt = await this.getTransactionReceipt(transactionHash);\n\n        // Receipt is already good\n        if ((receipt ? receipt.confirmations: 0) >= confirmations) { return receipt; }\n\n        // Poll until the receipt is good...\n        return new Promise((resolve, reject) => {\n            const cancelFuncs: Array<() => void> = [];\n\n            let done = false;\n            const alreadyDone = function() {\n                if (done) { return true; }\n                done = true;\n                cancelFuncs.forEach((func) => { func(); });\n                return false;\n            };\n\n            const minedHandler = (receipt: TransactionReceipt) => {\n                if (receipt.confirmations < confirmations) { return; }\n                if (alreadyDone()) { return; }\n                resolve(receipt);\n            }\n            this.on(transactionHash, minedHandler);\n            cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });\n\n            if (replaceable) {\n                let lastBlockNumber = replaceable.startBlock;\n                let scannedBlock: number = null;\n                const replaceHandler = async (blockNumber: number) => {\n                    if (done) { return; }\n\n                    // Wait 1 second; this is only used in the case of a fault, so\n                    // we will trade off a little bit of latency for more consistent\n                    // results and fewer JSON-RPC calls\n                    await stall(1000);\n\n                    this.getTransactionCount(replaceable.from).then(async (nonce) => {\n                        if (done) { return; }\n\n                        if (nonce <= replaceable.nonce) {\n                            lastBlockNumber = blockNumber;\n\n                        } else {\n                            // First check if the transaction was mined\n                            {\n                                const mined = await this.getTransaction(transactionHash);\n                                if (mined && mined.blockNumber != null) { return; }\n                            }\n\n                            // First time scanning. We start a little earlier for some\n                            // wiggle room here to handle the eventually consistent nature\n                            // of blockchain (e.g. the getTransactionCount was for a\n                            // different block)\n                            if (scannedBlock == null) {\n                                scannedBlock = lastBlockNumber - 3;\n                                if (scannedBlock < replaceable.startBlock) {\n                                    scannedBlock = replaceable.startBlock;\n                                }\n                            }\n\n                            while (scannedBlock <= blockNumber) {\n                                if (done) { return; }\n\n                                const block = await this.getBlockWithTransactions(scannedBlock);\n                                for (let ti = 0; ti < block.transactions.length; ti++) {\n                                    const tx = block.transactions[ti];\n\n                                    // Successfully mined!\n                                    if (tx.hash === transactionHash) { return; }\n\n                                    // Matches our transaction from and nonce; its a replacement\n                                    if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                                        if (done) { return; }\n\n                                        // Get the receipt of the replacement\n                                        const receipt = await this.waitForTransaction(tx.hash, confirmations);\n\n                                        // Already resolved or rejected (prolly a timeout)\n                                        if (alreadyDone()) { return; }\n\n                                        // The reason we were replaced\n                                        let reason = \"replaced\";\n                                        if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                            reason = \"repriced\";\n                                        } else  if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                            reason = \"cancelled\"\n                                        }\n\n                                        // Explain why we were replaced\n                                        reject(logger.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                            cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                            reason,\n                                            replacement: this._wrapTransaction(tx),\n                                            hash: transactionHash,\n                                            receipt\n                                        }));\n\n                                        return;\n                                    }\n                                }\n                                scannedBlock++;\n                            }\n                        }\n\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n\n                    }, (error) => {\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n                    });\n                };\n\n                if (done) { return; }\n                this.once(\"block\", replaceHandler);\n\n                cancelFuncs.push(() => {\n                    this.removeListener(\"block\", replaceHandler);\n                });\n            }\n\n            if (typeof(timeout) === \"number\" && timeout > 0) {\n                const timer = setTimeout(() => {\n                    if (alreadyDone()) { return; }\n                    reject(logger.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                }, timeout);\n                if (timer.unref) { timer.unref(); }\n\n                cancelFuncs.push(() => { clearTimeout(timer); });\n            }\n        });\n    }\n\n    async getBlockNumber(): Promise<number> {\n        return this._getInternalBlockNumber(0);\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        await this.getNetwork();\n\n        const result = await this.perform(\"getGasPrice\", { });\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getGasPrice\",\n                result, error\n            });\n        }\n    }\n\n    async getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getBalance\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getBalance\",\n                params, result, error\n            });\n        }\n    }\n\n    async getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getTransactionCount\", params);\n        try {\n            return BigNumber.from(result).toNumber();\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getTransactionCount\",\n                params, result, error\n            });\n        }\n    }\n\n    async getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getCode\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getCode\",\n                params, result, error\n            });\n        }\n    }\n\n    async getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag),\n            position: Promise.resolve(position).then((p) => hexValue(p))\n        });\n        const result = await this.perform(\"getStorageAt\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getStorageAt\",\n                params, result, error\n            });\n        }\n    }\n\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx: Transaction, hash?: string, startBlock?: number): TransactionResponse {\n        if (hash != null && hexDataLength(hash) !== 32) { throw new Error(\"invalid response - sendTransaction\"); }\n\n        const result = <TransactionResponse>tx;\n\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n\n        result.wait = async (confirms?: number, timeout?: number) => {\n            if (confirms == null) { confirms = 1; }\n            if (timeout == null) { timeout = 0; }\n\n            // Get the details to detect replacement\n            let replacement = undefined;\n            if (confirms !== 0 && startBlock != null) {\n                replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock\n                };\n            }\n\n            const receipt = await this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n            if (receipt == null && confirms === 0) { return null; }\n\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n\n            if (receipt.status === 0) {\n                logger.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        };\n\n        return result;\n    }\n\n    async sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        const hexTx = await Promise.resolve(signedTransaction).then(t => hexlify(t));\n        const tx = this.formatter.transaction(signedTransaction);\n        if (tx.confirmations == null) { tx.confirmations = 0; }\n        const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n        try {\n            const hash = await this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n            return this._wrapTransaction(tx, hash, blockNumber);\n        } catch (error) {\n            (<any>error).transaction = tx;\n            (<any>error).transactionHash = tx.hash;\n            throw error;\n        }\n    }\n\n    async _getTransactionRequest(transaction: Deferrable<TransactionRequest>): Promise<Transaction> {\n        const values: any = await transaction;\n\n        const tx: any = { };\n\n        [\"from\", \"to\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v): null))\n        });\n\n        [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v): null));\n        });\n\n        [\"type\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v: null));\n        });\n\n        if (values.accessList) {\n            tx.accessList = this.formatter.accessList(values.accessList);\n        }\n\n        [\"data\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v): null));\n        });\n\n        return this.formatter.transactionRequest(await resolveProperties(tx));\n    }\n\n    async _getFilter(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Filter | FilterByBlockHash> {\n        filter = await filter;\n\n        const result: any = { };\n\n        if (filter.address != null) {\n            result.address = this._getAddress(filter.address);\n        }\n\n        [\"blockHash\", \"topics\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = (<any>filter)[key];\n        });\n\n        [\"fromBlock\", \"toBlock\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = this._getBlockTag((<any>filter)[key]);\n        });\n\n        return this.formatter.filter(await resolveProperties(result));\n    }\n\n    async _call(transaction: TransactionRequest, blockTag: BlockTag, attempt: number): Promise<string> {\n        if (attempt >= MAX_CCIP_REDIRECTS) {\n            logger.throwError(\"CCIP read exceeded maximum redirections\", Logger.errors.SERVER_ERROR, {\n                redirects: attempt, transaction\n            });\n        }\n\n        const txSender = transaction.to;\n\n        const result = await this.perform(\"call\", { transaction, blockTag });\n\n        // CCIP Read request via OffchainLookup(address,string[],bytes,bytes4,bytes)\n        if (attempt >= 0 && blockTag === \"latest\" && txSender != null && result.substring(0, 10) === \"0x556f1830\" && (hexDataLength(result) % 32 === 4)) {\n            try {\n                const data = hexDataSlice(result, 4);\n\n                // Check the sender of the OffchainLookup matches the transaction\n                const sender = hexDataSlice(data, 0, 32);\n                if (!BigNumber.from(sender).eq(txSender)) {\n                    logger.throwError(\"CCIP Read sender did not match\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                // Read the URLs from the response\n                const urls: Array<string> = [];\n                const urlsOffset = BigNumber.from(hexDataSlice(data, 32, 64)).toNumber();\n                const urlsLength = BigNumber.from(hexDataSlice(data, urlsOffset, urlsOffset + 32)).toNumber();\n                const urlsData = hexDataSlice(data, urlsOffset + 32);\n                for (let u = 0; u < urlsLength; u++) {\n                    const url = _parseString(urlsData, u * 32);\n                    if (url == null) {\n                        logger.throwError(\"CCIP Read contained corrupt URL string\", Logger.errors.CALL_EXCEPTION, {\n                            name: \"OffchainLookup\",\n                            signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                            transaction, data: result\n                        });\n                    }\n                    urls.push(url);\n                }\n\n                // Get the CCIP calldata to forward\n                const calldata = _parseBytes(data, 64);\n\n                // Get the callbackSelector (bytes4)\n                if (!BigNumber.from(hexDataSlice(data, 100, 128)).isZero()) {\n                    logger.throwError(\"CCIP Read callback selector included junk\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n                const callbackSelector = hexDataSlice(data, 96, 100);\n\n                // Get the extra data to send back to the contract as context\n                const extraData = _parseBytes(data, 128);\n\n                const ccipResult = await this.ccipReadFetch(<Transaction>transaction, calldata, urls);\n                if (ccipResult == null) {\n                    logger.throwError(\"CCIP Read disabled or provided no URLs\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                const tx = {\n                    to: txSender,\n                    data: hexConcat([ callbackSelector, encodeBytes([ ccipResult, extraData ]) ])\n                };\n\n                return this._call(tx, blockTag, attempt + 1);\n\n            } catch (error) {\n                if (error.code === Logger.errors.SERVER_ERROR) { throw error; }\n            }\n        }\n\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"call\",\n                params: { transaction, blockTag }, result, error\n            });\n        }\n\n    }\n\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const resolved = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction),\n            blockTag: this._getBlockTag(blockTag),\n            ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)\n        });\n        return this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0: -1);\n    }\n\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction)\n        });\n\n        const result = await this.perform(\"estimateGas\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"estimateGas\",\n                params, result, error\n            });\n        }\n    }\n\n    async _getAddress(addressOrName: string | Promise<string>): Promise<string> {\n        addressOrName = await addressOrName;\n        if (typeof(addressOrName) !== \"string\") {\n            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n        }\n\n        const address = await this.resolveName(addressOrName);\n        if (address == null) {\n            logger.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `resolveName(${ JSON.stringify(addressOrName) })`\n            });\n        }\n        return address;\n    }\n\n    async _getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>, includeTransactions?: boolean): Promise<Block | BlockWithTransactions> {\n        await this.getNetwork();\n\n        blockHashOrBlockTag = await blockHashOrBlockTag;\n\n        // If blockTag is a number (not \"latest\", etc), this is the block number\n        let blockNumber = -128;\n\n        const params: { [key: string]: any } = {\n            includeTransactions: !!includeTransactions\n        };\n\n        if (isHexString(blockHashOrBlockTag, 32)) {\n            params.blockHash = blockHashOrBlockTag;\n        } else {\n            try {\n                params.blockTag = await this._getBlockTag(blockHashOrBlockTag);\n                if (isHexString(params.blockTag)) {\n                    blockNumber = parseInt(params.blockTag.substring(2), 16);\n                }\n            } catch (error) {\n                logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n            }\n        }\n\n        return poll(async () => {\n            const block = await this.perform(\"getBlock\", params);\n\n            // Block was not found\n            if (block == null) {\n\n                // For blockhashes, if we didn't say it existed, that blockhash may\n                // not exist. If we did see it though, perhaps from a log, we know\n                // it exists, and this node is just not caught up yet.\n                if (params.blockHash != null) {\n                    if (this._emitted[\"b:\" + params.blockHash] == null) { return null; }\n                }\n\n                // For block tags, if we are asking for a future block, we return null\n                if (params.blockTag != null) {\n                    if (blockNumber > this._emitted.block) { return null; }\n                }\n\n                // Retry on the next block\n                return undefined;\n            }\n\n            // Add transactions\n            if (includeTransactions) {\n                let blockNumber: number = null;\n                for (let i = 0; i < block.transactions.length; i++) {\n                    const tx = block.transactions[i];\n                    if (tx.blockNumber == null) {\n                        tx.confirmations = 0;\n\n                    } else if (tx.confirmations == null) {\n                        if (blockNumber == null) {\n                            blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                        }\n\n                        // Add the confirmations using the fast block number (pessimistic)\n                        let confirmations = (blockNumber - tx.blockNumber) + 1;\n                        if (confirmations <= 0) { confirmations = 1; }\n                        tx.confirmations = confirmations;\n                    }\n                }\n\n                const blockWithTxs: any = this.formatter.blockWithTransactions(block);\n                blockWithTxs.transactions = blockWithTxs.transactions.map((tx: TransactionResponse) => this._wrapTransaction(tx));\n                return blockWithTxs;\n            }\n\n            return this.formatter.block(block);\n\n        }, { oncePoll: this });\n    }\n\n    getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block> {\n        return <Promise<Block>>(this._getBlock(blockHashOrBlockTag, false));\n    }\n\n    getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions> {\n        return <Promise<BlockWithTransactions>>(this._getBlock(blockHashOrBlockTag, true));\n    }\n\n    async getTransaction(transactionHash: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransaction\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            const tx = this.formatter.transactionResponse(result);\n\n            if (tx.blockNumber == null) {\n                tx.confirmations = 0;\n\n            } else if (tx.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - tx.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                tx.confirmations = confirmations;\n            }\n\n            return this._wrapTransaction(tx);\n        }, { oncePoll: this });\n    }\n\n    async getTransactionReceipt(transactionHash: string | Promise<string>): Promise<TransactionReceipt> {\n        await this.getNetwork();\n\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransactionReceipt\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            // \"geth-etc\" returns receipts before they are ready\n            if (result.blockHash == null) { return undefined; }\n\n            const receipt = this.formatter.receipt(result);\n\n            if (receipt.blockNumber == null) {\n                receipt.confirmations = 0;\n\n            } else if (receipt.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                receipt.confirmations = confirmations;\n            }\n\n            return receipt;\n        }, { oncePoll: this });\n    }\n\n    async getLogs(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Array<Log>> {\n        await this.getNetwork();\n        const params = await resolveProperties({ filter: this._getFilter(filter) });\n        const logs: Array<Log> = await this.perform(\"getLogs\", params);\n        logs.forEach((log) => {\n            if (log.removed == null) { log.removed = false; }\n        });\n        return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n    }\n\n    async getEtherPrice(): Promise<number> {\n        await this.getNetwork();\n        return this.perform(\"getEtherPrice\", { });\n    }\n\n    async _getBlockTag(blockTag: BlockTag | Promise<BlockTag>): Promise<BlockTag> {\n        blockTag = await blockTag;\n\n        if (typeof(blockTag) === \"number\" && blockTag < 0) {\n            if (blockTag % 1) {\n                logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n            }\n\n            let blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            blockNumber += blockTag;\n            if (blockNumber < 0) { blockNumber = 0; }\n            return this.formatter.blockTag(blockNumber)\n        }\n\n        return this.formatter.blockTag(blockTag);\n    }\n\n\n    async getResolver(name: string): Promise<null | Resolver> {\n        let currentName = name;\n        while (true) {\n            if (currentName === \"\" || currentName === \".\") { return null; }\n\n            // Optimization since the eth node cannot change and does\n            // not have a wildcard resolver\n            if (name !== \"eth\" && currentName === \"eth\") { return null; }\n\n            // Check the current node for a resolver\n            const addr = await this._getResolver(currentName, \"getResolver\");\n\n            // Found a resolver!\n            if (addr != null) {\n                const resolver = new Resolver(this, addr, name);\n\n                // Legacy resolver found, using EIP-2544 so it isn't safe to use\n                if (currentName !== name && !(await resolver.supportsWildcard())) { return null; }\n\n                return resolver;\n            }\n\n            // Get the parent node\n            currentName = currentName.split(\".\").slice(1).join(\".\");\n        }\n\n    }\n\n    async _getResolver(name: string, operation?: string): Promise<string> {\n        if (operation == null) { operation = \"ENS\"; }\n\n        const network = await this.getNetwork();\n\n        // No ENS...\n        if (!network.ensAddress) {\n            logger.throwError(\n                \"network does not support ENS\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { operation, network: network.name }\n            );\n        }\n\n        try {\n            // keccak256(\"resolver(bytes32)\")\n            const addrData = await this.call({\n                to: network.ensAddress,\n                data: (\"0x0178b8bf\" + namehash(name).substring(2))\n            });\n            return this.formatter.callAddress(addrData);\n        } catch (error) {\n            // ENS registry cannot throw errors on resolver(bytes32)\n        }\n\n        return null;\n    }\n\n    async resolveName(name: string | Promise<string>): Promise<null | string> {\n        name = await name;\n\n        // If it is already an address, nothing to resolve\n        try {\n            return Promise.resolve(this.formatter.address(name));\n        } catch (error) {\n            // If is is a hexstring, the address is bad (See #694)\n            if (isHexString(name)) { throw error; }\n        }\n\n        if (typeof(name) !== \"string\") {\n            logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n        }\n\n        // Get the addr from the resolver\n        const resolver = await this.getResolver(name);\n        if (!resolver) { return null; }\n\n        return await resolver.getAddress();\n    }\n\n    async lookupAddress(address: string | Promise<string>): Promise<null | string> {\n        address = await address;\n        address = this.formatter.address(address);\n\n        const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n        const resolverAddr = await this._getResolver(node, \"lookupAddress\");\n        if (resolverAddr == null) { return null; }\n\n        // keccak(\"name(bytes32)\")\n        const name = _parseString(await this.call({\n            to: resolverAddr,\n            data: (\"0x691f3431\" + namehash(node).substring(2))\n        }), 0);\n\n        const addr = await this.resolveName(name);\n        if (addr != address) { return null; }\n\n        return name;\n    }\n\n    async getAvatar(nameOrAddress: string): Promise<null | string> {\n        let resolver: Resolver = null;\n        if (isHexString(nameOrAddress)) {\n            // Address; reverse lookup\n            const address = this.formatter.address(nameOrAddress);\n\n            const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n            const resolverAddress = await this._getResolver(node, \"getAvatar\");\n            if (!resolverAddress) { return null; }\n\n            // Try resolving the avatar against the addr.reverse resolver\n            resolver = new Resolver(this, resolverAddress, node);\n            try {\n                const avatar = await resolver.getAvatar();\n                if (avatar) { return avatar.url; }\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n            }\n\n            // Try getting the name and performing forward lookup; allowing wildcards\n            try {\n                // keccak(\"name(bytes32)\")\n                const name = _parseString(await this.call({\n                    to: resolverAddress,\n                    data: (\"0x691f3431\" + namehash(node).substring(2))\n                }), 0);\n                resolver = await this.getResolver(name);\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n                return null;\n            }\n\n        } else {\n            // ENS name; forward lookup with wildcard\n            resolver = await this.getResolver(nameOrAddress);\n            if (!resolver) { return null; }\n        }\n\n        const avatar = await resolver.getAvatar();\n        if (avatar == null) { return null; }\n\n        return avatar.url;\n    }\n\n    perform(method: string, params: any): Promise<any> {\n        return logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n\n    _startEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _stopEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _addEventListener(eventName: EventType, listener: Listener, once: boolean): this {\n        const event = new Event(getEventTag(eventName), listener, once)\n        this._events.push(event);\n        this._startEvent(event);\n\n        return this;\n    }\n\n    on(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, false);\n    }\n\n    once(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, true);\n    }\n\n\n    emit(eventName: EventType, ...args: Array<any>): boolean {\n        let result = false;\n\n        let stopped: Array<Event> = [ ];\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) { return true; }\n\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n\n            result = true;\n\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n\n            return true;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return result;\n    }\n\n    listenerCount(eventName?: EventType): number {\n        if (!eventName) { return this._events.length; }\n\n        let eventTag = getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n\n    listeners(eventName?: EventType): Array<Listener> {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n\n        let eventTag = getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n\n    off(eventName: EventType, listener?: Listener): this {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n\n        const stopped: Array<Event> = [ ];\n\n        let found = false;\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) { return true; }\n            if (found) { return true; }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n\n    removeAllListeners(eventName?: EventType): this {\n        let stopped: Array<Event> = [ ];\n        if (eventName == null) {\n            stopped = this._events;\n\n            this._events = [ ];\n        } else {\n            const eventTag = getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) { return true; }\n                stopped.push(event);\n                return false;\n            });\n        }\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n}\n","export const HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n\n","\"use strict\";\n\nimport { BlockTag, FeeData, Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike } from \"@ethersproject/bytes\";\nimport { Deferrable, defineReadOnly, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst allowedTransactionKeys: Array<string> = [\n    \"accessList\", \"ccipReadEnabled\", \"chainId\", \"customData\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"\n];\n\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\n\n// EIP-712 Typed Data\n// See: https://eips.ethereum.org/EIPS/eip-712\n\nexport interface TypedDataDomain {\n    name?: string;\n    version?: string;\n    chainId?: BigNumberish;\n    verifyingContract?: string;\n    salt?: BytesLike;\n};\n\nexport interface TypedDataField {\n    name: string;\n    type: string;\n};\n\n// Sub-classes of Signer may optionally extend this interface to indicate\n// they have a private key available synchronously\nexport interface ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n}\n\n// Sub-Class Notes:\n//  - A Signer MUST always make sure, that if present, the \"from\" field\n//    matches the Signer, before sending or signing a transaction\n//  - A Signer SHOULD always wrap private information (such as a private\n//    key or mnemonic) in a function, so that console.log does not leak\n//    the data\n\n// @TODO: This is a temporary measure to preserve backwards compatibility\n//        In v6, the method on TypedDataSigner will be added to Signer\nexport interface TypedDataSigner {\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string>;\n}\n\nexport abstract class Signer {\n    readonly provider?: Provider;\n\n    ///////////////////\n    // Sub-classes MUST implement these\n\n    // Returns the checksum address\n    abstract getAddress(): Promise<string>\n\n    // Returns the signed prefixed-message. This MUST treat:\n    // - Bytes as a binary message\n    // - string as a UTF8-message\n    // i.e. \"0x1234\" is a SIX (6) byte string, NOT 2 bytes of data\n    abstract signMessage(message: Bytes | string): Promise<string>;\n\n    // Signs a transaction and returns the fully serialized, signed transaction.\n    // The EXACT transaction MUST be signed, and NO additional properties to be added.\n    // - This MAY throw if signing transactions is not supports, but if\n    //   it does, sentTransaction MUST be overridden.\n    abstract signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string>;\n\n    // Returns a new instance of the Signer, connected to provider.\n    // This MAY throw if changing providers is not supported.\n    abstract connect(provider: Provider): Signer;\n\n    readonly _isSigner: boolean;\n\n\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n\n\n    ///////////////////\n    // Sub-classes MAY override these\n\n    async getBalance(blockTag?: BlockTag): Promise<BigNumber> {\n        this._checkProvider(\"getBalance\");\n        return await this.provider.getBalance(this.getAddress(), blockTag);\n    }\n\n    async getTransactionCount(blockTag?: BlockTag): Promise<number> {\n        this._checkProvider(\"getTransactionCount\");\n        return await this.provider.getTransactionCount(this.getAddress(), blockTag);\n    }\n\n    // Populates \"from\" if unspecified, and estimates the gas for the transaction\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        this._checkProvider(\"estimateGas\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.estimateGas(tx);\n    }\n\n    // Populates \"from\" if unspecified, and calls with the transaction\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag): Promise<string> {\n        this._checkProvider(\"call\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.call(tx, blockTag);\n    }\n\n    // Populates all fields in a transaction, signs it and sends it to the network\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        this._checkProvider(\"sendTransaction\");\n        const tx = await this.populateTransaction(transaction);\n        const signedTx = await this.signTransaction(tx);\n        return await this.provider.sendTransaction(signedTx);\n    }\n\n    async getChainId(): Promise<number> {\n        this._checkProvider(\"getChainId\");\n        const network = await this.provider.getNetwork();\n        return network.chainId;\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        this._checkProvider(\"getGasPrice\");\n        return await this.provider.getGasPrice();\n    }\n\n    async getFeeData(): Promise<FeeData> {\n        this._checkProvider(\"getFeeData\");\n        return await this.provider.getFeeData();\n    }\n\n\n    async resolveName(name: string): Promise<string> {\n        this._checkProvider(\"resolveName\");\n        return await this.provider.resolveName(name);\n    }\n\n\n\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction: Deferrable<TransactionRequest>): Deferrable<TransactionRequest> {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n\n        const tx = shallowCopy(transaction);\n\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n\n        } else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n\n        return tx;\n    }\n\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    //\n    // Notes:\n    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n    async populateTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionRequest> {\n\n        const tx: Deferrable<TransactionRequest> = await resolveProperties(this.checkTransaction(transaction))\n\n        if (tx.to != null) {\n            tx.to = Promise.resolve(tx.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n\n            // Prevent this error from causing an UnhandledPromiseException\n            tx.to.catch((error) => {  });\n        }\n\n        // Do not allow mixing pre-eip-1559 and eip-1559 properties\n        const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);\n        if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n            logger.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n        } else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n            logger.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n        }\n\n        if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {\n            // Fully-formed EIP-1559 transaction (skip getFeeData)\n            tx.type = 2;\n\n        } else if (tx.type === 0 || tx.type === 1) {\n            // Explicit Legacy or EIP-2930 transaction\n\n            // Populate missing gasPrice\n            if (tx.gasPrice == null) { tx.gasPrice = this.getGasPrice(); }\n\n        } else {\n\n            // We need to get fee data to determine things\n            const feeData = await this.getFeeData();\n\n            if (tx.type == null) {\n                // We need to auto-detect the intended type of this transaction...\n\n                if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                    // The network supports EIP-1559!\n\n                    // Upgrade transaction from null to eip-1559\n                    tx.type = 2;\n\n                    if (tx.gasPrice != null) {\n                        // Using legacy gasPrice property on an eip-1559 network,\n                        // so use gasPrice as both fee properties\n                        const gasPrice = tx.gasPrice;\n                        delete tx.gasPrice;\n                        tx.maxFeePerGas = gasPrice;\n                        tx.maxPriorityFeePerGas = gasPrice;\n\n                    } else {\n                        // Populate missing fee data\n                        if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                        if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n                    }\n\n                } else if (feeData.gasPrice != null) {\n                    // Network doesn't support EIP-1559...\n\n                    // ...but they are trying to use EIP-1559 properties\n                    if (hasEip1559) {\n                        logger.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"populateTransaction\"\n                        });\n                    }\n\n                    // Populate missing fee data\n                    if (tx.gasPrice == null) { tx.gasPrice = feeData.gasPrice; }\n\n                    // Explicitly set untyped transaction to legacy\n                    tx.type = 0;\n\n                } else {\n                    // getFeeData has failed us.\n                    logger.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"signer.getFeeData\"\n                    });\n                }\n\n            } else if (tx.type === 2) {\n                // Explicitly using EIP-1559\n\n                // Populate missing fee data\n                if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n            }\n        }\n\n        if (tx.nonce == null) { tx.nonce = this.getTransactionCount(\"pending\"); }\n\n        if (tx.gasLimit == null) {\n            tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                if (forwardErrors.indexOf(error.code) >= 0) {\n                    throw error;\n                }\n\n                return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                    error: error,\n                    tx: tx\n                });\n            });\n        }\n\n        if (tx.chainId == null) {\n            tx.chainId = this.getChainId();\n        } else {\n            tx.chainId = Promise.all([\n                Promise.resolve(tx.chainId),\n                this.getChainId()\n            ]).then((results) => {\n                if (results[1] !== 0 && results[0] !== results[1]) {\n                    logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                }\n                return results[0];\n            });\n        }\n\n        return await resolveProperties(tx);\n    }\n\n\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n\n    _checkProvider(operation?: string): void {\n        if (!this.provider) { logger.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: (operation || \"_checkProvider\") });\n        }\n    }\n\n    static isSigner(value: any): value is Signer {\n        return !!(value && value._isSigner);\n    }\n}\n\nexport class VoidSigner extends Signer implements TypedDataSigner {\n    readonly address: string;\n\n    constructor(address: string, provider?: Provider) {\n        super();\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n\n    getAddress(): Promise<string> {\n        return Promise.resolve(this.address);\n    }\n\n    _fail(message: string, operation: string): Promise<any> {\n        return Promise.resolve().then(() => {\n            logger.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n\n    signMessage(message: Bytes | string): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n\n    connect(provider: Provider): VoidSigner {\n        return new VoidSigner(this.address, provider);\n    }\n}\n\n","export const version = \"abstract-signer/5.7.0\";\n","import { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nexport function id(text: string): string {\n    return keccak256(toUtf8Bytes(text));\n}\n","import { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { id } from \"./id\";\n\nconst padding = new Uint8Array(32);\npadding.fill(0);\n\nconst NegativeOne: BigNumber = BigNumber.from(-1);\nconst Zero: BigNumber = BigNumber.from(0);\nconst One: BigNumber = BigNumber.from(1);\nconst MaxUint256: BigNumber = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\nfunction hexPadRight(value: BytesLike) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32\n    if (padOffset) {\n        return hexConcat([ bytes, padding.slice(padOffset) ]);\n    }\n    return hexlify(bytes);\n}\n\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero.toHexString(), 32);\n\nconst domainFieldTypes: Record<string, string> = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\n\nconst domainFieldNames: Array<string> = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\n\nfunction checkString(key: string): (value: any) => string {\n    return function (value: any){\n        if (typeof(value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${ JSON.stringify(key) }`, `domain.${ key }`, value);\n        }\n        return value;\n    }\n}\n\nconst domainChecks: Record<string, (value: any) => any> = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function(value: any) {\n        try {\n            return BigNumber.from(value).toString()\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function(value: any) {\n        try {\n            return getAddress(value).toLowerCase();\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function(value: any) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) { throw new Error(\"bad length\"); }\n            return hexlify(bytes);\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n}\n\nfunction getBaseEncoder(type: string): (value: any) => string {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1): width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne): Zero;\n\n            return function(value: BigNumberish) {\n                const v = BigNumber.from(value);\n\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger.throwArgumentError(`value out-of-bounds for ${ type }`, \"value\", value);\n                }\n\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n\n            return function(value: BytesLike) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${ type }`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n\n    switch (type) {\n        case \"address\": return function(value: string) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function(value: boolean) {\n            return ((!value) ? hexFalse: hexTrue);\n        };\n        case \"bytes\": return function(value: BytesLike) {\n            return keccak256(value);\n        };\n        case \"string\": return function(value: string) {\n            return id(value);\n        };\n    }\n\n    return null;\n}\n\nfunction encodeType(name: string, fields: Array<TypedDataField>): string {\n    return `${ name }(${ fields.map(({ name, type }) => (type + \" \" + name)).join(\",\") })`;\n}\n\nexport class TypedDataEncoder {\n    readonly primaryType: string;\n    readonly types: Record<string, Array<TypedDataField>>;\n\n    readonly _encoderCache: Record<string, (value: any) => string>;\n    readonly _types: Record<string, string>;\n\n    constructor(types: Record<string, Array<TypedDataField>>) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n\n        defineReadOnly(this, \"_encoderCache\", { });\n        defineReadOnly(this, \"_types\", { });\n\n        // Link struct types to their direct child structs\n        const links: Record<string, Record<string, boolean>> = { };\n\n        // Link structs to structs which contain them as a child\n        const parents: Record<string, Array<string>> = { };\n\n        // Link all subtypes within a given struct\n        const subtypes: Record<string, Record<string, boolean>> = { };\n\n        Object.keys(types).forEach((type) => {\n            links[type] = { };\n            parents[type] = [ ];\n            subtypes[type] = { }\n        });\n\n        for (const name in types) {\n\n            const uniqueNames: Record<string, boolean> = { };\n\n            types[name].forEach((field) => {\n\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(`duplicate variable name ${ JSON.stringify(field.name) } in ${ JSON.stringify(name) }`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) { return ;}\n\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(`unknown type ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        } else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${ primaryTypes.map((t) => (JSON.stringify(t))).join(\", \") }`, \"types\", types);\n        }\n\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n\n        // Check for circular type references\n        function checkCircular(type: string, found: Record<string, boolean>) {\n            if (found[type]) {\n                logger.throwArgumentError(`circular type reference to ${ JSON.stringify(type) }`, \"types\", types);\n            }\n\n            found[type] = true;\n\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) { return; }\n\n                // Recursively check children\n                checkCircular(child, found);\n\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n\n            delete found[type];\n        }\n        checkCircular(this.primaryType, { });\n\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n\n    getEncoder(type: string): (value: any) => string {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n\n    _getEncoder(type: string): (value: any) => string {\n\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return encoder; }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value: Array<any>) => {\n                if (length >= 0 && value.length !== length) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n\n                return keccak256(hexConcat(result));\n            };\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value: Record<string, any>) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) { return keccak256(result); }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            }\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    encodeType(name: string): string {\n        const result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(`unknown type: ${ JSON.stringify(name) }`, \"name\", name);\n        }\n        return result;\n    }\n\n    encodeData(type: string, value: any): string {\n        return this.getEncoder(type)(value);\n    }\n\n    hashStruct(name: string, value: Record<string, any>): string {\n        return keccak256(this.encodeData(name, value));\n    }\n\n    encode(value: Record<string, any>): string {\n        return this.encodeData(this.primaryType, value);\n    }\n\n    hash(value: Record<string, any>): string {\n        return this.hashStruct(this.primaryType, value);\n    }\n\n    _visit(type: string, value: any, callback: (type: string, data: any) => any): any {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return callback(type, value); }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v: any) => this._visit(subtype, v, callback));\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, <Record<string, any>>{});\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    visit(value: Record<string, any>, callback: (type: string, data: any) => any): any {\n        return this._visit(this.primaryType, value, callback);\n    }\n\n    static from(types: Record<string, Array<TypedDataField>>): TypedDataEncoder {\n        return new TypedDataEncoder(types);\n    }\n\n    static getPrimaryType(types: Record<string, Array<TypedDataField>>): string {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n\n    static hashStruct(name: string, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n\n    static hashDomain(domain: TypedDataDomain): string {\n        const domainFields: Array<TypedDataField> = [ ];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${ JSON.stringify(name) }`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n\n    static encode(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n\n    static hash(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n\n    // Replaces all address types with ENS names with their looked up address\n    static async resolveNames(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, resolveName: (name: string) => Promise<string>): Promise<{ domain: TypedDataDomain, value: any }> {\n        // Make a copy to isolate it from the object passed in\n        domain = shallowCopy(domain);\n\n        // Look up all ENS names\n        const ensCache: Record<string, string> = { };\n\n        // Do we need to look up the domain's verifyingContract?\n        if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n            ensCache[domain.verifyingContract] = \"0x\";\n        }\n\n        // We are going to use the encoder to visit all the base values\n        const encoder = TypedDataEncoder.from(types);\n\n        // Get a list of all the addresses\n        encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && !isHexString(value, 20)) {\n                ensCache[value] = \"0x\";\n            }\n            return value;\n        });\n\n        // Lookup each name\n        for (const name in ensCache) {\n            ensCache[name] = await resolveName(name);\n        }\n\n        // Replace the domain verifyingContract if needed\n        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n            domain.verifyingContract = ensCache[domain.verifyingContract];\n        }\n\n        // Replace all ENS names with their address\n        value = encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && ensCache[value]) { return ensCache[value]; }\n            return value;\n        });\n\n        return { domain, value };\n    }\n\n    static getPayload(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): any {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n\n        // Derive the EIP712Domain Struct reference type\n        const domainValues: Record<string, any> = { };\n        const domainTypes: Array<{ name: string, type:string }> = [ ];\n\n        domainFieldNames.forEach((name) => {\n            const value = (<any>domain)[name];\n            if (value == null) { return; }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n\n        const encoder = TypedDataEncoder.from(types);\n\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        } else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n\n        // Validate the data structures and types\n        encoder.encode(value);\n\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type: string, value: any) => {\n\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof(value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n\n","\"use strict\";\n\n// See: https://github.com/ethereum/wiki/wiki/JSON-RPC\n\nimport { Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { Signer, TypedDataDomain, TypedDataField, TypedDataSigner } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Bytes, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { checkProperties, deepCopy, Deferrable, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { AccessList, accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson, poll } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider, Event } from \"./base-provider\";\n\n\nconst errorGas = [ \"call\", \"estimateGas\" ];\n\nfunction spelunk(value: any, requireData: boolean): null | { message: string, data: null | string } {\n    if (value == null) { return null; }\n\n    // These *are* the droids we're looking for.\n    if (typeof(value.message) === \"string\" && value.message.match(\"reverted\")) {\n        const data = isHexString(value.data) ? value.data: null;\n        if (!requireData || data) {\n            return { message: value.message, data };\n        }\n    }\n\n    // Spelunk further...\n    if (typeof(value) === \"object\") {\n        for (const key in value) {\n            const result = spelunk(value[key], requireData);\n            if (result) { return result; }\n        }\n        return null;\n    }\n\n    // Might be a JSON string we can further descend...\n    if (typeof(value) === \"string\") {\n        try {\n            return spelunk(JSON.parse(value), requireData);\n        } catch (error) { }\n    }\n\n    return null;\n}\n\nfunction checkError(method: string, error: any, params: any): any {\n\n    const transaction = params.transaction || params.signedTransaction;\n\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\") {\n        const result = spelunk(error, true);\n        if (result) { return result.data; }\n\n        // Nothing descriptive..\n        logger.throwError(\"missing revert data in call exception; Transaction reverted without a reason string\", Logger.errors.CALL_EXCEPTION, {\n            data: \"0x\", transaction, error\n        });\n    }\n\n    if (method === \"estimateGas\") {\n        // Try to find something, with a preference on SERVER_ERROR body\n        let result = spelunk(error.body, false);\n        if (result == null) { result = spelunk(error, false); }\n\n        // Found \"reverted\", this is a CALL_EXCEPTION\n        if (result) {\n            logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                reason: result.message, method, transaction, error\n            });\n        }\n    }\n\n    // @TODO: Should we spelunk for message too?\n\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof(error.error.message) === \"string\") {\n        message = error.error.message;\n    } else if (typeof(error.body) === \"string\") {\n        message = error.body;\n    } else if (typeof(error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit/i)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n\n    // \"nonce too low\"\n    if (message.match(/nonce (is )?too low/i)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced|transaction gas price.*too low/i)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/i)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nfunction timer(timeout: number): Promise<any> {\n    return new Promise(function(resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\n\nfunction getResult(payload: { error?: { code?: number, data?: any, message?: string }, result?: any }): any {\n    if (payload.error) {\n        // @TODO: not any\n        const error: any = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n\n    return payload.result;\n}\n\nfunction getLowerCase(value: string): string {\n    if (value) { return value.toLowerCase(); }\n    return value;\n}\n\nconst _constructorGuard = {};\n\nexport class JsonRpcSigner extends Signer implements TypedDataSigner {\n    readonly provider: JsonRpcProvider;\n    _index: number;\n    _address: string;\n\n    constructor(constructorGuard: any, provider: JsonRpcProvider, addressOrIndex?: string | number) {\n        super();\n\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n\n        defineReadOnly(this, \"provider\", provider);\n\n        if (addressOrIndex == null) { addressOrIndex = 0; }\n\n        if (typeof(addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n\n        } else if (typeof(addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n\n        } else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n\n    connect(provider: Provider): JsonRpcSigner {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n\n    connectUnchecked(): JsonRpcSigner {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n\n    getAddress(): Promise<string> {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index])\n        });\n    }\n\n    sendUncheckedTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        transaction = shallowCopy(transaction);\n\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) { address = address.toLowerCase(); }\n            return address;\n        });\n\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.provider.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n        }\n\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            } else {\n                tx.from = sender;\n            }\n\n            const hexTx = (<any>this.provider.constructor).hexlifyTransaction(tx, { from: true });\n\n            return this.provider.send(\"eth_sendTransaction\", [ hexTx ]).then((hash) => {\n                return hash;\n            }, (error) => {\n                if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                    logger.throwError(\"user rejected transaction\", Logger.errors.ACTION_REJECTED, {\n                        action: \"sendTransaction\",\n                        transaction: tx\n                    });\n                }\n\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        // This cannot be mined any earlier than any recent block\n        const blockNumber = await this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n\n        // Send the transaction\n        const hash = await this.sendUncheckedTransaction(transaction);\n\n        try {\n            // Unfortunately, JSON-RPC only provides and opaque transaction hash\n            // for a response, and we need the actual transaction, so we poll\n            // for it; it should show up very quickly\n            return await poll(async () => {\n                const tx = await this.provider.getTransaction(hash);\n                if (tx === null) { return undefined; }\n                return this.provider._wrapTransaction(tx, hash, blockNumber);\n            }, { oncePoll: this.provider });\n        } catch (error) {\n            (<any>error).transactionHash = hash;\n            throw error;\n        }\n    }\n\n    async signMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n\n\n        try {\n            return await this.provider.send(\"personal_sign\", [ hexlify(data), address.toLowerCase() ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"signMessage\",\n                    from: address,\n                    message: data\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _legacySignMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n\n        try {\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return await this.provider.send(\"eth_sign\", [ address.toLowerCase(), hexlify(data) ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_legacySignMessage\",\n                    from: address,\n                    message: data\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        // Populate any ENS names (in-place)\n        const populated = await _TypedDataEncoder.resolveNames(domain, types, value, (name: string) => {\n            return this.provider.resolveName(name);\n        });\n\n        const address = await this.getAddress();\n\n        try {\n            return await this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n            ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_signTypedData\",\n                    from: address,\n                    message: { domain: populated.domain, types, value: populated.value }\n                });\n            }\n            throw error;\n        }\n    }\n\n    async unlock(password: string): Promise<boolean> {\n        const provider = this.provider;\n\n        const address = await this.getAddress();\n\n        return provider.send(\"personal_unlockAccount\", [ address.toLowerCase(), password, null ]);\n    }\n}\n\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return <TransactionResponse>{\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations?: number) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n}\n\nexport class JsonRpcProvider extends BaseProvider {\n    readonly connection: ConnectionInfo;\n\n    _pendingFilter: Promise<number>;\n    _nextId: number;\n\n    // During any given event loop, the results for a given call will\n    // all be the same, so we can dedup the calls to save requests and\n    // bandwidth. @TODO: Try out generalizing this against send?\n    _eventLoopCache: Record<string, Promise<any>>;\n    get _cache(): Record<string, Promise<any>> {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = { };\n        }\n        return this._eventLoopCache;\n    }\n\n    constructor(url?: ConnectionInfo | string, network?: Networkish) {\n        let networkOrReady: Networkish | Promise<Network> = network;\n\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Default URL\n        if (!url) { url = getStatic<() => string>(this.constructor, \"defaultUrl\")(); }\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"connection\",Object.freeze({\n                url: url\n            }));\n        } else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n\n        this._nextId = 42;\n    }\n\n    static defaultUrl(): string {\n        return \"http:/\\/localhost:8545\";\n    }\n\n    detectNetwork(): Promise<Network> {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n\n    async _uncachedDetectNetwork(): Promise<Network> {\n        await timer(0);\n\n        let chainId = null;\n        try {\n            chainId = await this.send(\"eth_chainId\", [ ]);\n        } catch (error) {\n            try {\n                chainId = await this.send(\"net_version\", [ ]);\n            } catch (error) { }\n        }\n\n        if (chainId != null) {\n            const getNetwork = getStatic<(network: Networkish) => Network>(this.constructor, \"getNetwork\");\n            try {\n                return getNetwork(BigNumber.from(chainId).toNumber());\n            } catch (error) {\n                return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                    chainId: chainId,\n                    event: \"invalidNetwork\",\n                    serverError: error\n                });\n            }\n        }\n\n        return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n            event: \"noNetwork\"\n        });\n    }\n\n    getSigner(addressOrIndex?: string | number): JsonRpcSigner {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n\n    getUncheckedSigner(addressOrIndex?: string | number): UncheckedJsonRpcSigner {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return this.send(\"eth_accounts\", []).then((accounts: Array<string>) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([ \"eth_chainId\", \"eth_blockNumber\" ].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n\n            return result;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n\n            throw error;\n        });\n\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n\n        return result;\n    }\n\n    prepareRequest(method: string, params: any): [ string, Array<any> ] {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [ \"eth_blockNumber\", [] ];\n\n            case \"getGasPrice\":\n                return [ \"eth_gasPrice\", [] ];\n\n            case \"getBalance\":\n                return [ \"eth_getBalance\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getTransactionCount\":\n                return [ \"eth_getTransactionCount\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getCode\":\n                return [ \"eth_getCode\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getStorageAt\":\n                return [ \"eth_getStorageAt\", [ getLowerCase(params.address), hexZeroPad(params.position, 32), params.blockTag ] ];\n\n            case \"sendTransaction\":\n                return [ \"eth_sendRawTransaction\", [ params.signedTransaction ] ]\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [ \"eth_getBlockByNumber\", [ params.blockTag, !!params.includeTransactions ] ];\n                } else if (params.blockHash) {\n                    return [ \"eth_getBlockByHash\", [ params.blockHash, !!params.includeTransactions ] ];\n                }\n                return null;\n\n            case \"getTransaction\":\n                return [ \"eth_getTransactionByHash\", [ params.transactionHash ] ];\n\n            case \"getTransactionReceipt\":\n                return [ \"eth_getTransactionReceipt\", [ params.transactionHash ] ];\n\n            case \"call\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_call\", [ hexlifyTransaction(params.transaction, { from: true }), params.blockTag ] ];\n            }\n\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_estimateGas\", [ hexlifyTransaction(params.transaction, { from: true }) ] ];\n            }\n\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [ \"eth_getLogs\", [ params.filter ] ];\n\n            default:\n                break;\n        }\n\n        return null;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // Legacy networks do not like the type field being passed along (which\n        // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n        if (method === \"call\" || method === \"estimateGas\") {\n            const tx = params.transaction;\n            if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                // If there are no EIP-1559 properties, it might be non-EIP-1559\n                if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                    const feeData = await this.getFeeData();\n                    if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                        // Network doesn't know about EIP-1559 (and hence type)\n                        params = shallowCopy(params);\n                        params.transaction = shallowCopy(tx);\n                        delete params.transaction.type;\n                    }\n                }\n            }\n        }\n\n        const args = this.prepareRequest(method,  params);\n\n        if (args == null) {\n            logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n        }\n        try {\n            return await this.send(args[0], args[1])\n        } catch (error) {\n            return checkError(method, error, params);\n        }\n    }\n\n    _startEvent(event: Event): void {\n        if (event.tag === \"pending\") { this._startPending(); }\n        super._startEvent(event);\n    }\n\n    _startPending(): void {\n        if (this._pendingFilter != null) { return; }\n        const self = this;\n\n        const pendingFilter: Promise<number> = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n\n        pendingFilter.then(function(filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [ filterId ]).then(function(hashes: Array<string>) {\n                    if (self._pendingFilter != pendingFilter) { return null; }\n\n                    let seq = Promise.resolve();\n                    hashes.forEach(function(hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function() {\n                            return self.getTransaction(hash).then(function(tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n\n                    return seq.then(function() {\n                        return timer(1000);\n                    });\n                }).then(function() {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [ filterId ]);\n                        return;\n                    }\n                    setTimeout(function() { poll(); }, 0);\n\n                    return null;\n                }).catch((error: Error) => { });\n            }\n            poll();\n\n            return filterId;\n        }).catch((error: Error) => { });\n    }\n\n    _stopEvent(event: Event): void {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction: TransactionRequest, allowExtra?: { [key: string]: boolean }): { [key: string]: string | AccessList } {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) { allowed[key] = true; }\n            }\n        }\n\n        checkProperties(transaction, allowed);\n\n        const result: { [key: string]: string | AccessList } = {};\n\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            const value = hexValue(BigNumber.from((<any>transaction)[key]));\n            if (key === \"gasLimit\") { key = \"gas\"; }\n            result[key] = value;\n        });\n\n        [\"from\", \"to\", \"data\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            result[key] = hexlify((<any>transaction)[key]);\n        });\n\n        if ((<any>transaction).accessList) {\n            result[\"accessList\"] = accessListify((<any>transaction).accessList);\n        }\n\n        return result;\n    }\n}\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\n\nlet WS: any = null;\n\ntry {\n    WS = (WebSocket as any);\n    if (WS == null) { throw new Error(\"inject please\"); }\n} catch (error) {\n    const logger = new Logger(version);\n    WS = function() {\n        logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    }\n}\n//export default WS;\n//module.exports = WS;\nexport { WS as WebSocket };\n","\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Event } from \"./base-provider\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nimport { WebSocket } from \"./ws\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicates\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\n\nlet NextId = 1;\n\nexport type InflightRequest = {\n     callback: (error: Error, result: any) => void;\n     payload: string;\n};\n\nexport type Subscription = {\n    tag: string;\n    processFunc: (payload: any) => void;\n};\n\nexport interface WebSocketLike {\n    onopen: ((...args: Array<any>) => any) | null;\n    onmessage: ((...args: Array<any>) => any) | null;\n    onerror: ((...args: Array<any>) => any) | null;\n\n    readyState: number;\n\n    send(payload: any): void;\n    close(code?: number, reason?: string): void;\n}\n\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\n\nexport class WebSocketProvider extends JsonRpcProvider {\n    readonly _websocket: any;\n    readonly _requests: { [ name: string ]: InflightRequest };\n    readonly _detectNetwork: Promise<Network>;\n\n    // Maps event tag to subscription ID (we dedupe identical events)\n    readonly _subIds: { [ tag: string ]: Promise<string> };\n\n    // Maps Subscription ID to Subscription\n    readonly _subs: { [ name: string ]: Subscription };\n\n    _wsReady: boolean;\n\n    constructor(url: string | WebSocketLike, network?: Networkish) {\n\n        // This will be added in the future; please open an issue to expedite\n        if (network === \"any\") {\n            logger.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n            });\n        }\n\n        if (typeof(url) === \"string\") {\n            super(url, network);\n        } else {\n            super(\"_websocket\", network);\n        }\n\n        this._pollingInterval = -1;\n\n        this._wsReady = false;\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"_websocket\", new WebSocket(this.connection.url));\n        } else {\n            defineReadOnly(this, \"_websocket\", url);\n        }\n\n        defineReadOnly(this, \"_requests\", { });\n        defineReadOnly(this, \"_subs\", { });\n        defineReadOnly(this, \"_subIds\", { });\n        defineReadOnly(this, \"_detectNetwork\", super.detectNetwork());\n\n        // Stall sending requests until the socket is open...\n        this.websocket.onopen = () => {\n            this._wsReady = true;\n            Object.keys(this._requests).forEach((id) => {\n                this.websocket.send(this._requests[id].payload);\n            });\n        };\n\n        this.websocket.onmessage = (messageEvent: { data: string }) => {\n            const data = messageEvent.data;\n            const result = JSON.parse(data);\n            if (result.id != null) {\n                const id = String(result.id);\n                const request = this._requests[id];\n                delete this._requests[id];\n\n                if (result.result !== undefined) {\n                    request.callback(null, result.result);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: JSON.parse(request.payload),\n                        response: result.result,\n                        provider: this\n                    });\n\n                } else {\n                    let error: Error = null;\n                    if (result.error) {\n                        error = new Error(result.error.message || \"unknown error\");\n                        defineReadOnly(<any>error, \"code\", result.error.code || null);\n                        defineReadOnly(<any>error, \"response\", data);\n                    } else {\n                        error = new Error(\"unknown error\");\n                    }\n\n                    request.callback(error, undefined);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: JSON.parse(request.payload),\n                        provider: this\n                    });\n\n                }\n\n            } else if (result.method === \"eth_subscription\") {\n                // Subscription...\n                const sub = this._subs[result.params.subscription];\n                if (sub) {\n                    //this.emit.apply(this,                  );\n                    sub.processFunc(result.params.result)\n                }\n\n            } else {\n                console.warn(\"this should not happen\");\n            }\n        };\n\n        // This Provider does not actually poll, but we want to trigger\n        // poll events for things that depend on them (like stalling for\n        // block and transaction lookups)\n        const fauxPoll = setInterval(() => {\n            this.emit(\"poll\");\n        }, 1000);\n        if (fauxPoll.unref) { fauxPoll.unref(); }\n    }\n\n    // Cannot narrow the type of _websocket, as that is not backwards compatible\n    // so we add a getter and let the WebSocket be a public API.\n    get websocket(): WebSocketLike { return this._websocket; }\n\n    detectNetwork(): Promise<Network> {\n        return this._detectNetwork;\n    }\n\n    get pollingInterval(): number {\n        return 0;\n    }\n\n    resetEventsBlock(blockNumber: number): void {\n        logger.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resetEventBlock\"\n        });\n    }\n\n    set pollingInterval(value: number) {\n        logger.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPollingInterval\"\n        });\n    }\n\n    async poll(): Promise<void> {\n        return null;\n    }\n\n    set polling(value: boolean) {\n        if (!value) { return; }\n\n        logger.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPolling\"\n        });\n    }\n\n    send(method: string, params?: Array<any>): Promise<any> {\n        const rid = NextId++;\n\n        return new Promise((resolve, reject) => {\n            function callback(error: Error, result: any) {\n                if (error) { return reject(error); }\n                return resolve(result);\n            }\n\n            const payload = JSON.stringify({\n                method: method,\n                params: params,\n                id: rid,\n                jsonrpc: \"2.0\"\n            });\n\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: this\n            });\n\n            this._requests[String(rid)] = { callback, payload };\n\n            if (this._wsReady) { this.websocket.send(payload); }\n        });\n    }\n\n    static defaultUrl(): string {\n        return \"ws:/\\/localhost:8546\";\n    }\n\n    async _subscribe(tag: string, param: Array<any>, processFunc: (result: any) => void): Promise<void> {\n        let subIdPromise = this._subIds[tag];\n        if (subIdPromise == null) {\n            subIdPromise = Promise.all(param).then((param) => {\n                return this.send(\"eth_subscribe\", param);\n            });\n            this._subIds[tag] = subIdPromise;\n        }\n        const subId = await subIdPromise;\n        this._subs[subId] = { tag, processFunc };\n    }\n\n    _startEvent(event: Event): void {\n        switch (event.type) {\n            case \"block\":\n                this._subscribe(\"block\", [ \"newHeads\" ], (result: any) => {\n                    const blockNumber = BigNumber.from(result.number).toNumber();\n                    this._emitted.block = blockNumber;\n                    this.emit(\"block\", blockNumber);\n                });\n                break;\n\n            case \"pending\":\n                this._subscribe(\"pending\", [ \"newPendingTransactions\" ], (result: any) => {\n                    this.emit(\"pending\", result);\n                });\n                break;\n\n            case \"filter\":\n                this._subscribe(event.tag, [ \"logs\", this._getFilter(event.filter) ], (result: any) => {\n                    if (result.removed == null) { result.removed = false; }\n                    this.emit(event.filter, this.formatter.filterLog(result));\n                });\n                break;\n\n            case \"tx\": {\n                const emitReceipt = (event: Event) => {\n                    const hash = event.hash;\n                    this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt) { return; }\n                        this.emit(hash, receipt);\n                    });\n                };\n\n                // In case it is already mined\n                emitReceipt(event);\n\n                // To keep things simple, we start up a single newHeads subscription\n                // to keep an eye out for transactions we are watching for.\n                // Starting a subscription for an event (i.e. \"tx\") that is already\n                // running is (basically) a nop.\n                this._subscribe(\"tx\", [ \"newHeads\" ], (result: any) => {\n                    this._events.filter((e) => (e.type === \"tx\")).forEach(emitReceipt);\n                });\n                break;\n            }\n\n            // Nothing is needed\n            case \"debug\":\n            case \"poll\":\n            case \"willPoll\":\n            case \"didPoll\":\n            case \"error\":\n                break;\n\n            default:\n                console.log(\"unhandled:\", event);\n                break;\n        }\n    }\n\n    _stopEvent(event: Event): void {\n        let tag = event.tag;\n\n        if (event.type === \"tx\") {\n            // There are remaining transaction event listeners\n            if (this._events.filter((e) => (e.type === \"tx\")).length) {\n                return;\n            }\n            tag = \"tx\";\n        } else if (this.listenerCount(event.event)) {\n            // There are remaining event listeners\n            return;\n        }\n\n        const subId = this._subIds[tag];\n        if (!subId) { return; }\n\n       delete this._subIds[tag];\n       subId.then((subId) => {\n            if (!this._subs[subId]) { return; }\n            delete this._subs[subId];\n            this.send(\"eth_unsubscribe\", [ subId ]);\n        });\n    }\n\n    async destroy(): Promise<void> {\n        // Wait until we have connected before trying to disconnect\n        if (this.websocket.readyState === WebSocket.CONNECTING) {\n            await (new Promise((resolve) => {\n                this.websocket.onopen = function() {\n                    resolve(true);\n                };\n\n                this.websocket.onerror = function() {\n                    resolve(false);\n                };\n            }));\n        }\n\n        // Hangup\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n        this.websocket.close(1000);\n    }\n}\n","\n\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly, getStatic } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { CommunityResourcable } from \"./formatter\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\n\ntype getUrlFunc = (network: Network, apiKey: string) => string | ConnectionInfo;\n\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nexport class StaticJsonRpcProvider extends JsonRpcProvider {\n    async detectNetwork(): Promise<Network> {\n        let network = this.network;\n        if (network == null) {\n            network = await super.detectNetwork();\n\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // If still not set, set it\n            if (this._network == null) {\n                // A static network does not support \"any\"\n                defineReadOnly(this, \"_network\", network);\n\n                this.emit(\"network\", network, null);\n            }\n        }\n        return network;\n    }\n}\n\nexport abstract class UrlJsonRpcProvider extends StaticJsonRpcProvider implements CommunityResourcable {\n    readonly apiKey: any;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        logger.checkAbstract(new.target, UrlJsonRpcProvider);\n\n        // Normalize the Network and API Key\n        network = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n        apiKey = getStatic<(apiKey: string) => string>(new.target, \"getApiKey\")(apiKey);\n\n        const connection = getStatic<getUrlFunc>(new.target, \"getUrl\")(network, apiKey);\n\n        super(connection, network);\n\n        if (typeof(apiKey) === \"string\") {\n            defineReadOnly(this, \"apiKey\", apiKey);\n        } else if (apiKey != null) {\n            Object.keys(apiKey).forEach((key) => {\n                defineReadOnly<any, any>(this, key, apiKey[key]);\n            });\n        }\n    }\n\n    _startPending(): void {\n        logger.warn(\"WARNING: API provider does not support pending filters\");\n    }\n\n    isCommunityResource(): boolean {\n        return false;\n    }\n\n    getSigner(address?: string): JsonRpcSigner {\n        return logger.throwError(\n            \"API provider does not support signing\",\n            Logger.errors.UNSUPPORTED_OPERATION,\n            { operation: \"getSigner\" }\n        );\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return Promise.resolve([]);\n    }\n\n    // Return a defaultApiKey if null, otherwise validate the API key\n    static getApiKey(apiKey: any): any {\n        return apiKey;\n    }\n\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n    static getUrl(network: Network, apiKey: any): string | ConnectionInfo {\n        return logger.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n            operation: \"getUrl\"\n        });\n    }\n}\n","\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\nimport { WebSocketProvider } from \"./websocket-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\n\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\"\n\nexport class AlchemyWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new AlchemyProvider(network, apiKey);\n\n        const url = provider.connection.url.replace(/^http/i, \"ws\")\n                                           .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n\n        super(url, provider.network);\n        defineReadOnly(this, \"apiKey\", provider.apiKey);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n\nexport class AlchemyProvider extends UrlJsonRpcProvider {\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): AlchemyWebSocketProvider {\n        return new AlchemyWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: string): ConnectionInfo {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.alchemyapi.io/v2/\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.alchemyapi.io/v2/\";\n                break;\n            case \"kovan\":\n                host = \"eth-kovan.alchemyapi.io/v2/\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum\":\n                host = \"arb-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum-rinkeby\":\n                host = \"arb-rinkeby.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum-goerli\":\n                host = \"arb-goerli.g.alchemy.com/v2/\";\n                break;\n            case \"optimism\":\n                host = \"opt-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"optimism-kovan\":\n                host = \"opt-kovan.g.alchemy.com/v2/\";\n                break;\n            case \"optimism-goerli\":\n                host = \"opt-goerli.g.alchemy.com/v2/\"\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n","\nimport { Network } from \"@ethersproject/networks\";\n\nimport { showThrottleMessage } from \"./formatter\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport type { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n\nconst defaultApiKey = \"9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972\";\n\nfunction getHost(name: string): string {\n    switch (name) {\n        case \"homestead\":\n            return \"rpc.ankr.com/eth/\";\n        case \"ropsten\":\n            return \"rpc.ankr.com/eth_ropsten/\";\n        case \"rinkeby\":\n            return \"rpc.ankr.com/eth_rinkeby/\";\n        case \"goerli\":\n            return \"rpc.ankr.com/eth_goerli/\";\n\n        case \"matic\":\n            return \"rpc.ankr.com/polygon/\";\n\n        case \"arbitrum\":\n            return \"rpc.ankr.com/arbitrum/\";\n    }\n    return logger.throwArgumentError(\"unsupported network\", \"name\", name);\n}\n\nexport class AnkrProvider extends UrlJsonRpcProvider {\n    readonly apiKey: string;\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        if (apiKey == null) { apiKey = defaultApiKey; }\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\\/\" + getHost(network.name) + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n}\n","\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport class CloudflareProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey != null) {\n            logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return host;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // The Cloudflare provider does not support eth_blockNumber,\n        // so we get the latest block and pull it from that\n        if (method === \"getBlockNumber\") {\n            const block = await super.perform(\"getBlock\", { blockTag: \"latest\" });\n            return block.number;\n        }\n\n        return super.perform(method, params);\n    }\n}\n","\"use strict\";\n\nimport { BlockTag, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson } from \"@ethersproject/web\";\n\nimport { showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider } from \"./base-provider\";\n\n\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction: TransactionRequest): Record<string, string> {\n    const result: Record<string, string> = { };\n    for (let key in transaction) {\n        if ((<any>transaction)[key] == null) { continue; }\n        let value = (<any>transaction)[key];\n        if (key === \"type\" && value === 0) { continue; }\n\n        // Quantity-types require no leading zero, unless 0\n        if ((<any>{ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true })[key]) {\n            value = hexValue(hexlify(value));\n        } else if (key === \"accessList\") {\n            value = \"[\" + accessListify(value).map((set) => {\n                return `{address:\"${ set.address }\",storageKeys:[\"${ set.storageKeys.join('\",\"') }\"]}`;\n            }).join(\",\") + \"]\";\n        } else {\n            value = hexlify(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\n\nfunction getResult(result: { status?: number, message?: string, result?: any }): any {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n\n    if (result.status != 1 || typeof(result.message) !== \"string\" || !result.message.match(/^OK/)) {\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n\n    return result.result;\n}\n\nfunction getJsonResult(result: { jsonrpc: string, result?: any, error?: { code?: number, data?: any, message?: string} } ): any {\n    // This response indicates we are being throttled\n    if (result && (<any>result).status == 0 && (<any>result).message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        const error: any = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n\n    if (result.error) {\n        // @TODO: not any\n        const error: any = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) { error.code = result.error.code; }\n        if (result.error.data) { error.data = result.error.data; }\n        throw error;\n    }\n\n    return result.result;\n}\n\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag: string): number | \"latest\" {\n    if (blockTag === \"pending\") { throw new Error(\"pending not supported\"); }\n    if (blockTag === \"latest\") { return blockTag; }\n\n    return parseInt(blockTag.substring(2), 16);\n}\n\n\nfunction checkError(method: string, error: any, transaction: any): any {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n\n        // Etherscan keeps changing their string\n        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n            // Etherscan prefixes the data like \"Reverted 0x1234\"\n            let data = e.data;\n            if (data) { data = \"0x\" + data.replace(/^.*0x/i, \"\"); }\n\n            if (isHexString(data)) { return data; }\n\n            logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n                error, data: \"0x\"\n            });\n        }\n    }\n\n    // Get the message from any nested error structure\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR) {\n        if (error.error && typeof(error.error.message) === \"string\") {\n            message = error.error.message;\n        } else if (typeof(error.body) === \"string\") {\n            message = error.body;\n        } else if (typeof(error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n         logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n         });\n    }\n\n    if (message.match(/execution failed due to an exception|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nexport class EtherscanProvider extends BaseProvider{\n    readonly baseUrl: string;\n    readonly apiKey: string | null;\n\n    constructor(network?: Networkish, apiKey?: string) {\n        super(network);\n\n        defineReadOnly(this, \"baseUrl\", this.getBaseUrl());\n        defineReadOnly(this, \"apiKey\", apiKey || null);\n    }\n\n    getBaseUrl(): string {\n        switch(this.network ? this.network.name: \"invalid\") {\n            case \"homestead\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"ropsten\":\n                return \"https:/\\/api-ropsten.etherscan.io\";\n            case \"rinkeby\":\n                return \"https:/\\/api-rinkeby.etherscan.io\";\n            case \"kovan\":\n                return \"https:/\\/api-kovan.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            case \"optimism\":\n                return \"https:/\\/api-optimistic.etherscan.io\";\n            case \"optimism-kovan\":\n                return \"https:/\\/api-kovan-optimistic.etherscan.io\";\n            default:\n        }\n\n        return logger.throwArgumentError(\"unsupported network\", \"network\", this.network.name);\n    }\n\n    getUrl(module: string, params: Record<string, string>): string {\n        const query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${ key }=${ value }`\n            }\n            return accum\n        }, \"\");\n        const apiKey = ((this.apiKey) ? `&apikey=${ this.apiKey }`: \"\");\n        return `${ this.baseUrl }/api?module=${ module }${ query }${ apiKey }`;\n    }\n\n    getPostUrl(): string {\n        return `${ this.baseUrl }/api`;\n    }\n\n    getPostData(module: string, params: Record<string, any>): Record<string, any> {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    }\n\n    async fetch(module: string, params: Record<string, any>, post?: boolean): Promise<any> {\n        const url = (post ? this.getPostUrl(): this.getUrl(module, params));\n        const payload = (post ? this.getPostData(module, params): null);\n        const procFunc = (module === \"proxy\") ? getJsonResult: getResult;\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: url,\n            provider: this\n        });\n\n        const connection: ConnectionInfo = {\n            url: url,\n            throttleSlotInterval: 1000,\n            throttleCallback: (attempt: number, url: string) => {\n                if (this.isCommunityResource()) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        let payloadStr: string = null;\n        if (payload) {\n            connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n            payloadStr = Object.keys(payload).map((key) => {\n                return `${ key }=${ payload[key] }`\n            }).join(\"&\");\n        }\n\n        const result = await fetchJson(connection, payloadStr, procFunc || getJsonResult);\n\n        this.emit(\"debug\", {\n            action: \"response\",\n            request: url,\n            response: deepCopy(result),\n            provider: this\n        });\n\n        return result;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        return this.network;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n\n        switch (method) {\n            case \"getBlockNumber\":\n                return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n\n            case \"getGasPrice\":\n                return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n\n            case \"getBalance\":\n                // Returns base-10 result\n                return this.fetch(\"account\", {\n                    action: \"balance\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getTransactionCount\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionCount\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getCode\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getCode\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getStorageAt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getStorageAt\",\n                    address: params.address,\n                    position: params.position,\n                    tag: params.blockTag\n                });\n\n            case \"sendTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_sendRawTransaction\",\n                    hex: params.signedTransaction\n                }, true).catch((error) => {\n                    return checkError(\"sendTransaction\", error, params.signedTransaction);\n                });\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getBlockByNumber\",\n                        tag: params.blockTag,\n                        boolean: (params.includeTransactions ? \"true\": \"false\")\n                    });\n                }\n                throw new Error(\"getBlock by blockHash not implemented\");\n\n            case \"getTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionByHash\",\n                    txhash: params.transactionHash\n                });\n\n            case \"getTransactionReceipt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionReceipt\",\n                    txhash: params.transactionHash\n                });\n\n            case \"call\": {\n                if (params.blockTag !== \"latest\") {\n                    throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                }\n\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_call\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"call\", error, params.transaction);\n                }\n            }\n\n            case \"estimateGas\": {\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_estimateGas\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"estimateGas\", error, params.transaction);\n                }\n            }\n\n            case \"getLogs\": {\n                const args: Record<string, any> = { action: \"getLogs\" }\n\n                if (params.filter.fromBlock) {\n                    args.fromBlock = checkLogTag(params.filter.fromBlock);\n                }\n\n                if (params.filter.toBlock) {\n                    args.toBlock = checkLogTag(params.filter.toBlock);\n                }\n\n                if (params.filter.address) {\n                    args.address = params.filter.address;\n                }\n\n                // @TODO: We can handle slightly more complicated logs using the logs API\n                if (params.filter.topics && params.filter.topics.length > 0) {\n                    if (params.filter.topics.length > 1) {\n                        logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                    }\n\n                    if (params.filter.topics.length === 1) {\n                        const topic0 = params.filter.topics[0];\n                        if (typeof(topic0) !== \"string\" || topic0.length !== 66) {\n                            logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                        }\n                        args.topic0 = topic0;\n                    }\n                }\n\n                const logs: Array<any> = await this.fetch(\"logs\", args);\n\n                // Cache txHash => blockHash\n                let blocks: { [tag: string]: string } = {};\n\n                // Add any missing blockHash to the logs\n                for (let i = 0; i < logs.length; i++) {\n                    const log = logs[i];\n                    if (log.blockHash != null) { continue; }\n                    if (blocks[log.blockNumber] == null) {\n                        const block = await this.getBlock(log.blockNumber);\n                        if (block) {\n                            blocks[log.blockNumber] = block.hash;\n                        }\n                    }\n                    log.blockHash = blocks[log.blockNumber];\n                }\n\n                return logs;\n            }\n\n            case \"getEtherPrice\":\n                if (this.network.name !== \"homestead\") { return 0.0; }\n                return parseFloat((await this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n\n            default:\n                break;\n         }\n\n        return super.perform(method, params);\n    }\n\n    // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window available without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n    async getHistory(addressOrName: string | Promise<string>, startBlock?: BlockTag, endBlock?: BlockTag): Promise<Array<TransactionResponse>> {\n        const params = {\n            action: \"txlist\",\n            address: (await this.resolveName(addressOrName)),\n            startblock: ((startBlock == null) ? 0: startBlock),\n            endblock: ((endBlock == null) ? 99999999: endBlock),\n            sort: \"asc\"\n        };\n\n        const result = await this.fetch(\"account\", params);\n\n        return result.map((tx: any) => {\n            [\"contractAddress\", \"to\"].forEach(function(key) {\n                if (tx[key] == \"\") { delete tx[key]; }\n            });\n            if (tx.creates == null && tx.contractAddress != null) {\n                tx.creates = tx.contractAddress;\n            }\n            const item = this.formatter.transactionResponse(tx);\n            if (tx.timeStamp) { item.timestamp = parseInt(tx.timeStamp); }\n            return item;\n        });\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey == null);\n    }\n}\n","\"use strict\";\n\nexport function shuffled(array: Array<any>): Array<any> {\n    array = array.slice();\n\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n\n    return array;\n}\n","\"use strict\";\n\nimport { Block, BlockWithTransactions, Provider } from \"@ethersproject/abstract-provider\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { shuffled } from \"@ethersproject/random\";\nimport { poll } from \"@ethersproject/web\";\n\nimport { BaseProvider } from \"./base-provider\";\nimport { isCommunityResource } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction now() { return (new Date()).getTime(); }\n\n// Returns to network as long as all agree, or null if any is null.\n// Throws an error if any two networks do not match.\nfunction checkNetworks(networks: Array<Network>): Network {\n    let result = null;\n\n    for (let i = 0; i < networks.length; i++) {\n        const network = networks[i];\n\n        // Null! We do not know our network; bail.\n        if (network == null) { return null; }\n\n        if (result) {\n            // Make sure the network matches the previous networks\n            if (!(result.name === network.name && result.chainId === network.chainId &&\n                ((result.ensAddress === network.ensAddress) || (result.ensAddress == null && network.ensAddress == null)))) {\n\n                logger.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n           }\n        } else {\n            result = network;\n        }\n    }\n\n    return result;\n}\n\nfunction median(values: Array<number>, maxDelta?: number): number {\n    values = values.slice().sort();\n    const middle = Math.floor(values.length / 2);\n\n    // Odd length; take the middle\n    if (values.length % 2) {\n        return values[middle];\n    }\n\n    // Even length; take the average of the two middle\n    const a = values[middle - 1], b = values[middle];\n\n    if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n        return null;\n    }\n\n    return (a + b) / 2;\n}\n\nfunction serialize(value: any): string {\n    if (value === null) {\n        return \"null\";\n    } else if (typeof(value) === \"number\" || typeof(value) === \"boolean\") {\n        return JSON.stringify(value);\n    } else if (typeof(value) === \"string\") {\n        return value;\n    } else if (BigNumber.isBigNumber(value)) {\n        return value.toString();\n    } else if (Array.isArray(value)) {\n        return JSON.stringify(value.map((i) => serialize(i)));\n    } else if (typeof(value) === \"object\") {\n        const keys = Object.keys(value);\n        keys.sort();\n        return \"{\" + keys.map((key) => {\n            let v = value[key];\n            if (typeof(v) === \"function\") {\n                v = \"[function]\";\n            } else {\n                v = serialize(v);\n            }\n            return JSON.stringify(key) + \":\" + v;\n        }).join(\",\") + \"}\";\n    }\n\n    throw new Error(\"unknown value type: \" + typeof(value));\n}\n\n// Next request ID to use for emitting debug info\nlet nextRid = 1;\n\n\nexport interface FallbackProviderConfig {\n    // The Provider\n    provider: Provider;\n\n    // The priority to favour this Provider; lower values are used first (higher priority)\n    priority?: number;\n\n    // Timeout before also triggering the next provider; this does not stop\n    // this provider and if its result comes back before a quorum is reached\n    // it will be incorporated into the vote\n    // - lower values will cause more network traffic but may result in a\n    //   faster result.\n    stallTimeout?: number;\n\n    // How much this provider contributes to the quorum; sometimes a specific\n    // provider may be more reliable or trustworthy than others, but usually\n    // this should be left as the default\n    weight?: number;\n};\n\n// A Staller is used to provide a delay to give a Provider a chance to response\n// before asking the next Provider to try.\ntype Staller = {\n    wait: (func: () => void) => Promise<void>\n    getPromise: () => Promise<void>,\n    cancel: () => void\n};\n\nfunction stall(duration: number): Staller {\n    let cancel: () => void = null;\n\n    let timer: NodeJS.Timer = null;\n    let promise = <Promise<void>>(new Promise((resolve) => {\n        cancel = function() {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve();\n        }\n        timer = setTimeout(cancel, duration);\n    }));\n\n    const wait = (func: () => void) => {\n        promise = promise.then(func);\n        return promise;\n    }\n\n    function getPromise(): Promise<void> {\n        return promise;\n    }\n\n    return { cancel, getPromise, wait };\n}\n\nconst ForwardErrors = [\n    Logger.errors.CALL_EXCEPTION,\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n    Logger.errors.UNPREDICTABLE_GAS_LIMIT\n];\n\nconst ForwardProperties = [\n    \"address\",\n    \"args\",\n    \"errorArgs\",\n    \"errorSignature\",\n    \"method\",\n    \"transaction\",\n];\n\n\n// @TODO: Make this an object with staller and cancel built-in\ninterface RunningConfig extends FallbackProviderConfig {\n    start?: number;\n    done?: boolean;\n    cancelled?: boolean;\n    runner?: Promise<any>;\n    staller?: Staller;\n    result?: any;\n    error?: Error;\n};\n\nfunction exposeDebugConfig(config: RunningConfig, now?: number): any {\n    const result: any = {\n        weight: config.weight\n    };\n    Object.defineProperty(result, \"provider\", { get: () => config.provider });\n    if (config.start) { result.start = config.start; }\n    if (now) { result.duration = (now - config.start); }\n    if (config.done) {\n        if (config.error) {\n            result.error = config.error;\n        } else {\n            result.result = config.result || null;\n        }\n    }\n    return result;\n}\n\nfunction normalizedTally(normalize: (value: any) => string, quorum: number): (configs: Array<RunningConfig>) => any {\n    return function(configs: Array<RunningConfig>): any {\n\n        // Count the votes for each result\n        const tally: { [ key: string]: { count: number, result: any } } = { };\n        configs.forEach((c) => {\n            const value = normalize(c.result);\n            if (!tally[value]) { tally[value] = { count: 0, result: c.result }; }\n            tally[value].count++;\n        });\n\n        // Check for a quorum on any given result\n        const keys = Object.keys(tally);\n        for (let i = 0; i < keys.length; i++) {\n            const check = tally[keys[i]];\n            if (check.count >= quorum) {\n                return check.result;\n            }\n        }\n\n        // No quroum\n        return undefined;\n    }\n}\nfunction getProcessFunc(provider: FallbackProvider, method: string, params: { [ key: string ]: any }): (configs: Array<RunningConfig>) => any {\n\n    let normalize = serialize;\n\n    switch (method) {\n        case \"getBlockNumber\":\n            // Return the median value, unless there is (median + 1) is also\n            // present, in which case that is probably true and the median\n            // is going to be stale soon. In the event of a malicious node,\n            // the lie will be true soon enough.\n            return function(configs: Array<RunningConfig>): number {\n                const values = configs.map((c) => c.result);\n\n                // Get the median block number\n                let blockNumber = median(configs.map((c) => c.result), 2);\n                if (blockNumber == null) { return undefined; }\n\n                blockNumber = Math.ceil(blockNumber);\n\n                // If the next block height is present, its prolly safe to use\n                if (values.indexOf(blockNumber + 1) >= 0) { blockNumber++; }\n\n                // Don't ever roll back the blockNumber\n                if (blockNumber >= provider._highestBlockNumber) {\n                    provider._highestBlockNumber = blockNumber;\n                }\n\n                return provider._highestBlockNumber;\n            };\n\n        case \"getGasPrice\":\n            // Return the middle (round index up) value, similar to median\n            // but do not average even entries and choose the higher.\n            // Malicious actors must compromise 50% of the nodes to lie.\n            return function(configs: Array<RunningConfig>): BigNumber {\n                const values = configs.map((c) => c.result);\n                values.sort();\n                return values[Math.floor(values.length / 2)];\n            }\n\n        case \"getEtherPrice\":\n            // Returns the median price. Malicious actors must compromise at\n            // least 50% of the nodes to lie (in a meaningful way).\n            return function(configs: Array<RunningConfig>): number {\n                return median(configs.map((c) => c.result));\n            }\n\n        // No additional normalizing required; serialize is enough\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n        case \"getStorageAt\":\n        case \"call\":\n        case \"estimateGas\":\n        case \"getLogs\":\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            normalize = function(tx: any): string {\n                if (tx == null) { return null; }\n\n                tx = shallowCopy(tx);\n                tx.confirmations = -1;\n                return serialize(tx);\n            }\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getBlock\":\n            // We drop the confirmations from transactions as it is approximate\n            if (params.includeTransactions) {\n                normalize = function(block: BlockWithTransactions): string {\n                    if (block == null) { return null; }\n\n                    block = shallowCopy(block);\n                    block.transactions = block.transactions.map((tx) => {\n                        tx = shallowCopy(tx);\n                        tx.confirmations = -1;\n                        return tx;\n                    });\n                    return serialize(block);\n                };\n            } else {\n                normalize = function(block: Block): string {\n                    if (block == null) { return null; }\n                    return serialize(block);\n                }\n            }\n            break;\n\n        default:\n            throw new Error(\"unknown method: \" + method);\n    }\n\n    // Return the result if and only if the expected quorum is\n    // satisfied and agreed upon for the final result.\n    return normalizedTally(normalize, provider.quorum);\n\n}\n\n// If we are doing a blockTag query, we need to make sure the backend is\n// caught up to the FallbackProvider, before sending a request to it.\nasync function waitForSync(config: RunningConfig, blockNumber: number): Promise<BaseProvider> {\n    const provider = <BaseProvider>(config.provider);\n\n    if ((provider.blockNumber != null && provider.blockNumber >= blockNumber) || blockNumber === -1) {\n        return provider;\n    }\n\n    return poll(() => {\n        return new Promise((resolve, reject) => {\n            setTimeout(function() {\n\n                // We are synced\n                if (provider.blockNumber >= blockNumber) { return resolve(provider); }\n\n                // We're done; just quit\n                if (config.cancelled) { return resolve(null); }\n\n                // Try again, next block\n                return resolve(undefined);\n            }, 0);\n        });\n    }, { oncePoll: provider });\n}\n\nasync function getRunner(config: RunningConfig, currentBlockNumber: number, method: string, params: { [ key: string]: any }): Promise<any> {\n    let provider = config.provider;\n\n    switch (method) {\n        case \"getBlockNumber\":\n        case \"getGasPrice\":\n            return provider[method]();\n        case \"getEtherPrice\":\n            if ((<any>provider).getEtherPrice) {\n                return (<any>provider).getEtherPrice();\n            }\n            break;\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[method](params.address, params.blockTag || \"latest\");\n        case \"getStorageAt\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\");\n        case \"getBlock\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[(params.includeTransactions ? \"getBlockWithTransactions\": \"getBlock\")](params.blockTag || params.blockHash);\n        case \"call\":\n        case \"estimateGas\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            if (method === \"call\" && params.blockTag) {\n                return provider[method](params.transaction, params.blockTag);\n            }\n            return provider[method](params.transaction);\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            return provider[method](params.transactionHash);\n        case \"getLogs\": {\n            let filter = params.filter;\n            if ((filter.fromBlock && isHexString(filter.fromBlock)) || (filter.toBlock && isHexString(filter.toBlock))) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getLogs(filter);\n        }\n    }\n\n    return logger.throwError(\"unknown method error\", Logger.errors.UNKNOWN_ERROR, {\n        method: method,\n        params: params\n    });\n}\n\nexport class FallbackProvider extends BaseProvider {\n    readonly providerConfigs: ReadonlyArray<FallbackProviderConfig>;\n    readonly quorum: number;\n\n    // Due to the highly asyncronous nature of the blockchain, we need\n    // to make sure we never unroll the blockNumber due to our random\n    // sample of backends\n    _highestBlockNumber: number;\n\n    constructor(providers: Array<Provider | FallbackProviderConfig>, quorum?: number) {\n        if (providers.length === 0) {\n            logger.throwArgumentError(\"missing providers\", \"providers\", providers);\n        }\n\n        const providerConfigs: Array<FallbackProviderConfig> = providers.map((configOrProvider, index) => {\n            if (Provider.isProvider(configOrProvider)) {\n                const stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n                const priority = 1;\n                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });\n            }\n\n            const config: FallbackProviderConfig = shallowCopy(configOrProvider);\n\n            if (config.priority == null) { config.priority = 1; }\n            if (config.stallTimeout == null) {\n                config.stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n            }\n            if (config.weight == null) { config.weight = 1; }\n\n            const weight = config.weight;\n            if (weight % 1 || weight > 512 || weight < 1) {\n                logger.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", `providers[${ index }].weight`, weight);\n            }\n\n            return Object.freeze(config);\n        });\n\n        const total = providerConfigs.reduce((accum, c) => (accum + c.weight), 0);\n\n        if (quorum == null) {\n            quorum = total / 2;\n        } else if (quorum > total) {\n            logger.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n        }\n\n        // Are all providers' networks are known\n        let networkOrReady: Network | Promise<Network> = checkNetworks(providerConfigs.map((c) => (<any>(c.provider)).network));\n\n        // Not all networks are known; we must stall\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then(resolve, reject);\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Preserve a copy, so we do not get mutated\n        defineReadOnly(this, \"providerConfigs\", Object.freeze(providerConfigs));\n        defineReadOnly(this, \"quorum\", quorum);\n\n        this._highestBlockNumber = -1;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        const networks = await Promise.all(this.providerConfigs.map((c) => c.provider.getNetwork()));\n        return checkNetworks(networks);\n    }\n\n    async perform(method: string, params: { [name: string]: any }): Promise<any> {\n        // Sending transactions is special; always broadcast it to all backends\n        if (method === \"sendTransaction\") {\n            const results: Array<string | Error> = await Promise.all(this.providerConfigs.map((c) => {\n                return c.provider.sendTransaction(params.signedTransaction).then((result) => {\n                    return result.hash;\n                }, (error) => {\n                    return error;\n                });\n            }));\n\n            // Any success is good enough (other errors are likely \"already seen\" errors\n            for (let i = 0; i < results.length; i++) {\n                const result = results[i];\n                if (typeof(result) === \"string\") { return result; }\n            }\n\n            // They were all an error; pick the first error\n            throw results[0];\n        }\n\n        // We need to make sure we are in sync with our backends, so we need\n        // to know this before we can make a lot of calls\n        if (this._highestBlockNumber === -1 && method !== \"getBlockNumber\") {\n            await this.getBlockNumber();\n        }\n\n        const processFunc = getProcessFunc(this, method, params);\n\n        // Shuffle the providers and then sort them by their priority; we\n        // shallowCopy them since we will store the result in them too\n        const configs: Array<RunningConfig> = shuffled(this.providerConfigs.map(shallowCopy));\n        configs.sort((a, b) => (a.priority - b.priority));\n\n        const currentBlockNumber = this._highestBlockNumber;\n\n        let i = 0;\n        let first = true;\n        while (true) {\n            const t0 = now();\n\n            // Compute the inflight weight (exclude anything past)\n            let inflightWeight = configs.filter((c) => (c.runner && ((t0 - c.start) < c.stallTimeout)))\n                                        .reduce((accum, c) => (accum + c.weight), 0);\n\n            // Start running enough to meet quorum\n            while (inflightWeight < this.quorum && i < configs.length) {\n                const config = configs[i++];\n\n                const rid = nextRid++;\n\n                config.start = now();\n                config.staller = stall(config.stallTimeout);\n                config.staller.wait(() => { config.staller = null; });\n\n                config.runner = getRunner(config, currentBlockNumber, method, params).then((result) => {\n                    config.done = true;\n                    config.result = result;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                     }\n\n                }, (error) => {\n                    config.done = true;\n                    config.error = error;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                    }\n                });\n\n                if (this.listenerCount(\"debug\")) {\n                    this.emit(\"debug\", {\n                        action: \"request\",\n                        rid: rid,\n                        backend: exposeDebugConfig(config, null),\n                        request: { method: method, params: deepCopy(params) },\n                        provider: this\n                    });\n                }\n\n                inflightWeight += config.weight;\n            }\n\n            // Wait for anything meaningful to finish or stall out\n            const waiting: Array<Promise<any>> = [ ];\n            configs.forEach((c) => {\n                if (c.done || !c.runner) { return; }\n                waiting.push(c.runner);\n                if (c.staller) { waiting.push(c.staller.getPromise()); }\n            });\n\n            if (waiting.length) { await Promise.race(waiting); }\n\n            // Check the quorum and process the results; the process function\n            // may additionally decide the quorum is not met\n            const results = configs.filter((c) => (c.done && c.error == null));\n            if (results.length >= this.quorum) {\n                const result = processFunc(results);\n                if (result !== undefined) {\n                    // Shut down any stallers\n                    configs.forEach(c => {\n                        if (c.staller) { c.staller.cancel(); }\n                        c.cancelled = true;\n                    });\n                    return result;\n                }\n                if (!first) { await stall(100).getPromise(); }\n                first = false;\n            }\n\n            // No result, check for errors that should be forwarded\n            const errors = configs.reduce((accum, c) => {\n                if (!c.done || c.error == null) { return accum; }\n\n                const code = (<any>(c.error)).code;\n                if (ForwardErrors.indexOf(code) >= 0) {\n                    if (!accum[code]) { accum[code] = { error: c.error, weight: 0 }; }\n                    accum[code].weight += c.weight;\n                }\n\n                return accum;\n            }, <{ [ code: string ]: { error: Error, weight: number } }>({ }));\n\n            Object.keys(errors).forEach((errorCode: string) => {\n                const tally = errors[errorCode];\n                if (tally.weight < this.quorum) { return; }\n\n                // Shut down any stallers\n                configs.forEach(c => {\n                    if (c.staller) { c.staller.cancel(); }\n                    c.cancelled = true;\n                });\n\n                const e = <any>(tally.error);\n\n                const props: { [ name: string ]: any } = { };\n                ForwardProperties.forEach((name) => {\n                    if (e[name] == null) { return; }\n                    props[name] = e[name];\n                });\n\n                logger.throwError(e.reason || e.message, <any>errorCode, props);\n            });\n\n            // All configs have run to completion; we will never get more data\n            if (configs.filter((c) => !c.done).length === 0) { break; }\n        }\n\n        // Shut down any stallers; shouldn't be any\n        configs.forEach(c => {\n            if (c.staller) { c.staller.cancel(); }\n            c.cancelled = true;\n        });\n\n        return logger.throwError(\"failed to meet quorum\", Logger.errors.SERVER_ERROR, {\n            method: method,\n            params: params,\n            //results: configs.map((c) => c.result),\n            //errors: configs.map((c) => c.error),\n            results: configs.map((c) => exposeDebugConfig(c)),\n            provider: this\n        });\n    }\n}\n","\"use strict\";\n\nconst IpcProvider: any = null;\n\nexport {\n    IpcProvider\n};\n","\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n\nconst defaultProjectId = \"84842078b09946638c03157f83405213\"\n\nexport class InfuraWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new InfuraProvider(network, apiKey);\n        const connection = provider.connection;\n        if (connection.password) {\n            logger.throwError(\"INFURA WebSocket project secrets unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n            });\n        }\n\n        const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, network);\n\n        defineReadOnly(this, \"apiKey\", provider.projectId);\n        defineReadOnly(this, \"projectId\", provider.projectId);\n        defineReadOnly(this, \"projectSecret\", provider.projectSecret);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n\nexport class InfuraProvider extends UrlJsonRpcProvider {\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): InfuraWebSocketProvider {\n        return new InfuraWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        const apiKeyObj: { apiKey: string, projectId: string, projectSecret: string } = {\n            apiKey: defaultProjectId,\n            projectId: defaultProjectId,\n            projectSecret: null\n        };\n\n        if (apiKey == null) { return apiKeyObj; }\n\n        if (typeof(apiKey) === \"string\") {\n            apiKeyObj.projectId = apiKey;\n\n        } else if (apiKey.projectSecret != null) {\n            logger.assertArgument((typeof(apiKey.projectId) === \"string\"),\n                \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n            logger.assertArgument((typeof(apiKey.projectSecret) === \"string\"),\n                \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n\n            apiKeyObj.projectId = apiKey.projectId;\n            apiKeyObj.projectSecret = apiKey.projectSecret;\n\n        } else if (apiKey.projectId) {\n            apiKeyObj.projectId = apiKey.projectId;\n        }\n\n        apiKeyObj.apiKey = apiKeyObj.projectId;\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch(network ? network.name: \"unknown\") {\n            case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n            case \"ropsten\":\n                host = \"ropsten.infura.io\";\n                break;\n            case \"rinkeby\":\n                host = \"rinkeby.infura.io\";\n                break;\n            case \"kovan\":\n                host = \"kovan.infura.io\";\n                break;\n            case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.infura.io\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.infura.io\";\n                break;\n            case \"optimism\":\n                host = \"optimism-mainnet.infura.io\";\n                break;\n            case \"optimism-kovan\":\n                host = \"optimism-kovan.infura.io\";\n                break;\n            case \"arbitrum\":\n                host = \"arbitrum-mainnet.infura.io\";\n                break;\n            case \"arbitrum-rinkeby\":\n                host = \"arbitrum-rinkeby.infura.io\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.projectId === defaultProjectId) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n","\nimport { deepCopy } from \"@ethersproject/properties\";\nimport { fetchJson } from \"@ethersproject/web\";\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Experimental\n\nexport class JsonRpcBatchProvider extends JsonRpcProvider {\n    _pendingBatchAggregator: NodeJS.Timer;\n    _pendingBatch: Array<{\n        request: { method: string, params: Array<any>, id: number, jsonrpc: \"2.0\" },\n        resolve: (result: any) => void,\n        reject: (error: Error) => void\n    }>;\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        if (this._pendingBatch == null) {\n            this._pendingBatch = [ ];\n        }\n\n        const inflightRequest: any = { request, resolve: null, reject: null };\n\n        const promise = new Promise((resolve, reject) => {\n            inflightRequest.resolve = resolve;\n            inflightRequest.reject = reject;\n        });\n\n        this._pendingBatch.push(inflightRequest);\n\n        if (!this._pendingBatchAggregator) {\n            // Schedule batch for next event loop + short duration\n            this._pendingBatchAggregator = setTimeout(() => {\n\n                // Get teh current batch and clear it, so new requests\n                // go into the next batch\n                const batch = this._pendingBatch;\n                this._pendingBatch = null;\n                this._pendingBatchAggregator = null;\n\n                // Get the request as an array of requests\n                const request = batch.map((inflight) => inflight.request);\n\n                this.emit(\"debug\", {\n                    action: \"requestBatch\",\n                    request: deepCopy(request),\n                    provider: this\n                });\n\n                return fetchJson(this.connection, JSON.stringify(request)).then((result) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: request,\n                        response: result,\n                        provider: this\n                    });\n\n                    // For each result, feed it to the correct Promise, depending\n                    // on whether it was a success or error\n                    batch.forEach((inflightRequest, index) => {\n                        const payload = result[index];\n                        if (payload.error) {\n                            const error = new Error(payload.error.message);\n                            (<any>error).code = payload.error.code;\n                            (<any>error).data = payload.error.data;\n                            inflightRequest.reject(error);\n                        } else {\n                            inflightRequest.resolve(payload.result);\n                        }\n                    });\n\n                }, (error) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: request,\n                        provider: this\n                    });\n\n                    batch.forEach((inflightRequest) => {\n                        inflightRequest.reject(error);\n                    });\n                });\n\n            }, 10);\n        }\n\n        return promise;\n    }\n}\n","/* istanbul ignore file */\n\n\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Special API key provided by Nodesmith for ethers.js\nconst defaultApiKey = \"ETHERS_JS_SHARED\";\n\nexport class NodesmithProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey || defaultApiKey;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        logger.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n                break;\n            case \"ropsten\":\n                host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n                break;\n            case \"rinkeby\":\n                host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n                break;\n            case \"goerli\":\n                host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n                break;\n            case \"kovan\":\n                host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return (host + \"?apiKey=\" + apiKey);\n    }\n}\n","\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nconst defaultApplicationId = \"62e1ad51b37b8e00394bda3b\";\n\n\nexport class PocketProvider extends UrlJsonRpcProvider {\n    readonly applicationId: string;\n    readonly applicationSecretKey: string;\n    readonly loadBalancer: boolean;\n\n    static getApiKey(apiKey: any): any {\n        const apiKeyObj: { applicationId: string, applicationSecretKey: string, loadBalancer: boolean } = {\n            applicationId: null,\n            loadBalancer: true,\n            applicationSecretKey: null\n        };\n\n        // Parse applicationId and applicationSecretKey\n        if (apiKey == null) {\n            apiKeyObj.applicationId = defaultApplicationId;\n\n        } else if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n\n        } else if (apiKey.applicationSecretKey != null) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n\n        } else if (apiKey.applicationId) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n\n        } else {\n            logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"kovan\":\n                host = \"poa-kovan.gateway.pokt.network\";\n                break;\n            case \"matic\":\n                host = \"poly-mainnet.gateway.pokt.network\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai-rpc.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        const url = `https:/\\/${ host }/v1/lb/${ apiKey.applicationId }`\n\n        const connection: ConnectionInfo = { headers: { }, url };\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.applicationId === defaultApplicationId);\n    }\n}\n","\"use strict\";\n\nimport { Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Exported Types\nexport type ExternalProvider = {\n    isMetaMask?: boolean;\n    isStatus?: boolean;\n    host?: string;\n    path?: string;\n    sendAsync?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    send?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    request?: (request: { method: string, params?: Array<any> }) => Promise<any>\n}\n\nlet _nextId = 1;\n\nexport type JsonRpcFetchFunc = (method: string, params?: Array<any>) => Promise<any>;\n\ntype Web3LegacySend = (request: any, callback: (error: Error, response: any) => void) => void;\n\nfunction buildWeb3LegacyFetcher(provider: ExternalProvider, sendFunc: Web3LegacySend) : JsonRpcFetchFunc {\n    const fetcher = \"Web3LegacyFetcher\";\n\n    return function(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        return new Promise((resolve, reject) => {\n            this.emit(\"debug\", {\n                action: \"request\",\n                fetcher,\n                request: deepCopy(request),\n                provider: this\n            });\n\n            sendFunc(request, (error, response) => {\n\n                if (error) {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher,\n                        error,\n                        request,\n                        provider: this\n                    });\n\n                    return reject(error);\n                }\n\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher,\n                    request,\n                    response,\n                    provider: this\n                });\n\n                if (response.error) {\n                    const error = new Error(response.error.message);\n                    (<any>error).code = response.error.code;\n                    (<any>error).data = response.error.data;\n                    return reject(error);\n                }\n\n                resolve(response.result);\n            });\n        });\n    }\n}\n\nfunction buildEip1193Fetcher(provider: ExternalProvider): JsonRpcFetchFunc {\n    return function(method: string, params: Array<any>): Promise<any> {\n        if (params == null) { params = [ ]; }\n\n        const request = { method, params };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        return provider.request(request).then((response) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                response,\n                provider: this\n            });\n\n            return response;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                error,\n                provider: this\n            });\n\n            throw error;\n        });\n    }\n}\n\nexport class Web3Provider extends JsonRpcProvider {\n    readonly provider: ExternalProvider;\n    readonly jsonRpcFetchFunc: JsonRpcFetchFunc;\n\n    constructor(provider: ExternalProvider | JsonRpcFetchFunc, network?: Networkish) {\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n\n        let path: string = null;\n        let jsonRpcFetchFunc: JsonRpcFetchFunc = null;\n        let subprovider: ExternalProvider = null;\n\n        if (typeof(provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n\n        } else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n\n            subprovider = provider;\n\n            if (provider.request) {\n                if (path === \"\") { path = \"eip-1193:\"; }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            } else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            } else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            } else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n\n            if (!path) { path = \"unknown:\"; }\n        }\n\n        super(path, network);\n\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n","\"use strict\";\n\nimport {\n    Block,\n    BlockTag,\n    EventType,\n    FeeData,\n    Filter,\n    Log,\n    Listener,\n    Provider,\n    TransactionReceipt,\n    TransactionRequest,\n    TransactionResponse\n} from \"@ethersproject/abstract-provider\";\n\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\n\nimport { BaseProvider, EnsProvider, EnsResolver, Resolver } from \"./base-provider\";\n\nimport { AlchemyProvider, AlchemyWebSocketProvider } from \"./alchemy-provider\";\nimport { AnkrProvider } from \"./ankr-provider\";\nimport { CloudflareProvider } from \"./cloudflare-provider\";\nimport { EtherscanProvider } from \"./etherscan-provider\";\nimport { FallbackProvider, FallbackProviderConfig } from \"./fallback-provider\";\nimport { IpcProvider } from \"./ipc-provider\";\nimport { InfuraProvider, InfuraWebSocketProvider } from \"./infura-provider\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\nimport { JsonRpcBatchProvider } from \"./json-rpc-batch-provider\";\nimport { NodesmithProvider } from \"./nodesmith-provider\";\nimport { PocketProvider } from \"./pocket-provider\";\nimport { StaticJsonRpcProvider, UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Web3Provider } from \"./web3-provider\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { ExternalProvider, JsonRpcFetchFunc } from \"./web3-provider\";\n\nimport { CommunityResourcable, Formatter, isCommunityResourcable, isCommunityResource, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n////////////////////////\n// Helper Functions\n\nfunction getDefaultProvider(network?: Networkish, options?: any): BaseProvider {\n    if (network == null) { network = \"homestead\"; }\n\n    // If passed a URL, figure out the right type of provider based on the scheme\n    if (typeof(network) === \"string\") {\n        // @TODO: Add support for IpcProvider; maybe if it ends in \".ipc\"?\n\n        // Handle http and ws (and their secure variants)\n        const match = network.match(/^(ws|http)s?:/i);\n        if (match) {\n            switch (match[1].toLowerCase()) {\n                case \"http\": case \"https\":\n                    return new JsonRpcProvider(network);\n                case \"ws\": case \"wss\":\n                    return new WebSocketProvider(network);\n                default:\n                    logger.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n            }\n        }\n    }\n\n    const n = getNetwork(network);\n    if (!n || !n._defaultProvider) {\n        logger.throwError(\"unsupported getDefaultProvider network\", Logger.errors.NETWORK_ERROR, {\n            operation: \"getDefaultProvider\",\n            network: network\n        });\n    }\n\n    return n._defaultProvider({\n        FallbackProvider,\n\n        AlchemyProvider,\n        AnkrProvider,\n        CloudflareProvider,\n        EtherscanProvider,\n        InfuraProvider,\n        JsonRpcProvider,\n        NodesmithProvider,\n        PocketProvider,\n        Web3Provider,\n\n        IpcProvider,\n    }, options);\n}\n\n////////////////////////\n// Exports\n\nexport {\n\n    // Abstract Providers (or Abstract-ish)\n    Provider,\n    BaseProvider,\n\n    Resolver,\n\n    UrlJsonRpcProvider,\n\n    ///////////////////////\n    // Concrete Providers\n\n    FallbackProvider,\n\n    AlchemyProvider,\n    AlchemyWebSocketProvider,\n    AnkrProvider,\n    CloudflareProvider,\n    EtherscanProvider,\n    InfuraProvider,\n    InfuraWebSocketProvider,\n    JsonRpcProvider,\n    JsonRpcBatchProvider,\n    NodesmithProvider,\n    PocketProvider,\n    StaticJsonRpcProvider,\n    Web3Provider,\n    WebSocketProvider,\n\n    IpcProvider,\n\n\n    ///////////////////////\n    // Signer\n\n    JsonRpcSigner,\n\n\n    ///////////////////////\n    // Functions\n\n    getDefaultProvider,\n    getNetwork,\n    isCommunityResource,\n    isCommunityResourcable,\n    showThrottleMessage,\n\n\n    ///////////////////////\n    // Objects\n\n    Formatter,\n\n\n    ///////////////////////\n    // Types\n\n    Block,\n    BlockTag,\n    EventType,\n    FeeData,\n    Filter,\n    Log,\n    Listener,\n    TransactionReceipt,\n    TransactionRequest,\n    TransactionResponse,\n\n    ExternalProvider,\n    JsonRpcFetchFunc,\n\n    FallbackProviderConfig,\n\n    Network,\n    Networkish,\n\n    EnsProvider,\n    EnsResolver,\n\n    CommunityResourcable\n};\n\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"names":["_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","error","off","_logLevel","_globalLogger","LogLevel","ErrorCode","_normalizeError","missing","forEach","form","normalize","Error","push","length","join","String","fromCharCode","message","_checkNormalize","HEX","Logger","version","Object","defineProperty","this","enumerable","value","writable","logLevel","args","level","toLowerCase","throwArgumentError","console","log","apply","_log","levels","DEBUG","INFO","WARNING","code","params","makeError","errors","UNKNOWN_ERROR","messageDetails","keys","key","Uint8Array","hex","i","JSON","stringify","toString","reason","url","NUMERIC_FAULT","fault","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","name","throwError","INVALID_ARGUMENT","argument","condition","UNSUPPORTED_OPERATION","operation","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","target","kind","censorship","permanent","globalLogger","warn","logger","isHexable","toHexString","addSlice","array","slice","Array","prototype","call","arguments","isBytesLike","isHexString","isBytes","isInteger","constructor","v","arrayify","options","checkSafeUint53","result","unshift","parseInt","allowMissingPrefix","substring","hexPad","concat","items","objects","map","item","reduce","accum","offset","object","set","stripZeros","start","match","HexCharacters","hexlify","Math","floor","hexDataLength","data","hexDataSlice","endOffset","hexConcat","hexValue","trimmed","hexStripZeros","hexZeroPad","splitSignature","signature","r","s","_vs","recoveryParam","yParityAndS","compact","bytes","vs","zeroPad","recId","BN","_BN","_constructorGuard","MAX_SAFE","_warnedToStringRadix","BigNumber","constructorGuard","_hex","_isBigNumber","freeze","toBigNumber","toBN","fromTwos","toTwos","from","other","add","sub","isZero","throwFault","div","mul","isNeg","umod","pow","isNegative","and","or","xor","maskn","shln","shrn","eq","lt","lte","gt","gte","toNumber","BigInt","e","type","toHex","anyValue","defineReadOnly","getStatic","ctor","getPrototypeOf","resolveProperties","promises","Promise","resolve","then","all","results","shallowCopy","opaque","bigint","boolean","number","string","_isFrozen","undefined","isArray","isFrozen","_deepCopy","deepCopy","Description","ForkEvent","_isForkEvent","Provider","checkAbstract","block","getBlock","gasPrice","getGasPrice","catch","lastBaseFeePerGas","maxFeePerGas","maxPriorityFeePerGas","baseFeePerGas","eventName","listener","on","_isProvider","ethDefaultProvider","network","func","providers","providerList","InfuraProvider","infura","EtherscanProvider","etherscan","AlchemyProvider","alchemy","PocketProvider","pocket","provider","indexOf","CloudflareProvider","cloudflare","AnkrProvider","ankr","FallbackProvider","quorum","renetwork","etcDefaultProvider","JsonRpcProvider","homestead","chainId","ensAddress","_defaultProvider","ropsten","classicMordor","networks","unspecified","mainnet","morden","testnet","rinkeby","kovan","goerli","kintsugi","classic","classicMorden","classicTestnet","classicKotti","xdai","matic","maticmum","optimism","arbitrum","bnb","bnbt","getNetwork","standard","defaultProvider","decode","textData","atob","charCodeAt","encode","btoa","UnicodeNormalizationForm","Utf8ErrorReason","BaseX","alphabet","charAt","_alphabetMap","source","digits","carry","j","base","k","_leader","q","TypeError","byte","reverse","Base58","ignoreFunc","output","badCodepoint","BAD_PREFIX","UNEXPECTED_CONTINUE","o","OVERRUN","Utf8ErrorFuncs","ignore","replace","OVERLONG","getUtf8CodePoints","onError","c","extraLength","overlongMask","res","nextChar","MISSING_CONTINUE","OUT_OF_RANGE","UTF16_SURROGATE","toUtf8Bytes","str","current","checkNormalize","c2","pair","toUtf8String","codePoint","keccak256","sha3","flat","depth","flatDeep","arr","val","read_compressed_payload","pos","read_payload","u16","symbol_count","total","acc","skip","pos_payload","read_width","read_buffer","read_bit","FULL","HALF","QRTR","MASK","register","symbols","low","range","end","mid","a","b","x","decode_arithmetic","signed","read_ascending","n","next","read_deltas","read_member_array","lookup","vX","vN","read_counts","read_transposed","w","m","fill","read_linear_table","dx","dy","read_zero_terminated_array","ys","_","j_dy","y","read_replacement_table","VALID","Set","IGNORED","MAPPED","ret","fromEntries","read_mapped_map","EMOJI_ROOT","sorted","sort","read","branches","node","size","temp","valid","fe0f","save","check","read_emoji_trie","explode_cp","toUtf8CodePoints","filter_fe0f","cps","filter","cp","ens_normalize_post_check","split","label","lastIndexOf","every","err","ens_normalize","emoji_filter","input","emoji","consume_emoji_reversed","pop","has","toUpperCase","fromCodePoint","eaten","saved","stack","find","_a","splice","Zeros","checkComponent","comp","ensNameSplit","comps","last","namehash","sha256","hash","update","digest","getUrl","href","request","method","headers","body","skipFetchSetup","mode","cache","credentials","redirect","referrer","fetchOptions","opts","fetch","response","arrayBuffer","get","statusCode","status","statusMessage","statusText","staller","duration","setTimeout","bodyify","trim","fetchJson","connection","json","processFunc","updated","attemptLimit","throttleLimit","assertArgument","throttleCallback","throttleSlotInterval","errorPassThrough","allow304","timeout","allowGzip","user","password","allowInsecureAuthentication","authorization","base64Encode","reData","RegExp","dataMatch","base64Decode","requestBody","requestMethod","flatHeaders","header","runningTimeout","timer","promise","reject","cancel","clearTimeout","runningFetch","attempt","location","tryAgain","stall","retryAfter","random","serverError","throttleRetry","race","_fetchData","parse","poll","ceiling","interval","done","retryLimit","oncePoll","once","onceBlock","arrayifyInteger","unarrayifyInteger","_encode","payload","child","_decodeChildren","childOffset","decoded","_decode","consumed","lengthLength","getChecksumAddress","address","chars","expanded","hashed","ibanLookup","safeDigits","log10","LN10","ibanChecksum","checksum","getAddress","Zero","assert","msg","equal","l","utils","exports","zero2","word","toArray","enc","hi","lo","minAssert","minUtils","getNAF","num","bits","naf","max","bitLength","ws","clone","z","mod","andln","isOdd","isubn","iushrn","getJSF","k1","k2","jsf","m8","d1","d2","cmpn","u1","u2","m14","m24","cachedProperty","obj","computer","parseBytes","intFromLE","BaseCurve","conf","p","red","prime","zero","toRed","one","two","g","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","adjustCount","redN","_maxwellTrick","BasePoint","curve","precomputed","point","validate","_fixedNafMul","doubles","_getDoubles","I","step","nafW","repr","jpoint","mixedAdd","points","neg","toP","_wnafMul","nafPoints","_getNAFPoints","wnd","dblp","_wnafMulAdd","defW","coeffs","len","jacobianResult","wndWidth","comb","cmp","toJ","redNeg","index","ja","jb","tmp","decodePoint","byteLength","pointFromX","encodeCompressed","getX","getY","isEven","precompute","power","beta","_getBeta","_hasDoubles","ceil","dbl","create","module","superCtor","super_","configurable","TempCtor","ShortCurve","Base","tinv","redInvm","zeroA","fromRed","threeA","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","inherits","Point","isRed","inf","forceRed","JPoint","zOne","modn","lambda","betas","_getEndoRoots","lambdas","redMul","basis","vec","_getEndoBasis","ntinv","redSqrt","redAdd","redSub","a0","b0","a1","b1","a2","b2","prevR","aprxSqrt","ushrn","u","x1","y1","x2","y2","len1","sqr","negative","_endoSplit","v1","v2","c1","divRound","p1","p2","q1","q2","odd","redSqr","redIAdd","ax","rhs","redISub","_endoWnafMulAdd","npoints","ncoeffs","ineg","fromJSON","pre","endoMul","toJSON","obj2point","inspect","isInfinity","nx","ny","ys1","dyinv","mulAdd","jmulAdd","_precompute","negate","zinv","zinv2","ay","pz2","z2","s1","s2","h","h2","h3","nz","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","t","yyyy8","d","f","c8","delta","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","eqXToP","zs","rx","xc","iadd","require$$0","short","require$$1","mont","edwards","curves","PresetCurve","defineCurve","HmacDRBG","predResist","outLen","outSize","minEntropy","hmacStrength","_reseed","reseedInterval","K","V","entropy","entropyEnc","nonce","nonceEnc","pers","persEnc","_init","seed","_update","_hmac","kmac","reseed","addEnc","generate","KeyPair","ec","priv","pub","_importPrivate","privEnc","_importPublic","pubEnc","fromPublic","fromPrivate","getPublic","getPrivate","derive","sign","verify","Signature","_importDER","Position","place","getLength","buf","initial","octetLen","rmPadding","constructLength","octets","LN2","rlen","slen","toDER","backHalf","rand","EC","hasOwnProperty","nh","keyPair","keyFromPrivate","keyFromPublic","genKeyPair","drbg","ns2","iaddn","_truncateToN","truncOnly","bkey","ns1","iter","kp","kpX","invm","canonical","sinv","recoverPubKey","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Q","Qprime","elliptic","require$$2","require$$3","eddsa","_curve","getCurve","SigningKey","privateKey","p0","publicKey","digestBytes","otherKey","otherKeyPair","computePublicKey","_isSigningKey","compressed","signingKey","TransactionTypes","handleAddress","handleNumber","recoverAddress","computeAddress","sig","rs","recoverPublicKey","formatNumber","accessSetify","addr","storageKeys","storageKey","accessListify","localeCompare","formatAccessList","_serializeEip1559","transaction","fields","gasLimit","to","accessList","RLP","_serializeEip2930","_parseEipSignature","tx","serialize","recid","rawTransaction","raw","_parse","_parseEip2930","_parseEip1559","transactionType","Formatter","formats","getDefaultFormats","bind","bigNumber","blockTag","allowNull","blockHash","blockNumber","transactionIndex","confirmations","uint256","creates","transactionRequest","receiptLog","transactionHash","topics","arrayOf","logIndex","receipt","contractAddress","root","gasUsed","logsBloom","logs","cumulativeGasUsed","effectiveGasPrice","parentHash","timestamp","difficulty","miner","extraData","transactions","blockWithTransactions","transactionResponse","fromBlock","toBlock","filterLog","removed","allowFalsish","strict","getContractAddress","format","author","_difficulty","_block","gas","networkId","parseTransaction","byzantium","checkKey","checkValue","nullValue","replaceValue","isCommunityResourcable","isCommunityResource","throttleMessage","showThrottleMessage","checkTopic","topic","serializeTopics","unique","getEventTag","isForkEvent","getTime","Date","PollableEvents","Event","tag","_lastBlockNumber","_inflight","coinInfos","symbol","p2pkh","p2sh","prefix","ilk","bytes32ify","base58Encode","matcherIpfs","matchers","_parseString","_parseBytes","getIpfsLink","link","numPad","padded","bytesPad","encodeBytes","datas","byteCount","Resolver","resolvedAddress","formatter","_supportsEip2544","selector","parameters","ccipReadEnabled","supportsWildcard","_fetch","coinType","hexBytes","coinInfo","words","bech32","HashZero","callAddress","_fetchBytes","_getAddress","linkage","content","getText","avatar","scheme","_resolvedAddress","owner","tokenId","tokenOwner","balance","metadataUrl","metadata","imageUrl","image","ipfs","ipns","swarm","skynet","urlSafe","keyBytes","defaultFormatter","nextPollId","BaseProvider","_events","_emitted","disableCcipRead","getFormatter","anyNetwork","detectNetwork","_networkPromise","_ready","knownNetwork","emit","_maxInternalBlockNumber","_maxFilterBlockRange","_pollingInterval","_fastQueryDate","_network","event","calldata","urls","sender","errorMessages","errorMessage","maxAge","_internalBlockNumber","internalBlockNumber","respTime","reqTime","checkInternalBlockNumber","perform","networkError","_setFastBlockNumber","pollId","runners","_getInternalBlockNumber","pollingInterval","abs","previousBlockNumber","eventBlockNumber","runner","getTransactionReceipt","minFromBlock","getLogs","polling","currentNetwork","_fastBlockNumber","_fastBlockNumberPromise","detectedNetwork","_poller","setInterval","_bootstrapPoll","clearInterval","now","getBlockNumber","_waitForTransaction","replaceable","cancelFuncs","alreadyDone","minedHandler","removeListener","lastBlockNumber","startBlock","scannedBlock","replaceHandler","__awaiter","getTransactionCount","getTransaction","mined","getBlockWithTransactions","ti","waitForTransaction","cancelled","replacement","_wrapTransaction","unref","addressOrName","_getBlockTag","position","expectedHash","returnedHash","wait","confirms","signedTransaction","hexTx","values","redirects","txSender","urlsOffset","urlsLength","urlsData","callbackSelector","ccipReadFetch","ccipResult","_call","SERVER_ERROR","_getTransactionRequest","resolved","resolveName","blockHashOrBlockTag","includeTransactions","blockWithTxs","_getBlock","_getFilter","currentName","_getResolver","resolver","addrData","getResolver","resolverAddr","nameOrAddress","resolverAddress","getAvatar","pollable","_startEvent","_addEventListener","stopped","eventTag","_stopEvent","removeAllListeners","found","allowedTransactionKeys","forwardErrors","Signer","_checkProvider","getBalance","checkTransaction","estimateGas","populateTransaction","signTransaction","signedTx","sendTransaction","getFeeData","hasEip1559","feeData","getChainId","_isSigner","id","text","padding","NegativeOne","One","MaxUint256","hexTrue","hexFalse","domainFieldTypes","verifyingContract","salt","domainFieldNames","checkString","domainChecks","getBaseEncoder","width","boundsUpper","mask","boundsLower","padOffset","hexPadRight","encodeType","TypedDataEncoder","types","links","parents","subtypes","uniqueNames","field","baseType","primaryTypes","checkCircular","subtype","primaryType","st","_types","encoder","_encoderCache","_getEncoder","subEncoder","getEncoder","encodedType","encodeData","hashStruct","callback","_visit","domain","domainFields","EIP712Domain","hashDomain","ensCache","visit","domainValues","domainTypes","typesWithDomain","errorGas","spelunk","requireData","checkError","responseText","getResult","getLowerCase","JsonRpcSigner","addressOrIndex","UncheckedJsonRpcSigner","_address","_index","send","accounts","fromAddress","estimate","hexlifyTransaction","action","sendUncheckedTransaction","_TypedDataEncoder","populated","networkOrReady","_nextId","_eventLoopCache","_cache","_uncachedDetectNetwork","getSigner","connectUnchecked","jsonrpc","prepareRequest","_startPending","_pendingFilter","self","pendingFilter","filterId","hashes","seq","listenerCount","allowExtra","properties","allowed","WS","WebSocket","NextId","WebSocketProvider","_wsReady","websocket","onopen","_requests","onmessage","messageEvent","_subs","subscription","fauxPoll","_websocket","_detectNetwork","rid","param","subIdPromise","_subIds","subId","_subscribe","emitReceipt","readyState","CONNECTING","onerror","close","StaticJsonRpcProvider","_super","UrlJsonRpcProvider","apiKey","defaultApiKey","AlchemyWebSocketProvider","host","getHost","projectSecret","getTransactionPostData","maxFeePerGs","getJsonResult","checkLogTag","getBaseUrl","query","baseUrl","apikey","post","getPostUrl","getPostData","procFunc","payloadStr","txhash","postData","topic0","blocks","parseFloat","ethusd","endBlock","startblock","endblock","timeStamp","shuffled","checkNetworks","median","maxDelta","middle","nextRid","getPromise","ForwardErrors","ForwardProperties","exposeDebugConfig","config","weight","getProcessFunc","configs","_highestBlockNumber","tally","normalizedTally","waitForSync","getRunner","currentBlockNumber","getEtherPrice","getStorageAt","providerConfigs","configOrProvider","isProvider","stallTimeout","priority","first","t0","inflightWeight","backend","waiting","errorCode","props","IpcProvider","defaultProjectId","InfuraWebSocketProvider","projectId","apiKeyObj","JsonRpcBatchProvider","_pendingBatch","inflightRequest","_pendingBatchAggregator","batch","inflight","NodesmithProvider","defaultApplicationId","applicationId","loadBalancer","applicationSecretKey","buildWeb3LegacyFetcher","sendFunc","fetcher","Web3Provider","path","jsonRpcFetchFunc","subprovider","isMetaMask","buildEip1193Fetcher","sendAsync","getDefaultProvider","endian","isBN","Buffer","wordSize","window","require","parseHex4Bits","parseHexByte","lowerBound","parseBase","min","move","dest","src","left","right","_initNumber","_initArray","_parseHex","_parseBase","_strip","limbLen","limbPow","imuln","_iaddn","copy","_move","_expand","_normSign","Symbol","for","zeros","groupSizes","groupBases","out","groupSize","groupBase","modrn","idivn","toBuffer","toArrayLike","smallMulTo","ncarry","rword","maxJ","ArrayType","reqLength","allocUnsafe","allocate","_toArrayLikeLE","shift","_toArrayLikeBE","clz32","_countBits","_zeroBits","zeroBits","inotn","testn","notn","iuor","ior","uor","iuand","iand","uand","iuxor","ixor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","isub","comb10MulTo","al0","ah0","al1","ah1","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","bl0","bh0","bl1","bh1","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","guessLen13b","conjugate","normalize13b","round","convert13b","stub","ph","mulp","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","isqr","toBitArray","iushln","carryMask","newCarry","ishln","hint","extended","maskedWords","ishrn","ushln","imaskn","addn","subn","iabs","_ishlnsubmul","_wordDiv","bhi","diff","qj","divmod","positive","divn","dm","half","r2","egcd","A","B","C","D","yp","xp","im","jm","gcd","_invmp","bincn","ucmp","gtn","gten","ltn","lten","eqn","Red","ctx","convertTo","_forceRed","convertFrom","redShl","shl","_verify2","redIMul","_verify1","redISqr","sqrt","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","_prime","Mont","imod","rinv","minv","ireduce","imulK","strip","prev","mod3","nOne","lpow","inv","currentLen"],"sourceRoot":""}