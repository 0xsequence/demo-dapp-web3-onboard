{"version":3,"file":"static/js/593.dabfcbdd.chunk.js","mappings":"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","sources":["../../../../../../walletconnect/node_modules/@ethersproject/bytes/src.ts/index.ts","../../../../../../walletconnect/node_modules/@ethersproject/bytes/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/bignumber/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts","../../../../../../walletconnect/node_modules/@ethersproject/properties/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/properties/src.ts/index.ts","../../../../../../walletconnect/node_modules/@ethersproject/abstract-provider/src.ts/index.ts","../../../../../../walletconnect/node_modules/@ethersproject/abstract-provider/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/networks/src.ts/index.ts","../../../../../../walletconnect/node_modules/@ethersproject/networks/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/strings/src.ts/utf8.ts","../../../../../../walletconnect/node_modules/@ethersproject/basex/src.ts/index.ts","../../../../../../walletconnect/node_modules/@ethersproject/strings/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/keccak256/src.ts/index.ts","../../../../../../walletconnect/node_modules/@ethersproject/hash/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/hash/src.ts/ens-normalize/decoder.ts","../../../../../../walletconnect/node_modules/@ethersproject/hash/src.ts/ens-normalize/lib.ts","../../../../../../walletconnect/node_modules/@ethersproject/hash/src.ts/ens-normalize/include.ts","../../../../../../walletconnect/node_modules/@ethersproject/hash/src.ts/namehash.ts","../../../../../../walletconnect/node_modules/@ethersproject/sha2/src.ts/browser-sha2.ts","../../../../../../walletconnect/node_modules/@ethersproject/sha2/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/web/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/web/src.ts/browser-geturl.ts","../../../../../../walletconnect/node_modules/@ethersproject/web/src.ts/index.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/rlp/src.ts/index.ts","../../../../../../walletconnect/node_modules/@ethersproject/rlp/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/address/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/address/src.ts/index.ts","../../../../../../walletconnect/node_modules/@ethersproject/constants/src.ts/addresses.ts","../../../../../../walletconnect/node_modules/@ethersproject/constants/src.ts/bignumbers.ts","../../../../../../walletconnect/node_modules/node_modules/minimalistic-assert/index.js","../../../../../../walletconnect/node_modules/node_modules/minimalistic-crypto-utils/lib/utils.js","../../../../../../walletconnect/node_modules/node_modules/elliptic/lib/elliptic/utils.js","../../../../../../walletconnect/node_modules/node_modules/elliptic/lib/elliptic/curve/base.js","../../../../../../walletconnect/node_modules/node_modules/inherits/inherits_browser.js","../../../../../../walletconnect/node_modules/node_modules/elliptic/lib/elliptic/curve/short.js","../../../../../../walletconnect/node_modules/node_modules/elliptic/lib/elliptic/curve/index.js","../../../../../../walletconnect/node_modules/node_modules/elliptic/lib/elliptic/curves.js","../../../../../../walletconnect/node_modules/node_modules/hmac-drbg/lib/hmac-drbg.js","../../../../../../walletconnect/node_modules/node_modules/elliptic/lib/elliptic/ec/key.js","../../../../../../walletconnect/node_modules/node_modules/elliptic/lib/elliptic/ec/signature.js","../../../../../../walletconnect/node_modules/node_modules/elliptic/lib/elliptic/ec/index.js","../../../../../../walletconnect/node_modules/@ethersproject/signing-key/lib.esm/elliptic.js","../../../../../../walletconnect/node_modules/node_modules/elliptic/lib/elliptic.js","../../../../../../walletconnect/node_modules/@ethersproject/signing-key/src.ts/index.ts","../../../../../../walletconnect/node_modules/@ethersproject/signing-key/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/transactions/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/transactions/src.ts/index.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/formatter.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/base-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/constants/src.ts/hashes.ts","../../../../../../walletconnect/node_modules/@ethersproject/abstract-signer/src.ts/index.ts","../../../../../../walletconnect/node_modules/@ethersproject/abstract-signer/src.ts/_version.ts","../../../../../../walletconnect/node_modules/@ethersproject/hash/src.ts/id.ts","../../../../../../walletconnect/node_modules/@ethersproject/hash/src.ts/typed-data.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/json-rpc-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/browser-ws.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/websocket-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/url-json-rpc-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/alchemy-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/ankr-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/cloudflare-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/etherscan-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/random/src.ts/shuffle.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/fallback-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/browser-ipc-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/infura-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/json-rpc-batch-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/nodesmith-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/pocket-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/web3-provider.ts","../../../../../../walletconnect/node_modules/@ethersproject/providers/src.ts/index.ts","../node_modules/@web3-onboard/walletconnect/node_modules/bn.js/lib/bn.js"],"sourcesContent":["\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type Bytes = ArrayLike<number>;\n\nexport type BytesLike = Bytes | string;\n\nexport type DataOptions = {\n    allowMissingPrefix?: boolean;\n    hexPad?: \"left\" | \"right\" | null;\n};\n\nexport interface Hexable {\n    toHexString(): string;\n}\n\n\n/*\nexport interface HexString {\n    length: number;\n    substring: (start: number, end?: number) => string;\n\n    [index: number]: string;\n}\n*/\n\nexport type SignatureLike  = {\n    r: string;\n    s?: string;\n    _vs?: string,\n    recoveryParam?: number;\n    v?: number;\n} | BytesLike;\n\nexport interface Signature {\n    r: string;\n\n    s: string;\n    _vs: string,\n\n    recoveryParam: number;\n    v: number;\n\n    yParityAndS: string\n    compact: string;\n}\n\n///////////////////////////////\n\n\nfunction isHexable(value: any): value is Hexable {\n    return !!(value.toHexString);\n}\n\nfunction addSlice(array: Uint8Array): Uint8Array {\n    if (array.slice) { return array; }\n\n    array.slice = function() {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    }\n\n    return array;\n}\n\nexport function isBytesLike(value: any): value is BytesLike {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\n\nfunction isInteger(value: number) {\n    return (typeof(value) === \"number\" && value == value && (value % 1) === 0);\n}\n\nexport function isBytes(value: any): value is Bytes {\n    if (value == null) { return false; }\n\n    if (value.constructor === Uint8Array) { return true; }\n    if (typeof(value) === \"string\") { return false; }\n    if (!isInteger(value.length) || value.length < 0) { return false; }\n\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) { return false; }\n    }\n    return true;\n}\n\n\nexport function arrayify(value: BytesLike | Hexable | number, options?: DataOptions): Uint8Array {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) { result.push(0); }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { value = value.toHexString(); }\n\n    if (isHexString(value)) {\n        let hex = (<string>value).substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0\" + hex;\n            } else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\n\nexport function concat(items: ReadonlyArray<BytesLike>): Uint8Array {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n\n    const result = new Uint8Array(length);\n\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n\n    return addSlice(result);\n}\n\nexport function stripZeros(value: BytesLike): Uint8Array {\n    let result: Uint8Array = arrayify(value);\n\n    if (result.length === 0) { return result; }\n\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) { start++ }\n\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n\n    return result;\n}\n\nexport function zeroPad(value: BytesLike, length: number): Uint8Array {\n    value = arrayify(value);\n\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\n\n\nexport function isHexString(value: any, length?: number): boolean {\n    if (typeof(value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false\n    }\n    if (length && value.length !== 2 + 2 * length) { return false; }\n    return true;\n}\n\nconst HexCharacters: string = \"0123456789abcdef\";\n\nexport function hexlify(value: BytesLike | Hexable | number | bigint, options?: DataOptions): string {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n\n        if (hex.length) {\n            if (hex.length % 2) { hex = \"0\" + hex; }\n            return \"0x\" + hex;\n        }\n\n        return \"0x00\";\n    }\n\n    if (typeof(value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) { return (\"0x0\" + value); }\n        return \"0x\" + value;\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { return value.toHexString(); }\n\n    if (isHexString(value)) {\n        if ((<string>value).length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + (<string>value).substring(2);\n            } else if (options.hexPad === \"right\") {\n                value += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return (<string>value).toLowerCase();\n    }\n\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n             let v = value[i];\n             result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data: BytesLike) {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n\n    return (data.length - 2) / 2;\n}\n\nexport function hexDataSlice(data: BytesLike, offset: number, endOffset?: number): string {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data );\n    }\n\n    offset = 2 + 2 * offset;\n\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n\n    return \"0x\" + data.substring(offset);\n}\n\nexport function hexConcat(items: ReadonlyArray<BytesLike>): string {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\n\nexport function hexValue(value: BytesLike | Hexable | number | bigint): string {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") { return \"0x0\"; }\n    return trimmed;\n}\n\nexport function hexStripZeros(value: BytesLike): string {\n    if (typeof(value) !== \"string\") { value = hexlify(value); }\n\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") { offset++; }\n    return \"0x\" + value.substring(offset);\n}\n\nexport function hexZeroPad(value: BytesLike, length: number): string {\n    if (typeof(value) !== \"string\") {\n        value = hexlify(value);\n    } else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n\n    return value;\n}\n\nexport function splitSignature(signature: SignatureLike): Signature {\n\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n\n    if (isBytesLike(signature)) {\n        let bytes: Uint8Array = arrayify(signature);\n\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n\n        } else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        } else {\n\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n\n\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            } else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) { bytes[32] |= 0x80; }\n        result._vs = hexlify(bytes.slice(32, 64))\n\n    } else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1: 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            } else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            } else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            } else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            } else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        } else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            } else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v :(1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        } else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        } else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) { vs[0] |= 0x80; }\n        const _vs = hexlify(vs);\n\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        } else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n\n    return result;\n}\n\nexport function joinSignature(signature: SignatureLike): string {\n    signature = splitSignature(signature);\n\n    return hexlify(concat([\n         signature.r,\n         signature.s,\n         (signature.recoveryParam ? \"0x1c\": \"0x1b\")\n    ]));\n}\n\n","export const version = \"bytes/5.7.0\";\n","export const version = \"bignumber/5.7.0\";\n","\"use strict\";\n\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\n\nimport _BN from \"bn.js\";\nimport BN = _BN.BN;\n\nimport { Bytes, Hexable, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst _constructorGuard = { };\n\nconst MAX_SAFE = 0x1fffffffffffff;\n\n\nexport type BigNumberish = BigNumber | Bytes | bigint | string | number;\n\nexport function isBigNumberish(value: any): value is BigNumberish {\n    return (value != null) && (\n        BigNumber.isBigNumber(value) ||\n        (typeof(value) === \"number\" && (value % 1) === 0) ||\n        (typeof(value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof(value) === \"bigint\") ||\n        isBytes(value)\n    );\n}\n\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\n\nexport class BigNumber implements Hexable {\n    readonly _hex: string;\n    readonly _isBigNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n\n        this._hex = hex;\n        this._isBigNumber = true;\n\n        Object.freeze(this);\n    }\n\n    fromTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n\n    toTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n\n    abs(): BigNumber {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n\n    add(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n\n    sub(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n\n    div(other: BigNumberish): BigNumber {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division-by-zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n\n    mul(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n\n    mod(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"division-by-zero\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n\n    pow(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"negative-power\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n\n    and(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n\n    or(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n\n    xor(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n\n    mask(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n\n    shl(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n\n    shr(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n\n    eq(other: BigNumberish): boolean {\n        return toBN(this).eq(toBN(other));\n    }\n\n    lt(other: BigNumberish): boolean {\n        return toBN(this).lt(toBN(other));\n    }\n\n    lte(other: BigNumberish): boolean {\n        return toBN(this).lte(toBN(other));\n    }\n\n    gt(other: BigNumberish): boolean {\n        return toBN(this).gt(toBN(other));\n   }\n\n    gte(other: BigNumberish): boolean {\n        return toBN(this).gte(toBN(other));\n    }\n\n    isNegative(): boolean {\n        return (this._hex[0] === \"-\");\n    }\n\n    isZero(): boolean {\n        return toBN(this).isZero();\n    }\n\n    toNumber(): number {\n        try {\n            return toBN(this).toNumber();\n        } catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n\n    toBigInt(): bigint {\n        try {\n            return BigInt(this.toString());\n        } catch (e) { }\n\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n\n    toString(): string {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            } else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            } else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            }\n        }\n        return toBN(this).toString(10);\n    }\n\n    toHexString(): string {\n        return this._hex;\n    }\n\n    toJSON(key?: string): any {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n\n    static from(value: any): BigNumber {\n        if (value instanceof BigNumber) { return value; }\n\n        if (typeof(value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n\n        if (typeof(value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n\n            return BigNumber.from(String(value));\n        }\n\n        const anyValue = <any>value;\n\n        if (typeof(anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n\n        if (anyValue) {\n\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof(hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n\n            } else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n\n                if (typeof(hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n\n    static isBigNumber(value: any): value is BigNumber {\n        return !!(value && value._isBigNumber);\n    }\n}\n\n// Normalize the hex string\nfunction toHex(value: string | BN): string {\n\n    // For BN, call on the hex string\n    if (typeof(value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") { logger.throwArgumentError(\"invalid hex\", \"value\", value); }\n\n        // Call toHex on the positive component\n        value = toHex(value);\n\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") { return value; }\n\n        // Negate the value\n        return \"-\" + value;\n    }\n\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n\n    // Normalize zero\n    if (value === \"0x\") { return \"0x00\"; }\n\n    // Make the string even length\n    if (value.length % 2) { value = \"0x0\" + value.substring(2); }\n\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n\n    return value;\n}\n\nfunction toBigNumber(value: BN): BigNumber {\n    return BigNumber.from(toHex(value));\n}\n\nfunction toBN(value: BigNumberish): BN {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value != null) { params.value = value; }\n\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// value should have no prefix\nexport function _base36To16(value: string): string {\n    return (new BN(value, 36)).toString(16);\n}\n\n// value should have no prefix\nexport function _base16To36(value: string): string {\n    return (new BN(value, 16)).toString(36);\n}\n","export const version = \"properties/5.7.0\";\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function defineReadOnly<T, K extends keyof T>(object: T, name: K, value: T[K]): void {\n    Object.defineProperty(object, name, {\n        enumerable: true,\n        value: value,\n        writable: false,\n    });\n}\n\n// Crawl up the constructor chain to find a static method\nexport function getStatic<T>(ctor: any, key: string): T {\n    for (let i = 0; i < 32; i++) {\n        if (ctor[key]) { return ctor[key]; }\n        if (!ctor.prototype || typeof(ctor.prototype) !== \"object\") { break; }\n        ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n    }\n    return null;\n}\n\nexport type Deferrable<T> = {\n    [ K in keyof T ]: T[K] | Promise<T[K]>;\n}\n\n\ntype Result = { key: string, value: any};\n\nexport async function resolveProperties<T>(object: Readonly<Deferrable<T>>): Promise<T> {\n    const promises: Array<Promise<Result>> = Object.keys(object).map((key) => {\n        const value = object[<keyof Deferrable<T>>key];\n        return Promise.resolve(value).then((v) => ({ key: key, value: v }));\n    });\n\n    const results = await Promise.all(promises);\n\n    return results.reduce((accum, result) => {\n        accum[<keyof T>(result.key)] = result.value;\n        return accum;\n    }, <T>{ });\n}\n\nexport function checkProperties(object: any, properties: { [ name: string ]: boolean }): void {\n    if (!object || typeof(object) !== \"object\") {\n        logger.throwArgumentError(\"invalid object\", \"object\", object);\n    }\n\n    Object.keys(object).forEach((key) => {\n        if (!properties[key]) {\n            logger.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n        }\n    });\n}\n\nexport function shallowCopy<T>(object: T): T {\n    const result: any = {};\n    for (const key in object) { result[key] = object[key]; }\n    return result;\n}\n\nconst opaque: { [key: string]: boolean } = { bigint: true, boolean: true, \"function\": true, number: true, string: true };\n\nfunction _isFrozen(object: any): boolean {\n\n    // Opaque objects are not mutable, so safe to copy by assignment\n    if (object === undefined || object === null || opaque[typeof(object)]) { return true; }\n\n    if (Array.isArray(object) || typeof(object) === \"object\") {\n        if (!Object.isFrozen(object)) { return false; }\n\n        const keys = Object.keys(object);\n        for (let i = 0; i < keys.length; i++) {\n            let value: any = null;\n            try {\n                value = object[keys[i]];\n            } catch (error) {\n                // If accessing a value triggers an error, it is a getter\n                // designed to do so (e.g. Result) and is therefore \"frozen\"\n                continue;\n            }\n\n            if (!_isFrozen(value)) { return false; }\n        }\n\n        return true;\n    }\n\n    return logger.throwArgumentError(`Cannot deepCopy ${ typeof(object) }`, \"object\", object);\n}\n\n// Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\nfunction _deepCopy(object: any): any {\n\n    if (_isFrozen(object)) { return object; }\n\n    // Arrays are mutable, so we need to create a copy\n    if (Array.isArray(object)) {\n        return Object.freeze(object.map((item) => deepCopy(item)));\n    }\n\n    if (typeof(object) === \"object\") {\n        const result: { [ key: string ]: any } = {};\n        for (const key in object) {\n            const value = object[key];\n            if (value === undefined) { continue; }\n            defineReadOnly(result, key, deepCopy(value));\n        }\n\n        return result;\n    }\n\n    return logger.throwArgumentError(`Cannot deepCopy ${ typeof(object) }`, \"object\", object);\n}\n\nexport function deepCopy<T>(object: T): T {\n    return _deepCopy(object);\n}\n\nexport class Description<T = any> {\n    constructor(info: { [ K in keyof T ]: T[K] }) {\n        for (const key in info) {\n            (<any>this)[key] = deepCopy(info[key]);\n        }\n    }\n}\n","\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { BytesLike, isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { Deferrable, Description, defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { AccessListish, Transaction } from \"@ethersproject/transactions\";\nimport { OnceBlockable } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\n\nexport type TransactionRequest = {\n    to?: string,\n    from?: string,\n    nonce?: BigNumberish,\n\n    gasLimit?: BigNumberish,\n    gasPrice?: BigNumberish,\n\n    data?: BytesLike,\n    value?: BigNumberish,\n    chainId?: number\n\n    type?: number;\n    accessList?: AccessListish;\n\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n}\n\nexport interface TransactionResponse extends Transaction {\n    hash: string;\n\n    // Only if a transaction has been mined\n    blockNumber?: number,\n    blockHash?: string,\n    timestamp?: number,\n\n    confirmations: number,\n\n    // Not optional (as it is in Transaction)\n    from: string;\n\n    // The raw transaction\n    raw?: string,\n\n    // This function waits until the transaction has been mined\n    wait: (confirmations?: number) => Promise<TransactionReceipt>\n};\n\nexport type BlockTag = string | number;\n\nexport interface _Block {\n    hash: string;\n    parentHash: string;\n    number: number;\n\n    timestamp: number;\n    nonce: string;\n    difficulty: number;\n    _difficulty: BigNumber;\n\n    gasLimit: BigNumber;\n    gasUsed: BigNumber;\n\n    miner: string;\n    extraData: string;\n\n    baseFeePerGas?: null | BigNumber;\n}\n\nexport interface Block extends _Block {\n    transactions: Array<string>;\n}\n\nexport interface BlockWithTransactions extends _Block {\n    transactions: Array<TransactionResponse>;\n}\n\n\nexport interface Log {\n    blockNumber: number;\n    blockHash: string;\n    transactionIndex: number;\n\n    removed: boolean;\n\n    address: string;\n    data: string;\n\n    topics: Array<string>;\n\n    transactionHash: string;\n    logIndex: number;\n}\n\nexport interface TransactionReceipt {\n    to: string;\n    from: string;\n    contractAddress: string,\n    transactionIndex: number,\n    root?: string,\n    gasUsed: BigNumber,\n    logsBloom: string,\n    blockHash: string,\n    transactionHash: string,\n    logs: Array<Log>,\n    blockNumber: number,\n    confirmations: number,\n    cumulativeGasUsed: BigNumber,\n    effectiveGasPrice: BigNumber,\n    byzantium: boolean,\n    type: number;\n    status?: number\n};\n\nexport interface FeeData {\n    lastBaseFeePerGas: null | BigNumber;\n    maxFeePerGas: null | BigNumber;\n    maxPriorityFeePerGas: null | BigNumber;\n    gasPrice: null | BigNumber;\n}\n\nexport interface EventFilter {\n    address?: string;\n    topics?: Array<string | Array<string> | null>;\n}\n\nexport interface Filter extends EventFilter {\n    fromBlock?: BlockTag,\n    toBlock?: BlockTag,\n}\n\nexport interface FilterByBlockHash extends EventFilter {\n    blockHash?: string;\n}\n\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\n\nexport abstract class ForkEvent extends Description {\n    readonly expiry: number;\n\n    readonly _isForkEvent?: boolean;\n\n    static isForkEvent(value: any): value is ForkEvent {\n        return !!(value && value._isForkEvent);\n    }\n}\n\nexport class BlockForkEvent extends ForkEvent {\n    readonly blockHash: string;\n\n    readonly _isBlockForkEvent?: boolean;\n\n    constructor(blockHash: string, expiry?: number) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\n\nexport class TransactionForkEvent extends ForkEvent {\n    readonly hash: string;\n\n    readonly _isTransactionOrderForkEvent?: boolean;\n\n    constructor(hash: string, expiry?: number) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\n\nexport class TransactionOrderForkEvent extends ForkEvent {\n    readonly beforeHash: string;\n    readonly afterHash: string;\n\n    constructor(beforeHash: string, afterHash: string, expiry?: number) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n\nexport type EventType = string | Array<string | Array<string>> | EventFilter | ForkEvent;\n\nexport type Listener = (...args: Array<any>) => void;\n\n///////////////////////////////\n// Exported Abstracts\nexport abstract class Provider implements OnceBlockable {\n\n    // Network\n    abstract getNetwork(): Promise<Network>;\n\n    // Latest State\n    abstract getBlockNumber(): Promise<number>;\n    abstract getGasPrice(): Promise<BigNumber>;\n    async getFeeData(): Promise<FeeData> {\n        const { block, gasPrice } = await resolveProperties({\n            block: this.getBlock(\"latest\"),\n            gasPrice: this.getGasPrice().catch((error) => {\n                // @TODO: Why is this now failing on Calaveras?\n                //console.log(error);\n                return null;\n            })\n        });\n\n        let lastBaseFeePerGas = null, maxFeePerGas = null, maxPriorityFeePerGas = null;\n\n        if (block && block.baseFeePerGas) {\n            // We may want to compute this more accurately in the future,\n            // using the formula \"check if the base fee is correct\".\n            // See: https://eips.ethereum.org/EIPS/eip-1559\n            lastBaseFeePerGas = block.baseFeePerGas;\n            maxPriorityFeePerGas = BigNumber.from(\"1500000000\");\n            maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n        }\n\n        return { lastBaseFeePerGas, maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n    }\n\n    // Account\n    abstract getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber>;\n    abstract getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number>;\n    abstract getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> ;\n    abstract getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n\n    // Execution\n    abstract sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse>;\n    abstract call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n    abstract estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber>;\n\n    // Queries\n    abstract getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block>;\n    abstract getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions>;\n    abstract getTransaction(transactionHash: string): Promise<TransactionResponse>;\n    abstract getTransactionReceipt(transactionHash: string): Promise<TransactionReceipt>;\n\n    // Bloom-filter Queries\n    abstract getLogs(filter: Filter): Promise<Array<Log>>;\n\n    // ENS\n    abstract resolveName(name: string | Promise<string>): Promise<null | string>;\n    abstract lookupAddress(address: string | Promise<string>): Promise<null | string>;\n\n    // Event Emitter (ish)\n    abstract on(eventName: EventType, listener: Listener): Provider;\n    abstract once(eventName: EventType, listener: Listener): Provider;\n    abstract emit(eventName: EventType, ...args: Array<any>): boolean\n    abstract listenerCount(eventName?: EventType): number;\n    abstract listeners(eventName?: EventType): Array<Listener>;\n    abstract off(eventName: EventType, listener?: Listener): Provider;\n    abstract removeAllListeners(eventName?: EventType): Provider;\n\n    // Alias for \"on\"\n    addListener(eventName: EventType, listener: Listener): Provider {\n        return this.on(eventName, listener);\n    }\n\n    // Alias for \"off\"\n    removeListener(eventName: EventType, listener: Listener): Provider {\n        return this.off(eventName, listener);\n    }\n\n    // @TODO: This *could* be implemented here, but would pull in events...\n    abstract waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt>;\n\n    readonly _isProvider: boolean;\n\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n\n    static isProvider(value: any): value is Provider {\n        return !!(value && value._isProvider);\n    }\n\n/*\n    static getResolver(network: Network, callable: CallTransactionable, namehash: string): string {\n        // No ENS...\n        if (!network.ensAddress) {\n            errors.throwError(\n                \"network does support ENS\",\n                errors.UNSUPPORTED_OPERATION,\n                { operation: \"ENS\", network: network.name }\n            );\n        }\n\n        // Not a namehash\n        if (!isHexString(namehash, 32)) {\n            errors.throwArgumentError(\"invalid name hash\", \"namehash\", namehash);\n        }\n\n        // keccak256(\"resolver(bytes32)\")\n        let data = \"0x0178b8bf\" + namehash.substring(2);\n        let transaction = { to: network.ensAddress, data: data };\n\n        return provider.call(transaction).then((data) => {\n            return provider.formatter.callAddress(data);\n        });\n    }\n\n    static resolveNamehash(network: Network, callable: CallTransactionable, namehash: string): string {\n        return this.getResolver(network, callable, namehash).then((resolverAddress) => {\n            if (!resolverAddress) { return null; }\n\n            // keccak256(\"addr(bytes32)\")\n            let data = \"0x3b3b57de\" + namehash(name).substring(2);\n            let transaction = { to: resolverAddress, data: data };\n            return callable.call(transaction).then((data) => {\n                return this.formatter.callAddress(data);\n            });\n\n        })\n    }\n*/\n}\n","export const version = \"abstract-provider/5.7.0\";\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Network, Networkish } from \"./types\";\n\nexport {\n    Network,\n    Networkish\n};\n\ntype DefaultProviderFunc = (providers: any, options?: any) => any;\n\ninterface Renetworkable extends DefaultProviderFunc {\n    renetwork: (network: Network) => DefaultProviderFunc;\n};\n\nfunction isRenetworkable(value: any): value is Renetworkable {\n    return (value && typeof(value.renetwork) === \"function\");\n}\n\nfunction ethDefaultProvider(network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (options == null) { options = { }; }\n        const providerList: Array<any> = [];\n\n        if (providers.InfuraProvider && options.infura !== \"-\") {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            } catch(error) { }\n        }\n\n        if (providers.EtherscanProvider && options.etherscan !== \"-\") {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            } catch(error) { }\n        }\n\n        if (providers.AlchemyProvider && options.alchemy !== \"-\") {\n            try {\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            } catch(error) { }\n        }\n\n        if (providers.PocketProvider && options.pocket !== \"-\") {\n            // These networks are currently faulty on Pocket as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            const skip = [ \"goerli\", \"ropsten\", \"rinkeby\" ];\n            try {\n                const provider = new providers.PocketProvider(network, options.pocket);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providers.CloudflareProvider && options.cloudflare !== \"-\") {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            } catch(error) { }\n        }\n\n        if (providers.AnkrProvider && options.ankr !== \"-\") {\n            try {\n                const skip = [ \"ropsten\" ];\n                const provider = new providers.AnkrProvider(network, options.ankr);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providerList.length === 0) { return null; }\n\n        if (providers.FallbackProvider) {\n            let quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            } else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n\n        return providerList[0];\n    };\n\n    func.renetwork = function(network: Network) {\n        return ethDefaultProvider(network);\n    };\n\n    return func;\n}\n\nfunction etcDefaultProvider(url: string, network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n\n        return null;\n    };\n\n    func.renetwork = function(network: Network) {\n        return etcDefaultProvider(url, network);\n    };\n\n    return func;\n}\n\nconst homestead: Network = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\n\nconst ropsten: Network = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\n\nconst classicMordor: Network = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\n\n// See: https://chainlist.org\nconst networks: { [name: string]: Network } = {\n    unspecified: { chainId: 0, name: \"unspecified\" },\n\n    homestead: homestead,\n    mainnet: homestead,\n\n    morden: { chainId: 2, name: \"morden\" },\n\n    ropsten: ropsten,\n    testnet: ropsten,\n\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n\n    kintsugi: { chainId: 1337702, name: \"kintsugi\" },\n\n\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n    },\n\n    classicMorden: { chainId: 62, name: \"classicMorden\" },\n\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n\n    xdai: { chainId: 100, name: \"xdai\" },\n\n    matic: {\n        chainId: 137,\n        name: \"matic\",\n        _defaultProvider: ethDefaultProvider(\"matic\")\n    },\n    maticmum: { chainId: 80001, name: \"maticmum\" },\n\n    optimism: {\n        chainId: 10,\n        name: \"optimism\",\n        _defaultProvider: ethDefaultProvider(\"optimism\")\n    },\n    \"optimism-kovan\": { chainId: 69, name: \"optimism-kovan\" },\n    \"optimism-goerli\": { chainId: 420, name: \"optimism-goerli\" },\n\n    arbitrum: { chainId: 42161, name: \"arbitrum\" },\n    \"arbitrum-rinkeby\": { chainId: 421611, name: \"arbitrum-rinkeby\" },\n    \"arbitrum-goerli\": { chainId: 421613, name: \"arbitrum-goerli\" },\n\n    bnb: { chainId: 56, name: \"bnb\" },\n    bnbt: { chainId: 97, name: \"bnbt\" },\n}\n\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nexport function getNetwork(network: Networkish): Network {\n    // No network (null)\n    if (network == null) { return null; }\n\n    if (typeof(network) === \"number\") {\n        for (const name in networks) {\n            const standard = networks[name];\n            if (standard.chainId === network) {\n                return {\n                    name: standard.name,\n                    chainId: standard.chainId,\n                    ensAddress: (standard.ensAddress || null),\n                    _defaultProvider: (standard._defaultProvider || null)\n                };\n            }\n        }\n\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n\n    if (typeof(network) === \"string\") {\n        const standard = networks[network];\n        if (standard == null) { return null; }\n        return {\n            name: standard.name,\n            chainId: standard.chainId,\n            ensAddress: standard.ensAddress,\n            _defaultProvider: (standard._defaultProvider || null)\n        };\n    }\n\n    const standard  = networks[network.name];\n\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof(network.chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    let defaultProvider: DefaultProviderFunc = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        } else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\n","export const version = \"networks/5.7.0\";\n","\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n\nexport enum UnicodeNormalizationForm {\n    current  = \"\",\n    NFC      = \"NFC\",\n    NFD      = \"NFD\",\n    NFKC     = \"NFKC\",\n    NFKD     = \"NFKD\"\n};\n\nexport enum Utf8ErrorReason {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    UNEXPECTED_CONTINUE   = \"unexpected continuation byte\",\n\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    BAD_PREFIX            = \"bad codepoint prefix\",\n\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    OVERRUN               = \"string overrun\",\n\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    MISSING_CONTINUE      = \"missing continuation byte\",\n\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    OUT_OF_RANGE          = \"out of UTF-8 range\",\n\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    UTF16_SURROGATE       = \"UTF-16 surrogate\",\n\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    OVERLONG              = \"overlong representation\",\n};\n\n\nexport type Utf8ErrorFunc = (reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number) => number;\n\nfunction errorFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n    return logger.throwArgumentError(`invalid codepoint at offset ${ offset }; ${ reason }`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) { break; }\n            i++;\n        }\n        return i;\n    }\n\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n\n    // Nothing to skip\n    return 0;\n}\n\nfunction replaceFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n\n    // Put the replacement character into the output\n    output.push(0xfffd);\n\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\n// Common error handing strategies\nexport const Utf8ErrorFuncs: { [ name: string ]: Utf8ErrorFunc } = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes: BytesLike, onError?: Utf8ErrorFunc): Array<number> {\n    if (onError == null) { onError = Utf8ErrorFuncs.error; }\n\n    bytes = arrayify(bytes);\n\n    const result: Array<number> = [];\n    let i = 0;\n\n    // Invalid bytes are ignored\n    while(i < bytes.length) {\n\n        const c = bytes[i++];\n\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n\n        // 1110 xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n\n        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n\n        } else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            } else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            };\n\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n\n        // See above loop for invalid continuation byte\n        if (res === null) { continue; }\n\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        result.push(res);\n    }\n\n    return result;\n}\n\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Uint8Array {\n\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n\n        if (c < 0x80) {\n            result.push(c);\n\n        } else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n\n        } else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n\n        } else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n\n    return arrayify(result);\n};\n\nfunction escapeChar(value: number) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\n\nexport function _toEscapedUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8:  return \"\\\\b\";\n                case 9:  return \"\\\\t\";\n                case 10: return \"\\\\n\"\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\n\nexport function _toUtf8String(codePoints: Array<number>): string {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode(\n            (((codePoint >> 10) & 0x3ff) + 0xd800),\n            ((codePoint & 0x3ff) + 0xdc00)\n        );\n    }).join(\"\");\n}\n\nexport function toUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\nexport function toUtf8CodePoints(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Array<number> {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n","/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nexport class BaseX {\n    readonly alphabet: string;\n    readonly base: number;\n\n    _alphabetMap: { [ character: string ]: number };\n    _leader: string;\n\n    constructor(alphabet: string) {\n        defineReadOnly(this, \"alphabet\", alphabet);\n        defineReadOnly(this, \"base\", alphabet.length);\n\n        defineReadOnly(this, \"_alphabetMap\", { });\n        defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n\n        // pre-compute lookup table\n        for (let i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n\n    encode(value: BytesLike): string {\n        let source = arrayify(value);\n\n        if (source.length === 0) { return \"\"; }\n\n        let digits = [ 0 ]\n        for (let i = 0; i < source.length; ++i) {\n            let carry = source[i];\n            for (let j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n\n        let string = \"\"\n\n        // deal with leading zeros\n        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n\n        // convert digits to a string\n        for (let q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n\n        return string;\n    }\n\n    decode(value: string): Uint8Array {\n        if (typeof(value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n\n        let bytes: Array<number> = [];\n        if (value.length === 0) { return new Uint8Array(bytes); }\n\n        bytes.push(0);\n        for (let i = 0; i < value.length; i++) {\n            let byte = this._alphabetMap[value[i]];\n\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n\n            let carry = byte;\n            for (let j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n\n        // deal with leading zeros\n        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0)\n        }\n\n        return arrayify(new Uint8Array(bytes.reverse()))\n    }\n}\n\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\n\nexport { Base32, Base58 };\n\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n","export const version = \"strings/5.7.0\";\n","\"use strict\";\n\nimport sha3 from \"js-sha3\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function keccak256(data: BytesLike): string {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n","export const version = \"hash/5.7.0\";\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nexport type Numbers = Uint8Array | Array<number>;\nexport type NextFunc = (...args: Array<any>) => number;\n\n// https://github.com/behnammodi/polyfill/blob/master/array.polyfill.js\nfunction flat(array: Array<any>, depth?: number): Array<any> {\n    if (depth == null) { depth = 1; }\n    const result: Array<any> = [];\n\n    const forEach = result.forEach;\n\n    const flatDeep = function (arr: Array<any>, depth: number) {\n        forEach.call(arr, function (val: any) {\n            if (depth > 0 && Array.isArray(val)) {\n                flatDeep(val, depth - 1);\n            } else {\n               result.push(val);\n            }\n        });\n    };\n\n    flatDeep(array, depth);\n    return result;\n}\n\nfunction fromEntries<T extends string | number | symbol = string | number | symbol, U = any>(array: Array<[T, U]>): Record<T, U> {\n    const result: Record<T, U> = <Record<T, U>>{ };\n    for (let i = 0; i < array.length; i++) {\n        const value = array[i];\n        result[value[0]] = value[1];\n    }\n    return result;\n}\n\nexport function decode_arithmetic(bytes: Numbers): Array<number> {\n\tlet pos = 0;\n\tfunction u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\n\t\n\t// decode the frequency table\n\tlet symbol_count = u16();\n\tlet total = 1;\n\tlet acc = [0, 1]; // first symbol has frequency 1\n\tfor (let i = 1; i < symbol_count; i++) {\n\t\tacc.push(total += u16());\n\t}\n\n\t// skip the sized-payload that the last 3 symbols index into\n\tlet skip = u16();\n\tlet pos_payload = pos;\n\tpos += skip;\n\n\tlet read_width = 0;\n\tlet read_buffer = 0; \n\tfunction read_bit() {\n\t\tif (read_width == 0) {\n\t\t\t// this will read beyond end of buffer\n\t\t\t// but (undefined|0) => zero pad\n\t\t\tread_buffer = (read_buffer << 8) | bytes[pos++];\n\t\t\tread_width = 8;\n\t\t}\n\t\treturn (read_buffer >> --read_width) & 1;\n\t}\n\n\tconst N = 31;\n\tconst FULL = 2**N;\n\tconst HALF = FULL >>> 1;\n\tconst QRTR = HALF >> 1;\n\tconst MASK = FULL - 1;\n\n\t// fill register\n\tlet register = 0;\n\tfor (let i = 0; i < N; i++) register = (register << 1) | read_bit();\n\n\tlet symbols = [];\n\tlet low = 0;\n\tlet range = FULL; // treat like a float\n\twhile (true) {\n\t\tlet value = Math.floor((((register - low + 1) * total) - 1) / range);\n\t\tlet start = 0;\n\t\tlet end = symbol_count;\n\t\twhile (end - start > 1) { // binary search\n\t\t\tlet mid = (start + end) >>> 1;\n\t\t\tif (value < acc[mid]) {\n\t\t\t\tend = mid;\n\t\t\t} else {\n\t\t\t\tstart = mid;\n\t\t\t}\n\t\t}\n\t\tif (start == 0) break; // first symbol is end mark\n\t\tsymbols.push(start);\n\t\tlet a = low + Math.floor(range * acc[start]   / total);\n\t\tlet b = low + Math.floor(range * acc[start+1] / total) - 1\n\t\twhile (((a ^ b) & HALF) == 0) {\n\t\t\tregister = (register << 1) & MASK | read_bit();\n\t\t\ta = (a << 1) & MASK;\n\t\t\tb = (b << 1) & MASK | 1;\n\t\t}\n\t\twhile (a & ~b & QRTR) {\n\t\t\tregister = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\n\t\t\ta = (a << 1) ^ HALF;\n\t\t\tb = ((b ^ HALF) << 1) | HALF | 1;\n\t\t}\n\t\tlow = a;\n\t\trange = 1 + b - a;\n\t}\n\tlet offset = symbol_count - 4;\n\treturn symbols.map(x => { // index into payload\n\t\tswitch (x - offset) {\n\t\t\tcase 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 1: return offset + bytes[pos_payload++];\n\t\t\tdefault: return x - 1;\n\t\t}\n\t});\n}\t\n\n\n// returns an iterator which returns the next symbol\nexport function read_payload(v: Numbers): NextFunc {\n\tlet pos = 0;\n\treturn () => v[pos++];\n}\nexport function read_compressed_payload(bytes: Numbers): NextFunc {\n\treturn read_payload(decode_arithmetic(bytes));\n}\n\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\nexport function signed(i: number): number { \n\treturn (i & 1) ? (~i >> 1) : (i >> 1);\n}\n\nfunction read_counts(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0; i < n; i++) v[i] = 1 + next();\n\treturn v;\n}\n\nfunction read_ascending(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = -1; i < n; i++) v[i] = x += 1 + next();\n\treturn v;\n}\n\nfunction read_deltas(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = 0; i < n; i++) v[i] = x += signed(next());\n\treturn v;\n}\n\nexport function read_member_array(next: NextFunc, lookup?: Record<number, number>) {\n    let v = read_ascending(next(), next);\n    let n = next();\n    let vX = read_ascending(n, next);\n    let vN = read_counts(n, next);\n    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < vN[i]; j++) {\n            v.push(vX[i] + j);\n        }\n    }\n    return lookup ? v.map(x => lookup[x]) : v;\n}\n\n// returns array of \n// [x, ys] => single replacement rule\n// [x, ys, n, dx, dx] => linear map\nexport function read_mapped_map(next: NextFunc): Record<number, Array<number>> {\n\tlet ret = [];\n\twhile (true) {\n\t\tlet w = next();\n\t\tif (w == 0) break;\n\t\tret.push(read_linear_table(w, next));\n\t}\n\twhile (true) {\n\t\tlet w = next() - 1;\n\t\tif (w < 0) break;\n\t\tret.push(read_replacement_table(w, next));\n\t}\n\treturn fromEntries<number, Array<number>>(flat(ret));\n}\n\nexport function read_zero_terminated_array(next: NextFunc): Array<number> {\n\tlet v = [];\n\twhile (true) {\n\t\tlet i = next();\n\t\tif (i == 0) break;\n\t\tv.push(i);\n\t}\n\treturn v;\n}\n\nfunction read_transposed(n: number, w: number, next: NextFunc): Array<Array<number>> {\n    let m = Array(n).fill(undefined).map(() => []);\n    for (let i = 0; i < w; i++) {\n        read_deltas(n, next).forEach((x, j) => m[j].push(x));\n    }\n    return m;\n}\n\n\nfunction read_linear_table(w: number, next: NextFunc): Array<Array<number | Array<number>>> {\n\tlet dx = 1 + next();\n\tlet dy = next();\n\tlet vN = read_zero_terminated_array(next);\n\tlet m = read_transposed(vN.length, 1+w, next);\n\treturn flat(m.map((v, i) => {\n\t  const x = v[0], ys = v.slice(1);\n\t\t//let [x, ...ys] = v;\n\t\t//return Array(vN[i]).fill().map((_, j) => {\n\t\treturn Array(vN[i]).fill(undefined).map((_, j) => {\n\t\t\tlet j_dy = j * dy;\n\t\t\treturn [x + j * dx, ys.map(y => y + j_dy)];\n\t\t});\n\t}));\n}\n\nfunction read_replacement_table(w: number, next: NextFunc): Array<[ number, Array<number> ]> {\n\tlet n = 1 + next();\n\tlet m = read_transposed(n, 1+w, next);\n\treturn m.map(v => [v[0], v.slice(1)]);\n}\n\nexport type Branch = {\n    set: Set<number>;\n    node: Node;\n};\n\nexport type Node = {\n    branches: Array<Branch>;\n    valid: number;\n    fe0f: boolean;\n    save: boolean;\n    check: boolean;\n};\n\nexport function read_emoji_trie(next: NextFunc): Node {\n\tlet sorted = read_member_array(next).sort((a, b) => a - b);\n\treturn read();\n\tfunction read(): Node {\n\t\tlet branches = [];\n\t\twhile (true) {\n\t\t\tlet keys = read_member_array(next, sorted);\n\t\t\tif (keys.length == 0) break;\n\t\t\tbranches.push({set: new Set(keys), node: read()});\n\t\t}\n    branches.sort((a, b) => b.set.size - a.set.size); // sort by likelihood\n \t\tlet temp = next();\n \t\tlet valid = temp % 3;\n \t\ttemp = (temp / 3)|0;\n \t\tlet fe0f = !!(temp & 1);\n \t\ttemp >>= 1;\n \t\tlet save = temp == 1;\n \t\tlet check = temp == 2;\n \t\treturn {branches, valid, fe0f, save, check};\n\t}\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { toUtf8CodePoints } from \"@ethersproject/strings\";\n\nimport { getData } from './include.js';\nconst r = getData();\n\nimport {read_member_array, read_mapped_map, read_emoji_trie} from './decoder.js';\n\n// @TODO: This should be lazily loaded\n\nconst VALID = new Set(read_member_array(r));\nconst IGNORED = new Set(read_member_array(r));\nconst MAPPED = read_mapped_map(r);\nconst EMOJI_ROOT = read_emoji_trie(r);\n//const NFC_CHECK = new Set(read_member_array(r, Array.from(VALID.values()).sort((a, b) => a - b)));\n\n//const STOP = 0x2E;\nconst HYPHEN = 0x2D;\nconst UNDERSCORE = 0x5F;\n\nfunction explode_cp(name: string): Array<number> {\n    return toUtf8CodePoints(name);\n}\n\nfunction filter_fe0f(cps: Array<number>): Array<number> {\n    return cps.filter(cp => cp != 0xFE0F);\n}\n\nexport function ens_normalize_post_check(name: string): string {\n\tfor (let label of name.split('.')) {\n\t\tlet cps = explode_cp(label);\n\t\ttry {\n\t\t\tfor (let i = cps.lastIndexOf(UNDERSCORE) - 1; i >= 0; i--) {\n\t\t\t\tif (cps[i] !== UNDERSCORE) {\n\t\t\t\t\tthrow new Error(`underscore only allowed at start`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (cps.length >= 4 && cps.every(cp => cp < 0x80) && cps[2] === HYPHEN && cps[3] === HYPHEN) {\n\t\t\t\tthrow new Error(`invalid label extension`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthrow new Error(`Invalid label \"${label}\": ${err.message}`);\n\t\t}\n\t}\n\treturn name;\n}\n\nexport function ens_normalize(name: string): string {\n\treturn ens_normalize_post_check(normalize(name, filter_fe0f));\n}\n\nfunction normalize(name: string, emoji_filter: (a: Array<number>) => Array<number>): string {\n\tlet input = explode_cp(name).reverse(); // flip for pop\n\tlet output = [];\n\twhile (input.length) {\t\t\n\t\tlet emoji = consume_emoji_reversed(input);\n\t\tif (emoji) {\n\t\t\toutput.push(...emoji_filter(emoji));\n\t\t\tcontinue;\n\t\t}\n\t\tlet cp = input.pop();\n\t\tif (VALID.has(cp)) {\n\t\t\toutput.push(cp);\n\t\t\tcontinue;\n\t\t} \n\t\tif (IGNORED.has(cp)) {\n\t\t\tcontinue;\n\t\t}\n\t\tlet cps = MAPPED[cp];\n\t\tif (cps) {\n\t\t\toutput.push(...cps);\n\t\t\tcontinue;\n\t\t}\n\t\tthrow new Error(`Disallowed codepoint: 0x${cp.toString(16).toUpperCase()}`);\n\t}\n\treturn ens_normalize_post_check(nfc(String.fromCodePoint(...output)));\n}\n\nfunction nfc(s: string): string {\n    return s.normalize('NFC');\n}\n\nfunction consume_emoji_reversed(cps: Array<number>, eaten?: Array<number>) {\n\tlet node = EMOJI_ROOT;\n\tlet emoji;\n\tlet saved;\n\tlet stack = [];\n\tlet pos = cps.length;\n\tif (eaten) eaten.length = 0; // clear input buffer (if needed)\n\twhile (pos) {\n\t\tlet cp = cps[--pos];\n\t\tnode = node.branches.find(x => x.set.has(cp))?.node;\n\t\tif (!node) break;\n\t\tif (node.save) { // remember\n\t\t\tsaved = cp;\n\t\t} else if (node.check) { // check exclusion\n\t\t\tif (cp === saved) break;\n\t\t}\n\t\tstack.push(cp);\n\t\tif (node.fe0f) {\n\t\t\tstack.push(0xFE0F);\n\t\t\tif (pos > 0 && cps[pos - 1] == 0xFE0F) pos--; // consume optional FE0F\n\t\t}\n\t\tif (node.valid) { // this is a valid emoji (so far)\n\t\t\temoji = stack.slice(); // copy stack\n\t\t\tif (node.valid == 2) emoji.splice(1, 1); // delete FE0F at position 1 (RGI ZWJ don't follow spec!)\n\t\t\tif (eaten) eaten.push(...cps.slice(pos).reverse()); // copy input (if needed)\n\t\t\tcps.length = pos; // truncate\n\t\t}\n\t}\n\treturn emoji;\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { decode } from \"@ethersproject/base64\";\n\nimport {read_compressed_payload} from './decoder.js';\n\nexport function getData(): () => number {\n    return read_compressed_payload(decode(''));\n}\n\n","import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { ens_normalize } from \"./ens-normalize/lib\";\n\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\n\nfunction checkComponent(comp: Uint8Array): Uint8Array {\n    if (comp.length === 0) { throw new Error(\"invalid ENS name; empty component\"); }\n    return comp;\n}\n\nfunction ensNameSplit(name: string): Array<Uint8Array> {\n    const bytes = toUtf8Bytes(ens_normalize(name));\n    const comps: Array<Uint8Array> = [ ];\n\n    if (name.length === 0) { return comps; }\n\n    let last = 0;\n    for (let i = 0; i < bytes.length; i++) {\n        const d = bytes[i];\n\n        // A separator (i.e. \".\"); copy this component\n        if (d === 0x2e) {\n            comps.push(checkComponent(bytes.slice(last, i)));\n            last = i + 1;\n        }\n    }\n\n    // There was a stray separator at the end of the name\n    if (last >= bytes.length) { throw new Error(\"invalid ENS name; empty component\"); }\n\n    comps.push(checkComponent(bytes.slice(last)));\n    return comps;\n}\n\nexport function ensNormalize(name: string): string {\n    return ensNameSplit(name).map((comp) => toUtf8String(comp)).join(\".\");\n}\n\nexport function isValidName(name: string): boolean {\n    try {\n        return (ensNameSplit(name).length !== 0);\n    } catch (error) { }\n    return false;\n}\n\nexport function namehash(name: string): string {\n    /* istanbul ignore if */\n    if (typeof(name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n\n    let result: string | Uint8Array = Zeros;\n\n    const comps = ensNameSplit(name);\n    while (comps.length) {\n        result = keccak256(concat([result, keccak256(comps.pop())]));\n    }\n\n    return hexlify(result);\n}\n\nexport function dnsEncode(name: string): string {\n    return hexlify(concat(ensNameSplit(name).map((comp) => {\n        // DNS does not allow components over 63 bytes in length\n        if (comp.length > 63) {\n            throw new Error(\"invalid DNS encoded entry; length exceeds 63 bytes\");\n        }\n\n        const bytes = new Uint8Array(comp.length + 1);\n        bytes.set(comp, 1);\n        bytes[0] = bytes.length - 1;\n        return bytes;\n\n    }))) + \"00\";\n}\n","\"use strict\";\n\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { SupportedAlgorithm } from \"./types\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function ripemd160(data: BytesLike): string {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha256(data: BytesLike): string {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha512(data: BytesLike): string {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function computeHmac(algorithm: SupportedAlgorithm, key: BytesLike, data: BytesLike): string {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n\n    return \"0x\" + hash.hmac((<any>hash)[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n\n","export const version = \"sha2/5.7.0\";\n","export const version = \"web/5.7.0\";\n","\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport type { GetUrlResponse, Options } from \"./types\";\n\nexport { GetUrlResponse, Options };\n\nexport async function getUrl(href: string, options?: Options): Promise<GetUrlResponse> {\n    if (options == null) { options = { }; }\n\n    const request: RequestInit = {\n        method: (options.method || \"GET\"),\n        headers: (options.headers || { }),\n        body: (options.body || undefined),\n    };\n\n    if (options.skipFetchSetup !== true) {\n        request.mode = <RequestMode>\"cors\";              // no-cors, cors, *same-origin\n        request.cache = <RequestCache>\"no-cache\";        // *default, no-cache, reload, force-cache, only-if-cached\n        request.credentials = <RequestCredentials>\"same-origin\";  // include, *same-origin, omit\n        request.redirect = <RequestRedirect>\"follow\";    // manual, *follow, error\n        request.referrer = \"client\";                     // no-referrer, *client\n    };\n\n    if (options.fetchOptions != null) {\n        const opts = options.fetchOptions;\n        if (opts.mode) { request.mode = <RequestMode>(opts.mode); }\n        if (opts.cache) { request.cache = <RequestCache>(opts.cache); }\n        if (opts.credentials) { request.credentials = <RequestCredentials>(opts.credentials); }\n        if (opts.redirect) { request.redirect = <RequestRedirect>(opts.redirect); }\n        if (opts.referrer) { request.referrer = opts.referrer; }\n    }\n\n    const response = await fetch(href, request);\n    const body = await response.arrayBuffer();\n\n    const headers: { [ name: string ]: string } = { };\n    if (response.headers.forEach) {\n        response.headers.forEach((value, key) => {\n            headers[key.toLowerCase()] = value;\n        });\n    } else {\n        (<() => Array<string>>((<any>(response.headers)).keys))().forEach((key) => {\n            headers[key.toLowerCase()] = response.headers.get(key);\n        });\n    }\n\n    return {\n        headers: headers,\n        statusCode: response.status,\n        statusMessage: response.statusText,\n        body: arrayify(new Uint8Array(body)),\n    }\n}\n","\"use strict\";\n\nimport { decode as base64Decode, encode as base64Encode } from \"@ethersproject/base64\";\nimport { hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { getUrl, GetUrlResponse, Options } from \"./geturl\";\n\nfunction staller(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\nfunction bodyify(value: any, type: string): string {\n    if (value == null) { return null; }\n\n    if (typeof(value) === \"string\") { return value; }\n\n    if (isBytesLike(value)) {\n        if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n                return toUtf8String(value);\n            } catch (error) { };\n        }\n        return hexlify(value);\n    }\n\n    return value;\n}\n\n// Exported Types\nexport type ConnectionInfo = {\n    url: string,\n    headers?: { [key: string]: string | number }\n\n    user?: string,\n    password?: string,\n\n    allowInsecureAuthentication?: boolean,\n    allowGzip?: boolean,\n\n    throttleLimit?: number,\n    throttleSlotInterval?: number;\n    throttleCallback?: (attempt: number, url: string) => Promise<boolean>,\n\n    skipFetchSetup?: boolean;\n    fetchOptions?: Record<string, string>;\n    errorPassThrough?: boolean;\n\n    timeout?: number,\n};\n\nexport interface OnceBlockable {\n    once(eventName: \"block\", handler: () => void): void;\n}\n\nexport interface OncePollable {\n    once(eventName: \"poll\", handler: () => void): void;\n}\n\nexport type PollOptions = {\n    timeout?: number,\n    floor?: number,\n    ceiling?: number,\n    interval?: number,\n    retryLimit?: number,\n    onceBlock?: OnceBlockable\n    oncePoll?: OncePollable\n};\n\nexport type FetchJsonResponse = {\n    statusCode: number;\n    headers: { [ header: string ]: string };\n};\n\n\ntype Header = { key: string, value: string };\n\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nexport function _fetchData<T = Uint8Array>(connection: string | ConnectionInfo, body?: Uint8Array, processFunc?: (value: Uint8Array, response: FetchJsonResponse) => T): Promise<T> {\n\n    // How many times to retry in the event of a throttle\n    const attemptLimit = (typeof(connection) === \"object\" && connection.throttleLimit != null) ? connection.throttleLimit: 12;\n    logger.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0),\n        \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n\n    const throttleCallback = ((typeof(connection) === \"object\") ? connection.throttleCallback: null);\n    const throttleSlotInterval = ((typeof(connection) === \"object\" && typeof(connection.throttleSlotInterval) === \"number\") ? connection.throttleSlotInterval: 100);\n    logger.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0),\n        \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n\n    const errorPassThrough = ((typeof(connection) === \"object\") ? !!(connection.errorPassThrough): false);\n\n    const headers: { [key: string]: Header } = { };\n\n    let url: string = null;\n\n    // @TODO: Allow ConnectionInfo to override some of these values\n    const options: Options = {\n        method: \"GET\",\n    };\n\n    let allow304 = false;\n\n    let timeout = 2 * 60 * 1000;\n\n    if (typeof(connection) === \"string\") {\n        url = connection;\n\n    } else if (typeof(connection) === \"object\") {\n        if (connection == null || connection.url == null) {\n            logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n        }\n\n        url = connection.url;\n\n        if (typeof(connection.timeout) === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n\n        if (connection.headers) {\n            for (const key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n                if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                    allow304 = true;\n                }\n            }\n        }\n\n        options.allowGzip = !!connection.allowGzip;\n\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n                logger.throwError(\n                    \"basic authentication requires a secure https url\",\n                    Logger.errors.INVALID_ARGUMENT,\n                    { argument: \"url\", url: url, user: connection.user, password: \"[REDACTED]\" }\n                );\n            }\n\n            const authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n                key: \"Authorization\",\n                value: \"Basic \" + base64Encode(toUtf8Bytes(authorization))\n            };\n        }\n\n        if (connection.skipFetchSetup != null) {\n            options.skipFetchSetup = !!connection.skipFetchSetup;\n        }\n\n        if (connection.fetchOptions != null) {\n            options.fetchOptions = shallowCopy(connection.fetchOptions);\n        }\n    }\n\n    const reData = new RegExp(\"^data:([a-z0-9-]+/[a-z0-9-]+);base64,(.*)$\", \"i\");\n    const dataMatch = ((url) ? url.match(reData): null);\n    if (dataMatch) {\n        try {\n            const response = {\n                statusCode: 200,\n                statusMessage: \"OK\",\n                headers: { \"content-type\": dataMatch[1] },\n                body: base64Decode(dataMatch[2])\n            };\n\n            let result: T = <T><unknown>response.body;\n            if (processFunc) {\n                result = processFunc(response.body, response);\n            }\n            return Promise.resolve(<T><unknown>result);\n\n        } catch (error) {\n            logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                body: bodyify(dataMatch[1], dataMatch[2]),\n                error: error,\n                requestBody: null,\n                requestMethod: \"GET\",\n                url: url\n            });\n        }\n    }\n\n    if (body) {\n        options.method = \"POST\";\n        options.body = body;\n        if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n        }\n        if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n        }\n    }\n\n    const flatHeaders: { [ key: string ]: string } = { };\n    Object.keys(headers).forEach((key) => {\n        const header = headers[key];\n        flatHeaders[header.key] = header.value;\n    });\n    options.headers = flatHeaders;\n\n    const runningTimeout = (function() {\n        let timer: NodeJS.Timer = null;\n        const promise: Promise<never> = new Promise(function(resolve, reject) {\n            if (timeout) {\n                timer = setTimeout(() => {\n                    if (timer == null) { return; }\n                    timer = null;\n\n                    reject(logger.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        timeout: timeout,\n                        url: url\n                    }));\n                }, timeout);\n            }\n        });\n\n        const cancel = function() {\n            if (timer == null) { return; }\n            clearTimeout(timer);\n            timer = null;\n        }\n\n        return { promise, cancel };\n    })();\n\n    const runningFetch = (async function() {\n\n        for (let attempt = 0; attempt < attemptLimit; attempt++) {\n            let response: GetUrlResponse = null;\n\n            try {\n                response = await getUrl(url, options);\n\n                if (attempt < attemptLimit) {\n                    if (response.statusCode === 301 || response.statusCode === 302) {\n                        // Redirection; for now we only support absolute locataions\n                        const location = response.headers.location || \"\";\n                        if (options.method === \"GET\" && location.match(/^https:/)) {\n                            url = response.headers.location;\n                            continue;\n                        }\n\n                    } else if (response.statusCode === 429) {\n                        // Exponential back-off throttling\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            let stall = 0;\n\n                            const retryAfter = response.headers[\"retry-after\"];\n                            if (typeof(retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                                stall = parseInt(retryAfter) * 1000;\n                            } else {\n                                stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            }\n\n                            //console.log(\"Stalling 429\");\n                            await staller(stall);\n                            continue;\n                        }\n                    }\n                }\n\n            } catch (error) {\n                response = (<any>error).response;\n                if (response == null) {\n                    runningTimeout.cancel();\n                    logger.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        serverError: error,\n                        url: url\n                    });\n                }\n            }\n\n\n            let body = response.body;\n\n            if (allow304 && response.statusCode === 304) {\n                body = null;\n            } else if (!errorPassThrough && (response.statusCode < 200 || response.statusCode >= 300)) {\n                runningTimeout.cancel();\n                logger.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n                    status: response.statusCode,\n                    headers: response.headers,\n                    body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                    requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                    requestMethod: options.method,\n                    url: url\n                });\n            }\n\n            if (processFunc) {\n                try {\n                    const result = await processFunc(body, response);\n                    runningTimeout.cancel();\n                    return result;\n\n                } catch (error) {\n                    // Allow the processFunc to trigger a throttle\n                    if (error.throttleRetry && attempt < attemptLimit) {\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            //console.log(\"Stalling callback\");\n                            await staller(timeout);\n                            continue;\n                        }\n                    }\n\n                    runningTimeout.cancel();\n                    logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                        body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                        error: error,\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        url: url\n                    });\n                }\n            }\n\n            runningTimeout.cancel();\n\n            // If we had a processFunc, it either returned a T or threw above.\n            // The \"body\" is now a Uint8Array.\n            return <T>(<unknown>body);\n        }\n\n        return logger.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n            requestMethod: options.method,\n            url: url\n        });\n    })();\n\n    return Promise.race([ runningTimeout.promise, runningFetch ]);\n}\n\nexport function fetchJson(connection: string | ConnectionInfo, json?: string, processFunc?: (value: any, response: FetchJsonResponse) => any): Promise<any> {\n    let processJsonFunc = (value: Uint8Array, response: FetchJsonResponse) => {\n        let result: any = null;\n        if (value != null) {\n            try {\n                result = JSON.parse(toUtf8String(value));\n            } catch (error) {\n                logger.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n                    body: value,\n                    error: error\n                });\n            }\n        }\n\n        if (processFunc) {\n            result = processFunc(result, response);\n        }\n\n        return result;\n    }\n\n    // If we have json to send, we must\n    // - add content-type of application/json (unless already overridden)\n    // - convert the json to bytes\n    let body: Uint8Array = null;\n    if (json != null) {\n        body = toUtf8Bytes(json);\n\n        // Create a connection with the content-type set for JSON\n        const updated: ConnectionInfo = (typeof(connection) === \"string\") ? ({ url: connection }): shallowCopy(connection);\n        if (updated.headers) {\n            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === \"content-type\")).length) !== 0;\n            if (!hasContentType) {\n                updated.headers = shallowCopy(updated.headers);\n                updated.headers[\"content-type\"] = \"application/json\";\n            }\n        } else {\n            updated.headers = { \"content-type\": \"application/json\" };\n        }\n        connection = updated;\n    }\n\n    return _fetchData<any>(connection, body, processJsonFunc);\n}\n\nexport function poll<T>(func: () => Promise<T>, options?: PollOptions): Promise<T> {\n    if (!options) { options = {}; }\n    options = shallowCopy(options);\n    if (options.floor == null) { options.floor = 0; }\n    if (options.ceiling == null) { options.ceiling = 10000; }\n    if (options.interval == null) { options.interval = 250; }\n\n    return new Promise(function(resolve, reject) {\n\n        let timer: NodeJS.Timer = null;\n        let done: boolean = false;\n\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        const cancel = (): boolean => {\n            if (done) { return false; }\n            done = true;\n            if (timer) { clearTimeout(timer); }\n            return true;\n        };\n\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                if (cancel()) { reject(new Error(\"timeout\")); }\n            }, options.timeout)\n        }\n\n        const retryLimit = options.retryLimit;\n\n        let attempt = 0;\n        function check() {\n            return func().then(function(result) {\n\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) { resolve(result); }\n\n                } else if (options.oncePoll) {\n                    options.oncePoll.once(\"poll\", check);\n\n                } else if (options.onceBlock) {\n                    options.onceBlock.once(\"block\", check);\n\n                // Otherwise, exponential back-off (up to 10s) our next request\n                } else if (!done) {\n                    attempt++;\n                    if (attempt > retryLimit) {\n                        if (cancel()) { reject(new Error(\"retry limit reached\")); }\n                        return;\n                    }\n\n                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) { timeout = options.floor; }\n                    if (timeout > options.ceiling) { timeout = options.ceiling; }\n\n                    setTimeout(check, timeout);\n                }\n\n                return null;\n            }, function(error) {\n                if (cancel()) { reject(error); }\n            });\n        }\n        check();\n    });\n}\n\n","export const version = \"providers/5.7.0\";\n","\"use strict\";\n\n//See: https://github.com/ethereum/wiki/wiki/RLP\n\nimport { arrayify, BytesLike, hexlify, isBytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction arrayifyInteger(value: number): Array<number> {\n    const result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\n\nfunction unarrayifyInteger(data: Uint8Array, offset: number, length: number): number {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\n\nfunction _encode(object: Array<any> | string): Array<number> {\n    if (Array.isArray(object)) {\n        let payload: Array<number> = [];\n        object.forEach(function(child) {\n            payload = payload.concat(_encode(child));\n        });\n\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length)\n            return payload;\n        }\n\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n\n        return length.concat(payload);\n\n    }\n\n    if (!isBytesLike(object)) {\n        logger.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n    }\n\n    const data: Array<number> = Array.prototype.slice.call(arrayify(object));\n\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n\n    } else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n\n    return length.concat(data);\n}\n\nexport function encode(object: any): string {\n    return hexlify(_encode(object));\n}\n\ntype Decoded = {\n    result: any;\n    consumed: number;\n};\n\nfunction _decodeChildren(data: Uint8Array, offset: number, childOffset: number, length: number): Decoded {\n    const result = [];\n\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n\n        result.push(decoded.result);\n\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            logger.throwError(\"child data too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n    }\n\n    return {consumed: (1 + length), result: result};\n}\n\n// returns { consumed: number, result: Object }\nfunction _decode(data: Uint8Array, offset: number): { consumed: number, result: any } {\n    if (data.length === 0) {\n        logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, { });\n    }\n\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data short segment too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data long segment too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n\n    } else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        return _decodeChildren(data, offset, offset + 1, length);\n\n    } else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result }\n\n    } else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result }\n    }\n    return { consumed: 1, result: hexlify(data[offset]) };\n}\n\nexport function decode(data: BytesLike): any {\n    const bytes = arrayify(data);\n    const decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        logger.throwArgumentError(\"invalid rlp data\", \"data\", data);\n    }\n    return decoded.result;\n}\n\n","export const version = \"rlp/5.7.0\";\n","export const version = \"address/5.7.0\";\n","\"use strict\";\n\nimport { arrayify, BytesLike, concat, hexDataLength, hexDataSlice, isHexString, stripZeros } from \"@ethersproject/bytes\";\nimport { BigNumber, BigNumberish, _base16To36, _base36To16 } from \"@ethersproject/bignumber\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { encode } from \"@ethersproject/rlp\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction getChecksumAddress(address: string): string {\n    if (!isHexString(address, 20)) {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    address = address.toLowerCase();\n\n    const chars = address.substring(2).split(\"\");\n\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n\n    const hashed = arrayify(keccak256(expanded));\n\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n\n    return \"0x\" + chars.join(\"\");\n}\n\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER: number = 0x1fffffffffffff;\n\nfunction log10(x: number): number {\n    if (Math.log10) { return Math.log10(x); }\n    return Math.log(x) / Math.LN10;\n}\n\n\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n\n// Create lookup table\nconst ibanLookup: { [character: string]: string } = { };\nfor (let i = 0; i < 10; i++) { ibanLookup[String(i)] = String(i); }\nfor (let i = 0; i < 26; i++) { ibanLookup[String.fromCharCode(65 + i)] = String(10 + i); }\n\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\n\nfunction ibanChecksum(address: string): string {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits){\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) { checksum = \"0\" + checksum; }\n\n    return checksum;\n};\n\nexport function getAddress(address: string): string {\n    let result = null;\n\n    if (typeof(address) !== \"string\") {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") { address = \"0x\" + address; }\n\n        result = getChecksumAddress(address);\n\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n\n    // Maybe ICAP? (we only support direct mode)\n    } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n\n        result = _base36To16(address.substring(4));\n        while (result.length < 40) { result = \"0\" + result; }\n        result = getChecksumAddress(\"0x\" + result);\n\n    } else {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    return result;\n}\n\nexport function isAddress(address: string): boolean {\n    try {\n        getAddress(address);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function getIcapAddress(address: string): string {\n    let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    while (base36.length < 30) { base36 = \"0\" + base36; }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nexport function getContractAddress(transaction: { from: string, nonce: BigNumberish }) {\n    let from: string = null;\n    try {\n        from = getAddress(transaction.from);\n    } catch (error) {\n        logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n\n    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n\n    return getAddress(hexDataSlice(keccak256(encode([ from, nonce ])), 12));\n}\n\nexport function getCreate2Address(from: string, salt: BytesLike, initCodeHash: BytesLike): string {\n    if (hexDataLength(salt) !== 32) {\n        logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n    }\n    if (hexDataLength(initCodeHash) !== 32) {\n        logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n    }\n    return getAddress(hexDataSlice(keccak256(concat([ \"0xff\", getAddress(from), salt, initCodeHash ])), 12))\n}\n","export const AddressZero = \"0x0000000000000000000000000000000000000000\";\n\n","import { BigNumber } from \"@ethersproject/bignumber\";\n\nconst NegativeOne: BigNumber = (/*#__PURE__*/BigNumber.from(-1));\nconst Zero: BigNumber = (/*#__PURE__*/BigNumber.from(0));\nconst One: BigNumber = (/*#__PURE__*/BigNumber.from(1));\nconst Two: BigNumber = (/*#__PURE__*/BigNumber.from(2));\nconst WeiPerEther: BigNumber = (/*#__PURE__*/BigNumber.from(\"1000000000000000000\"));\nconst MaxUint256: BigNumber = (/*#__PURE__*/BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\nconst MinInt256: BigNumber = (/*#__PURE__*/BigNumber.from(\"-0x8000000000000000000000000000000000000000000000000000000000000000\"));\nconst MaxInt256: BigNumber = (/*#__PURE__*/BigNumber.from(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\nexport {\n    NegativeOne,\n    Zero,\n    One,\n    Two,\n    WeiPerEther,\n    MaxUint256,\n    MinInt256,\n    MaxInt256,\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","import _ec from \"elliptic\";\nvar EC = _ec.ec;\nexport { EC };\n//# sourceMappingURL=elliptic.js.map","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","\"use strict\";\n\nimport { EC } from \"./elliptic\";\n\nimport { arrayify, BytesLike, hexDataLength, hexlify, hexZeroPad, Signature, SignatureLike, splitSignature } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nlet _curve: EC = null\nfunction getCurve() {\n    if (!_curve) {\n        _curve = new EC(\"secp256k1\");\n    }\n    return _curve;\n}\n\nexport class SigningKey {\n\n    readonly curve: string;\n\n    readonly privateKey: string;\n    readonly publicKey: string;\n    readonly compressedPublicKey: string;\n\n    //readonly address: string;\n\n    readonly _isSigningKey: boolean;\n\n    constructor(privateKey: BytesLike) {\n        defineReadOnly(this, \"curve\", \"secp256k1\");\n\n        defineReadOnly(this, \"privateKey\", hexlify(privateKey));\n        if (hexDataLength(this.privateKey) !== 32) {\n            logger.throwArgumentError(\"invalid private key\", \"privateKey\", \"[[ REDACTED ]]\");\n        }\n\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n\n        defineReadOnly(this, \"publicKey\", \"0x\" + keyPair.getPublic(false, \"hex\"));\n        defineReadOnly(this, \"compressedPublicKey\", \"0x\" + keyPair.getPublic(true, \"hex\"));\n\n        defineReadOnly(this, \"_isSigningKey\", true);\n    }\n\n    _addPoint(other: BytesLike): string {\n        const p0 =  getCurve().keyFromPublic(arrayify(this.publicKey));\n        const p1 =  getCurve().keyFromPublic(arrayify(other));\n        return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n    }\n\n    signDigest(digest: BytesLike): Signature {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const digestBytes = arrayify(digest);\n        if (digestBytes.length !== 32) {\n            logger.throwArgumentError(\"bad digest length\", \"digest\", digest);\n        }\n        const signature = keyPair.sign(digestBytes, { canonical: true });\n        return splitSignature({\n            recoveryParam: signature.recoveryParam,\n            r: hexZeroPad(\"0x\" + signature.r.toString(16), 32),\n            s: hexZeroPad(\"0x\" + signature.s.toString(16), 32),\n        })\n    }\n\n    computeSharedSecret(otherKey: BytesLike): string {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));\n        return hexZeroPad(\"0x\" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n    }\n\n    static isSigningKey(value: any): value is SigningKey {\n        return !!(value && value._isSigningKey);\n    }\n}\n\nexport function recoverPublicKey(digest: BytesLike, signature: SignatureLike): string {\n    const sig = splitSignature(signature);\n    const rs = { r: arrayify(sig.r), s: arrayify(sig.s) };\n    return \"0x\" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode(\"hex\", false);\n}\n\nexport function computePublicKey(key: BytesLike, compressed?: boolean): string {\n    const bytes = arrayify(key);\n\n    if (bytes.length === 32) {\n        const signingKey = new SigningKey(bytes);\n        if (compressed) {\n            return \"0x\" + getCurve().keyFromPrivate(bytes).getPublic(true, \"hex\");\n        }\n        return signingKey.publicKey;\n\n    } else if (bytes.length === 33) {\n        if (compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(false, \"hex\");\n\n    } else if (bytes.length === 65) {\n        if (!compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(true, \"hex\");\n    }\n\n    return logger.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\n\n","export const version = \"signing-key/5.7.0\";\n","export const version = \"transactions/5.7.0\";\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, DataOptions, hexConcat, hexDataLength, hexDataSlice, hexlify, hexZeroPad, isBytesLike, SignatureLike, splitSignature, stripZeros, } from \"@ethersproject/bytes\";\nimport { Zero } from \"@ethersproject/constants\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { checkProperties } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey } from \"@ethersproject/signing-key\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type AccessList = Array<{ address: string, storageKeys: Array<string> }>;\n\n// Input allows flexibility in describing an access list\nexport type AccessListish = AccessList |\n                            Array<[ string, Array<string> ]> |\n                            Record<string, Array<string>>;\n\nexport enum TransactionTypes {\n    legacy = 0,\n    eip2930 = 1,\n    eip1559 = 2,\n};\n\nexport type UnsignedTransaction = {\n    to?: string;\n    nonce?: number;\n\n    gasLimit?: BigNumberish;\n    gasPrice?: BigNumberish;\n\n    data?: BytesLike;\n    value?: BigNumberish;\n    chainId?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessListish;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n}\n\nexport interface Transaction {\n    hash?: string;\n\n    to?: string;\n    from?: string;\n    nonce: number;\n\n    gasLimit: BigNumber;\n    gasPrice?: BigNumber;\n\n    data: string;\n    value: BigNumber;\n    chainId: number;\n\n    r?: string;\n    s?: string;\n    v?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessList;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumber;\n    maxFeePerGas?: BigNumber;\n}\n\n///////////////////////////////\n\nfunction handleAddress(value: string): string {\n    if (value === \"0x\") { return null; }\n    return getAddress(value);\n}\n\nfunction handleNumber(value: string): BigNumber {\n    if (value === \"0x\") { return Zero; }\n    return BigNumber.from(value);\n}\n\n// Legacy Transaction Fields\nconst transactionFields = [\n    { name: \"nonce\",    maxLength: 32, numeric: true },\n    { name: \"gasPrice\", maxLength: 32, numeric: true },\n    { name: \"gasLimit\", maxLength: 32, numeric: true },\n    { name: \"to\",          length: 20 },\n    { name: \"value\",    maxLength: 32, numeric: true },\n    { name: \"data\" },\n];\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, type: true, value: true\n}\n\nexport function computeAddress(key: BytesLike | string): string {\n    const publicKey = computePublicKey(key);\n    return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\n\nexport function recoverAddress(digest: BytesLike, signature: SignatureLike): string {\n    return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\n\nfunction formatNumber(value: BigNumberish, name: string): Uint8Array {\n    const result = stripZeros(BigNumber.from(value).toHexString());\n    if (result.length > 32) {\n        logger.throwArgumentError(\"invalid length for \" + name, (\"transaction:\" + name), value);\n    }\n    return result;\n}\n\nfunction accessSetify(addr: string, storageKeys: Array<string>): { address: string,storageKeys: Array<string> } {\n    return {\n        address: getAddress(addr),\n        storageKeys: (storageKeys || []).map((storageKey, index) => {\n            if (hexDataLength(storageKey) !== 32) {\n                logger.throwArgumentError(\"invalid access list storageKey\", `accessList[${ addr }:${ index }]`, storageKey)\n            }\n            return storageKey.toLowerCase();\n        })\n    };\n}\n\nexport function accessListify(value: AccessListish): AccessList {\n    if (Array.isArray(value)) {\n        return (<Array<[ string, Array<string>] | { address: string, storageKeys: Array<string>}>>value).map((set, index) => {\n            if (Array.isArray(set)) {\n                if (set.length > 2) {\n                    logger.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", `value[${ index }]`, set);\n                }\n                return accessSetify(set[0], set[1])\n            }\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n\n    const result: Array<{ address: string, storageKeys: Array<string> }> = Object.keys(value).map((addr) => {\n        const storageKeys: Record<string, true> = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, <Record<string, true>>{ });\n        return accessSetify(addr, Object.keys(storageKeys).sort())\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\n\nfunction formatAccessList(value: AccessListish): Array<[ string, Array<string> ]> {\n    return accessListify(value).map((set) => [ set.address, set.storageKeys ]);\n}\n\nfunction _serializeEip1559(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // If there is an explicit gasPrice, make sure it matches the\n    // EIP-1559 fees; otherwise they may not understand what they\n    // think they are setting in terms of fee.\n    if (transaction.gasPrice != null) {\n        const gasPrice = BigNumber.from(transaction.gasPrice);\n        const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);\n        if (!gasPrice.eq(maxFeePerGas)) {\n            logger.throwArgumentError(\"mismatch EIP-1559 gasPrice != maxFeePerGas\", \"tx\", {\n                gasPrice, maxFeePerGas\n            });\n        }\n    }\n\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(transaction.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x02\", RLP.encode(fields)]);\n}\n\nfunction _serializeEip2930(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.gasPrice || 0, \"gasPrice\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x01\", RLP.encode(fields)]);\n}\n\n// Legacy Transactions and EIP-155\nfunction _serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    checkProperties(transaction, allowedTransactionKeys);\n\n    const raw: Array<string | Uint8Array> = [];\n\n    transactionFields.forEach(function(fieldInfo) {\n        let value = (<any>transaction)[fieldInfo.name] || ([]);\n        const options: DataOptions = { };\n        if (fieldInfo.numeric) { options.hexPad = \"left\"; }\n        value = arrayify(hexlify(value, options));\n\n        // Fixed-width field\n        if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n            logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n        }\n\n        // Variable-width (with a maximum)\n        if (fieldInfo.maxLength) {\n            value = stripZeros(value);\n            if (value.length > fieldInfo.maxLength) {\n                logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value );\n            }\n        }\n\n        raw.push(hexlify(value));\n    });\n\n    let chainId = 0;\n    if (transaction.chainId != null) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = transaction.chainId;\n\n        if (typeof(chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n        }\n\n    } else if (signature && !isBytesLike(signature) && signature.v > 28) {\n        // No chainId provided, but the signature is signing with EIP-155; derive chainId\n        chainId = Math.floor((signature.v - 35) / 2);\n    }\n\n    // We have an EIP-155 transaction (chainId was specified and non-zero)\n    if (chainId !== 0) {\n        raw.push(hexlify(chainId)); // @TODO: hexValue?\n        raw.push(\"0x\");\n        raw.push(\"0x\");\n    }\n\n    // Requesting an unsigned transaction\n    if (!signature) {\n        return RLP.encode(raw);\n    }\n\n    // The splitSignature will ensure the transaction has a recoveryParam in the\n    // case that the signTransaction function only adds a v.\n    const sig = splitSignature(signature);\n\n    // We pushed a chainId and null r, s on for hashing only; remove those\n    let v = 27 + sig.recoveryParam\n    if (chainId !== 0) {\n        raw.pop();\n        raw.pop();\n        raw.pop();\n        v += chainId * 2 + 8;\n\n        // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n        if (sig.v > 28 && sig.v !== v) {\n             logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n        }\n    } else if (sig.v !== v) {\n         logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n\n    raw.push(hexlify(v));\n    raw.push(stripZeros(arrayify(sig.r)));\n    raw.push(stripZeros(arrayify(sig.s)));\n\n    return RLP.encode(raw);\n}\n\nexport function serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // Legacy and EIP-155 Transactions\n    if (transaction.type == null || transaction.type === 0) {\n        if (transaction.accessList != null) {\n            logger.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\", \"transaction\", transaction);\n        }\n        return _serialize(transaction, signature);\n    }\n\n    // Typed Transactions (EIP-2718)\n    switch (transaction.type) {\n        case 1:\n            return _serializeEip2930(transaction, signature);\n        case 2:\n            return _serializeEip1559(transaction, signature);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ transaction.type }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"serializeTransaction\",\n        transactionType: transaction.type\n    });\n}\n\nfunction _parseEipSignature(tx: Transaction, fields: Array<string>, serialize: (tx: UnsignedTransaction) => string): void {\n    try {\n        const recid = handleNumber(fields[0]).toNumber();\n        if (recid !== 0 && recid !== 1) { throw new Error(\"bad recid\"); }\n        tx.v = recid;\n    } catch (error) {\n        logger.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", fields[0]);\n    }\n\n    tx.r = hexZeroPad(fields[1], 32);\n    tx.s = hexZeroPad(fields[2], 32);\n\n    try {\n        const digest = keccak256(serialize(tx));\n        tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });\n    } catch (error) { }\n}\n\nfunction _parseEip1559(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 9 && transaction.length !== 12) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 2\", \"payload\", hexlify(payload));\n    }\n\n    const maxPriorityFeePerGas = handleNumber(transaction[2]);\n    const maxFeePerGas = handleNumber(transaction[3]);\n    const tx: Transaction = {\n        type:                  2,\n        chainId:               handleNumber(transaction[0]).toNumber(),\n        nonce:                 handleNumber(transaction[1]).toNumber(),\n        maxPriorityFeePerGas:  maxPriorityFeePerGas,\n        maxFeePerGas:          maxFeePerGas,\n        gasPrice:              null,\n        gasLimit:              handleNumber(transaction[4]),\n        to:                    handleAddress(transaction[5]),\n        value:                 handleNumber(transaction[6]),\n        data:                  transaction[7],\n        accessList:            accessListify(transaction[8]),\n    };\n\n    // Unsigned EIP-1559 Transaction\n    if (transaction.length === 9) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);\n\n    return tx;\n}\n\nfunction _parseEip2930(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 8 && transaction.length !== 11) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", hexlify(payload));\n    }\n\n    const tx: Transaction = {\n        type:       1,\n        chainId:    handleNumber(transaction[0]).toNumber(),\n        nonce:      handleNumber(transaction[1]).toNumber(),\n        gasPrice:   handleNumber(transaction[2]),\n        gasLimit:   handleNumber(transaction[3]),\n        to:         handleAddress(transaction[4]),\n        value:      handleNumber(transaction[5]),\n        data:       transaction[6],\n        accessList: accessListify(transaction[7])\n    };\n\n    // Unsigned EIP-2930 Transaction\n    if (transaction.length === 8) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);\n\n    return tx;\n}\n\n// Legacy Transactions and EIP-155\nfunction _parse(rawTransaction: Uint8Array): Transaction {\n    const transaction = RLP.decode(rawTransaction);\n\n    if (transaction.length !== 9 && transaction.length !== 6) {\n        logger.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n    }\n\n    const tx: Transaction = {\n        nonce:    handleNumber(transaction[0]).toNumber(),\n        gasPrice: handleNumber(transaction[1]),\n        gasLimit: handleNumber(transaction[2]),\n        to:       handleAddress(transaction[3]),\n        value:    handleNumber(transaction[4]),\n        data:     transaction[5],\n        chainId:  0\n    };\n\n    // Legacy unsigned transaction\n    if (transaction.length === 6) { return tx; }\n\n    try {\n        tx.v = BigNumber.from(transaction[6]).toNumber();\n\n    } catch (error) {\n        // @TODO: What makes snese to do? The v is too big\n        return tx;\n    }\n\n    tx.r = hexZeroPad(transaction[7], 32);\n    tx.s = hexZeroPad(transaction[8], 32);\n\n    if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n        // EIP-155 unsigned transaction\n        tx.chainId = tx.v;\n        tx.v = 0;\n\n    } else {\n        // Signed Transaction\n\n        tx.chainId = Math.floor((tx.v - 35) / 2);\n        if (tx.chainId < 0) { tx.chainId = 0; }\n\n        let recoveryParam = tx.v - 27;\n\n        const raw = transaction.slice(0, 6);\n\n        if (tx.chainId !== 0) {\n            raw.push(hexlify(tx.chainId));\n            raw.push(\"0x\");\n            raw.push(\"0x\");\n            recoveryParam -= tx.chainId * 2 + 8;\n        }\n\n        const digest = keccak256(RLP.encode(raw));\n        try {\n            tx.from = recoverAddress(digest, { r: hexlify(tx.r), s: hexlify(tx.s), recoveryParam: recoveryParam });\n        } catch (error) { }\n\n        tx.hash = keccak256(rawTransaction);\n    }\n\n    tx.type = null;\n\n    return tx;\n}\n\n\nexport function parse(rawTransaction: BytesLike): Transaction {\n    const payload = arrayify(rawTransaction);\n\n    // Legacy and EIP-155 Transactions\n    if (payload[0] > 0x7f) { return _parse(payload); }\n\n    // Typed Transaction (EIP-2718)\n    switch (payload[0]) {\n        case 1:\n            return _parseEip2930(payload);\n        case 2:\n            return _parseEip1559(payload);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ payload[0] }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"parseTransaction\",\n        transactionType: payload[0]\n    });\n}\n\n","\"use strict\";\n\nimport { Block, TransactionReceipt, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexDataLength, hexDataSlice, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { AccessList, accessListify, parse as parseTransaction } from \"@ethersproject/transactions\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport type FormatFunc = (value: any) => any;\n\nexport type FormatFuncs = { [ key: string ]: FormatFunc };\n\nexport type Formats = {\n    transaction: FormatFuncs,\n    transactionRequest: FormatFuncs,\n    receipt: FormatFuncs,\n    receiptLog: FormatFuncs,\n    block: FormatFuncs,\n    blockWithTransactions: FormatFuncs,\n    filter: FormatFuncs,\n    filterLog: FormatFuncs,\n};\n\nexport class Formatter {\n    readonly formats: Formats;\n\n    constructor() {\n        this.formats = this.getDefaultFormats();\n    }\n\n    getDefaultFormats(): Formats {\n        const formats: Formats = <Formats>({ });\n\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const type = this.type.bind(this);\n\n        const strictData = (v: any) => { return this.data(v, true); };\n\n        formats.transaction = {\n            hash: hash,\n\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n\n            confirmations: Formatter.allowNull(number, null),\n\n            from: address,\n\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n\n            creates: Formatter.allowNull(address, null),\n\n            raw: Formatter.allowNull(data),\n        };\n\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),// @TODO: should this be data?\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n\n        formats.block = {\n            hash: Formatter.allowNull(hash),\n            parentHash: hash,\n            number: number,\n\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n\n            miner: Formatter.allowNull(address),\n            extraData: data,\n\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n\n            topics: Formatter.arrayOf(hash),\n\n            transactionHash: hash,\n            logIndex: number,\n        };\n\n        return formats;\n    }\n\n    accessList(accessList: Array<any>): AccessList {\n        return accessListify(accessList || []);\n    }\n\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number: any): number {\n        if (number === \"0x\") { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    type(number: any): number {\n        if (number === \"0x\" || number == null) { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    // Strict! Used on input.\n    bigNumber(value: any): BigNumber {\n        return BigNumber.from(value);\n    }\n\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value: any): boolean {\n        if (typeof(value) === \"boolean\") { return value; }\n        if (typeof(value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") { return true; }\n            if (value === \"false\") { return false; }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n\n    hex(value: any, strict?: boolean): string {\n        if (typeof(value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n            if (isHexString(value)) {\n               return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n\n    data(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n\n    // Requires an address\n    // Strict! Used on input.\n    address(value: any): string {\n        return getAddress(value);\n    }\n\n    callAddress(value: any): string {\n        if (!isHexString(value, 32)) { return null; }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null: address;\n    }\n\n    contractAddress(value: any): string {\n        return getContractAddress(value);\n    }\n\n    // Strict! Used on input.\n    blockTag(blockTag: any): string {\n        if (blockTag == null) { return \"latest\"; }\n\n        if (blockTag === \"earliest\") { return \"0x0\"; }\n\n        switch (blockTag) {\n            case \"earliest\": return \"0x0\";\n            case \"latest\": case \"pending\": case \"safe\": case \"finalized\":\n                return blockTag;\n        }\n\n        if (typeof(blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(<number | string>blockTag);\n        }\n\n        throw new Error(\"invalid blockTag\");\n    }\n\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value: any): number {\n        if (value == null) { return null; }\n\n        const v = BigNumber.from(value);\n\n        try {\n            return v.toNumber();\n        } catch (error) { }\n\n       return null;\n    }\n\n    uint256(value: any): string {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n\n    _block(value: any, format: any): Block {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        const difficulty = (value._difficulty != null) ? value._difficulty: value.difficulty;\n        const result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null: BigNumber.from(difficulty));\n        return result;\n    }\n\n    block(value: any): Block {\n        return this._block(value, this.formats.block);\n    }\n\n    blockWithTransactions(value: any): Block {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n\n    // Strict! Used on input.\n    transactionRequest(value: any): any {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n\n    transactionResponse(transaction: any): TransactionResponse {\n\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n\n        if ((transaction.type === 1 || transaction.type === 2)&& transaction.accessList == null) {\n            transaction.accessList = [ ];\n        }\n\n        const result: TransactionResponse = Formatter.check(this.formats.transaction, transaction);\n\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            result.chainId = chainId;\n\n        } else {\n            let chainId = transaction.networkId;\n\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            if (typeof(chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) { chainId = 0; }\n                chainId = parseInt(chainId);\n            }\n\n            if (typeof(chainId) !== \"number\") { chainId = 0; }\n\n            result.chainId = chainId;\n        }\n\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n\n        return result;\n    }\n\n    transaction(value: any): any {\n        return parseTransaction(value);\n    }\n\n    receiptLog(value: any): any {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n\n    receipt(value: any): TransactionReceipt {\n        const result: TransactionReceipt = Formatter.check(this.formats.receipt, value);\n\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                } else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            } else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n\n        return result;\n    }\n\n    topics(value: any): any {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n\n        } else if (value != null) {\n            return this.hash(value, true);\n        }\n\n        return null;\n    }\n\n    filter(value: any): any {\n        return Formatter.check(this.formats.filter, value);\n    }\n\n    filterLog(value: any): any {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n\n    static check(format: { [ name: string ]: FormatFunc }, object: any): any {\n        const result: any = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) { result[key] = value; }\n            } catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n\n    // if value is null-ish, nullValue is returned\n    static allowNull(format: FormatFunc, nullValue?: any): FormatFunc {\n        return (function(value: any) {\n            if (value == null) { return nullValue; }\n            return format(value);\n        });\n    }\n\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format: FormatFunc, replaceValue: any): FormatFunc {\n        return (function(value: any) {\n            if (!value) { return replaceValue; }\n            return format(value);\n        });\n    }\n\n    // Requires an Array satisfying check\n    static arrayOf(format: FormatFunc): FormatFunc {\n        return (function(array: any): Array<any> {\n            if (!Array.isArray(array)) { throw new Error(\"not an array\"); }\n\n            const result: any = [];\n\n            array.forEach(function(value) {\n                result.push(format(value));\n            });\n\n            return result;\n        });\n    }\n}\n\nexport interface CommunityResourcable {\n    isCommunityResource(): boolean;\n}\n\nexport function isCommunityResourcable(value: any): value is CommunityResourcable {\n    return (value && typeof(value.isCommunityResource) === \"function\");\n}\n\nexport function isCommunityResource(value: any): boolean {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n\n// Show the throttle message only once\nlet throttleMessage = false;\nexport function showThrottleMessage() {\n    if (throttleMessage) { return; }\n    throttleMessage = true;\n\n    console.log(\"========= NOTICE =========\")\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n\n","\"use strict\";\n\nimport {\n    Block, BlockTag, BlockWithTransactions, EventType, Filter, FilterByBlockHash, ForkEvent,\n    Listener, Log, Provider, TransactionReceipt, TransactionRequest, TransactionResponse\n} from \"@ethersproject/abstract-provider\";\nimport { encode as base64Encode } from \"@ethersproject/base64\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexConcat, hexDataLength, hexDataSlice, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { dnsEncode, namehash } from \"@ethersproject/hash\";\nimport { getNetwork, Network, Networkish } from \"@ethersproject/networks\";\nimport { Deferrable, defineReadOnly, getStatic, resolveProperties } from \"@ethersproject/properties\";\nimport { Transaction } from \"@ethersproject/transactions\";\nimport { sha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\n\nimport bech32 from \"bech32\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Formatter } from \"./formatter\";\n\nconst MAX_CCIP_REDIRECTS = 10;\n\n//////////////////////////////\n// Event Serializeing\n\nfunction checkTopic(topic: string): string {\n     if (topic == null) { return \"null\"; }\n     if (hexDataLength(topic) !== 32) {\n         logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n     }\n     return topic.toLowerCase();\n}\n\nfunction serializeTopics(topics: Array<string | Array<string>>): string {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) { topics.pop(); }\n\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n\n            // Only track unique OR-topics\n            const unique: { [ topic: string ]: boolean } = { }\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n\n            return sorted.join(\"|\");\n\n        } else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\n\nfunction deserializeTopics(data: string): Array<string | Array<string>> {\n    if (data === \"\") { return [ ]; }\n\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") { return [ ]; }\n\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null: topic);\n        });\n\n        return ((comps.length === 1) ? comps[0]: comps);\n    });\n}\n\nfunction getEventTag(eventName: EventType): string {\n    if (typeof(eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n\n    } else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n\n    } else if (ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n\n    } else if (eventName && typeof(eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n\n    throw new Error(\"invalid event - \" + eventName);\n}\n\n//////////////////////////////\n// Helper Object\n\nfunction getTime() {\n    return (new Date()).getTime();\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\n//////////////////////////////\n// Provider Object\n\n\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\n\nconst PollableEvents = [ \"block\", \"network\", \"pending\", \"poll\" ];\n\nexport class Event {\n    readonly listener: Listener;\n    readonly once: boolean;\n    readonly tag: string;\n\n    _lastBlockNumber: number\n    _inflight: boolean;\n\n    constructor(tag: string, listener: Listener, once: boolean) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n\n        this._lastBlockNumber = -2;\n        this._inflight = false;\n    }\n\n    get event(): EventType {\n        switch (this.type) {\n            case \"tx\":\n               return this.hash;\n            case \"filter\":\n               return this.filter;\n        }\n        return this.tag;\n    }\n\n    get type(): string {\n        return this.tag.split(\":\")[0]\n    }\n\n    get hash(): string {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") { return null; }\n        return comps[1];\n    }\n\n    get filter(): Filter {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") { return null; }\n        const address = comps[1];\n\n        const topics = deserializeTopics(comps[2]);\n        const filter: Filter = { };\n\n        if (topics.length > 0) { filter.topics = topics; }\n        if (address && address !== \"*\") { filter.address = address; }\n\n        return filter;\n    }\n\n    pollable(): boolean {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n\nexport interface EnsResolver {\n\n    // Name this Resolver is associated with\n    readonly name: string;\n\n    // The address of the resolver\n    readonly address: string;\n\n    // Multichain address resolution (also normal address resolution)\n    // See: https://eips.ethereum.org/EIPS/eip-2304\n    getAddress(coinType?: 60): Promise<null | string>\n\n    // Contenthash field\n    // See: https://eips.ethereum.org/EIPS/eip-1577\n    getContentHash(): Promise<null | string>;\n\n    // Storage of text records\n    // See: https://eips.ethereum.org/EIPS/eip-634\n    getText(key: string): Promise<null | string>;\n};\n\nexport interface EnsProvider {\n    resolveName(name: string): Promise<null | string>;\n    lookupAddress(address: string): Promise<null | string>;\n    getResolver(name: string): Promise<null | EnsResolver>;\n}\n\ntype CoinInfo = {\n    symbol: string,\n    ilk?: string,     // General family\n    prefix?: string,  // Bech32 prefix\n    p2pkh?: number,   // Pay-to-Public-Key-Hash Version\n    p2sh?: number,    // Pay-to-Script-Hash Version\n};\n\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos: { [ coinType: string ]: CoinInfo } = {\n    \"0\":   { symbol: \"btc\",  p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\":   { symbol: \"ltc\",  p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\":   { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\":  { symbol: \"eth\",  ilk: \"eth\" },\n    \"61\":  { symbol: \"etc\",  ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\n\nfunction bytes32ify(value: number): string {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data: Uint8Array): string {\n    return Base58.encode(concat([ data, hexDataSlice(sha256(sha256(data)), 0, 4) ]));\n}\n\nexport interface Avatar {\n    url: string;\n    linkage: Array<{ type: string, content: string }>;\n}\n\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\n\nfunction _parseString(result: string, start: number): null | string {\n    try {\n        return toUtf8String(_parseBytes(result, start));\n    } catch(error) { }\n    return null;\n}\n\nfunction _parseBytes(result: string, start: number): null | string {\n    if (result === \"0x\") { return null; }\n\n    const offset = BigNumber.from(hexDataSlice(result, start, start + 32)).toNumber();\n    const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n\n    return hexDataSlice(result, offset + 32, offset + 32 + length);\n}\n\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link: string): string {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    } else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    } else {\n        logger.throwArgumentError(\"unsupported IPFS format\", \"link\", link);\n    }\n\n    return `https:/\\/gateway.ipfs.io/ipfs/${ link }`;\n}\n\nfunction numPad(value: number): Uint8Array {\n    const result = arrayify(value);\n    if (result.length > 32) { throw new Error(\"internal; should not happen\"); }\n\n    const padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\n\nfunction bytesPad(value: Uint8Array): Uint8Array {\n    if ((value.length % 32) === 0) { return value; }\n\n    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\n\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas: Array<BytesLike>) {\n    const result: Array<Uint8Array> = [ ];\n\n    let byteCount = 0;\n\n    // Add place-holders for pointers as we add items\n    for (let i = 0; i < datas.length; i++) {\n        result.push(null);\n        byteCount += 32;\n    }\n\n    for (let i = 0; i < datas.length; i++) {\n        const data = arrayify(datas[i]);\n\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n\n    return hexConcat(result);\n}\n\nexport class Resolver implements EnsResolver {\n    readonly provider: BaseProvider;\n\n    readonly name: string;\n    readonly address: string;\n\n    readonly _resolvedAddress: null | string;\n\n    // For EIP-2544 names, the ancestor that provided the resolver\n    _supportsEip2544: null | Promise<boolean>;\n\n    // The resolvedAddress is only for creating a ReverseLookup resolver\n    constructor(provider: BaseProvider, address: string, name: string, resolvedAddress?: string) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n        defineReadOnly(this, \"_resolvedAddress\", resolvedAddress);\n    }\n\n    supportsWildcard(): Promise<boolean> {\n        if (!this._supportsEip2544) {\n            // supportsInterface(bytes4 = selector(\"resolve(bytes,bytes)\"))\n            this._supportsEip2544 = this.provider.call({\n                to: this.address,\n                data: \"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000\"\n            }).then((result) => {\n                return BigNumber.from(result).eq(1);\n            }).catch((error) => {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return false; }\n                // Rethrow the error: link is down, etc. Let future attempts retry.\n                this._supportsEip2544 = null;\n                throw error;\n            });\n        }\n\n        return this._supportsEip2544;\n    }\n\n    async _fetch(selector: string, parameters?: string): Promise<null | string> {\n\n        // e.g. keccak256(\"addr(bytes32,uint256)\")\n        const tx = {\n            to: this.address,\n            ccipReadEnabled: true,\n            data: hexConcat([ selector, namehash(this.name), (parameters || \"0x\") ])\n        };\n\n        // Wildcard support; use EIP-2544 to resolve the request\n        let parseBytes = false;\n        if (await this.supportsWildcard()) {\n            parseBytes = true;\n\n            // selector(\"resolve(bytes,bytes)\")\n            tx.data = hexConcat([ \"0x9061b923\", encodeBytes([ dnsEncode(this.name), tx.data ]) ]);\n        }\n\n        try {\n            let result = await this.provider.call(tx);\n            if ((arrayify(result).length % 32) === 4) {\n                logger.throwError(\"resolver threw error\", Logger.errors.CALL_EXCEPTION, {\n                    transaction: tx, data: result\n                });\n            }\n            if (parseBytes) { result = _parseBytes(result, 0); }\n            return result;\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n            throw error;\n        }\n    }\n\n    async _fetchBytes(selector: string, parameters?: string): Promise<null | string> {\n        const result = await this._fetch(selector, parameters);\n        if (result != null) { return _parseBytes(result, 0); }\n        return null;\n    }\n\n    _getAddress(coinType: number, hexBytes: string): string {\n        const coinInfo = coinInfos[String(coinType)];\n\n        if (coinInfo == null) {\n            logger.throwError(`unsupported coin type: ${ coinType }`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`\n            });\n        }\n\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n\n        const bytes = arrayify(hexBytes);\n\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2pkh ], (\"0x\" + p2pkh[2]) ]));\n                }\n            }\n        }\n\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2sh ], (\"0x\" + p2sh[2]) ]));\n                }\n            }\n        }\n\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            } else {\n                version = -1;\n            }\n\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n\n        return null;\n    }\n\n\n    async getAddress(coinType?: number): Promise<string> {\n        if (coinType == null) { coinType = 60; }\n\n        // If Ethereum, use the standard `addr(bytes32)`\n        if (coinType === 60) {\n            try {\n                // keccak256(\"addr(bytes32)\")\n                const result = await this._fetch(\"0x3b3b57de\");\n\n                // No address\n                if (result === \"0x\" || result === HashZero) { return null; }\n\n                return this.provider.formatter.callAddress(result);\n            } catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n                throw error;\n            }\n        }\n\n        // keccak256(\"addr(bytes32,uint256\")\n        const hexBytes = await this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n\n        // No address\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // Compute the address\n        const address = this._getAddress(coinType, hexBytes);\n\n        if (address == null) {\n            logger.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`,\n                coinType: coinType,\n                data: hexBytes\n            });\n        }\n\n        return address;\n    }\n\n    async getAvatar(): Promise<null | Avatar> {\n        const linkage: Array<{ type: string, content: string }> = [ { type: \"name\", content: this.name } ];\n        try {\n            // test data for ricmoo.eth\n            //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n            const avatar = await this.getText(\"avatar\");\n            if (avatar == null) { return null; }\n\n            for (let i = 0; i < matchers.length; i++) {\n                const match = avatar.match(matchers[i]);\n                if (match == null) { continue; }\n\n                const scheme = match[1].toLowerCase();\n\n                switch (scheme) {\n                    case \"https\":\n                        linkage.push({ type: \"url\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"data\":\n                        linkage.push({ type: \"data\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"ipfs\":\n                        linkage.push({ type: \"ipfs\", content: avatar });\n                        return { linkage, url: getIpfsLink(avatar) };\n\n                    case \"erc721\":\n                    case \"erc1155\": {\n                        // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                        const selector = (scheme === \"erc721\") ? \"0xc87b56dd\": \"0x0e89341c\";\n                        linkage.push({ type: scheme, content: avatar });\n\n                        // The owner of this name\n                        const owner = (this._resolvedAddress || await this.getAddress());\n\n                        const comps = (match[2] || \"\").split(\"/\");\n                        if (comps.length !== 2) { return null; }\n\n                        const addr = await this.provider.formatter.address(comps[0]);\n                        const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);\n\n                        // Check that this account owns the token\n                        if (scheme === \"erc721\") {\n                            // ownerOf(uint256 tokenId)\n                            const tokenOwner = this.provider.formatter.callAddress(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x6352211e\", tokenId ])\n                            }));\n                            if (owner !== tokenOwner) { return null; }\n                            linkage.push({ type: \"owner\", content: tokenOwner });\n\n                        } else if (scheme === \"erc1155\") {\n                            // balanceOf(address owner, uint256 tokenId)\n                            const balance = BigNumber.from(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x00fdd58e\", hexZeroPad(owner, 32), tokenId ])\n                            }));\n                            if (balance.isZero()) { return null; }\n                            linkage.push({ type: \"balance\", content: balance.toString() });\n                        }\n\n                        // Call the token contract for the metadata URL\n                        const tx = {\n                            to: this.provider.formatter.address(comps[0]),\n                            data: hexConcat([ selector, tokenId ])\n                        };\n\n                        let metadataUrl = _parseString(await this.provider.call(tx), 0);\n                        if (metadataUrl == null) { return null; }\n                        linkage.push({ type: \"metadata-url-base\", content: metadataUrl });\n\n                        // ERC-1155 allows a generic {id} in the URL\n                        if (scheme === \"erc1155\") {\n                            metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                            linkage.push({ type: \"metadata-url-expanded\", content: metadataUrl });\n                        }\n\n                        // Transform IPFS metadata links\n                        if (metadataUrl.match(/^ipfs:/i)) {\n                            metadataUrl = getIpfsLink(metadataUrl);\n                        }\n\n                        linkage.push({ type: \"metadata-url\", content: metadataUrl });\n\n                        // Get the token metadata\n                        const metadata = await fetchJson(metadataUrl);\n                        if (!metadata) { return null; }\n                        linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n\n                        // Pull the image URL out\n                        let imageUrl = metadata.image;\n                        if (typeof(imageUrl) !== \"string\") { return null; }\n\n                        if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                            // Allow\n                        } else {\n                            // Transform IPFS link to gateway\n                            const ipfs = imageUrl.match(matcherIpfs);\n                            if (ipfs == null) { return null; }\n\n                            linkage.push({ type: \"url-ipfs\", content: imageUrl });\n                            imageUrl = getIpfsLink(imageUrl);\n                        }\n\n                        linkage.push({ type: \"url\", content: imageUrl });\n\n                        return { linkage, url: imageUrl };\n                    }\n                }\n            }\n        } catch (error) { }\n\n        return null;\n    }\n\n    async getContentHash(): Promise<string> {\n\n        // keccak256(\"contenthash()\")\n        const hexBytes = await this._fetchBytes(\"0xbc1c58d1\");\n\n        // No contenthash\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // IPFS (CID: 1, Type: DAG-PB)\n        const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipfs) {\n            const length = parseInt(ipfs[3], 16);\n            if (ipfs[4].length === length * 2) {\n                return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n            }\n        }\n\n        // IPNS (CID: 1, Type: libp2p-key)\n        const ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipns) {\n            const length = parseInt(ipns[3], 16);\n            if (ipns[4].length === length * 2) {\n                return \"ipns:/\\/\" + Base58.encode(\"0x\" + ipns[1]);\n            }\n        }\n\n        // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n        const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/)\n        if (swarm) {\n            if (swarm[1].length === (32 * 2)) {\n                return \"bzz:/\\/\" + swarm[1]\n            }\n        }\n\n        const skynet = hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);\n        if (skynet) {\n            if (skynet[1].length === (34 * 2)) {\n                // URL Safe base64; https://datatracker.ietf.org/doc/html/rfc4648#section-5\n                const urlSafe: Record<string, string> = { \"=\": \"\", \"+\": \"-\", \"/\": \"_\" };\n                const hash = base64Encode(\"0x\" + skynet[1]).replace(/[=+\\/]/g, (a) => (urlSafe[a]));\n                return \"sia:/\\/\" + hash;\n            }\n        }\n\n        return logger.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"getContentHash()\",\n            data: hexBytes\n        });\n    }\n\n    async getText(key: string): Promise<string> {\n\n        // The key encoded as parameter to fetchBytes\n        let keyBytes = toUtf8Bytes(key);\n\n        // The nodehash consumes the first slot, so the string pointer targets\n        // offset 64, with the length at offset 64 and data starting at offset 96\n        keyBytes = concat([ bytes32ify(64), bytes32ify(keyBytes.length), keyBytes ]);\n\n        // Pad to word-size (32 bytes)\n        if ((keyBytes.length % 32) !== 0) {\n            keyBytes = concat([ keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32)) ])\n        }\n\n        const hexBytes = await this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        return toUtf8String(hexBytes);\n    }\n}\n\nlet defaultFormatter: Formatter = null;\n\nlet nextPollId = 1;\n\nexport class BaseProvider extends Provider implements EnsProvider {\n    _networkPromise: Promise<Network>;\n    _network: Network;\n\n    _events: Array<Event>;\n\n    formatter: Formatter;\n\n    // To help mitigate the eventually consistent nature of the blockchain\n    // we keep a mapping of events we emit. If we emit an event X, we expect\n    // that a user should be able to query for that event in the callback,\n    // if the node returns null, we stall the response until we get back a\n    // meaningful value, since we may be hitting a re-org, or a node that\n    // has not indexed the event yet.\n    // Events:\n    //   - t:{hash}    - Transaction hash\n    //   - b:{hash}    - BlockHash\n    //   - block       - The most recent emitted block\n    _emitted: { [ eventName: string ]: number | \"pending\" };\n\n    _pollingInterval: number;\n    _poller: NodeJS.Timer;\n    _bootstrapPoll: NodeJS.Timer;\n\n    _lastBlockNumber: number;\n    _maxFilterBlockRange: number;\n\n    _fastBlockNumber: number;\n    _fastBlockNumberPromise: Promise<number>;\n    _fastQueryDate: number;\n\n    _maxInternalBlockNumber: number;\n    _internalBlockNumber: Promise<{ blockNumber: number, reqTime: number, respTime: number }>;\n\n    readonly anyNetwork: boolean;\n\n    disableCcipRead: boolean;\n\n\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n\n    constructor(network: Networkish | Promise<Network>) {\n        super();\n\n        // Events being listened to\n        this._events = [];\n\n        this._emitted = { block: -2 };\n\n        this.disableCcipRead = false;\n\n        this.formatter = new.target.getFormatter();\n\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) { network = this.detectNetwork(); }\n\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n\n        } else {\n            const knownNetwork = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n\n            } else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n\n        this._maxInternalBlockNumber = -1024;\n\n        this._lastBlockNumber = -2;\n        this._maxFilterBlockRange = 10;\n\n        this._pollingInterval = 4000;\n\n        this._fastQueryDate = 0;\n    }\n\n    async _ready(): Promise<Network> {\n        if (this._network == null) {\n            let network: Network = null;\n            if (this._networkPromise) {\n                try {\n                    network = await this._networkPromise;\n                } catch (error) { }\n            }\n\n            // Try the Provider's network detection (this MUST throw if it cannot)\n            if (network == null) {\n                network = await this.detectNetwork();\n            }\n\n            // This should never happen; every Provider sub-class should have\n            // suggested a network by here (or have thrown).\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // Possible this call stacked so do not call defineReadOnly again\n            if (this._network == null) {\n                if (this.anyNetwork) {\n                    this._network = network;\n                } else {\n                    defineReadOnly(this, \"_network\", network);\n                }\n                this.emit(\"network\", network, null);\n            }\n        }\n\n        return this._network;\n    }\n\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is reflected); otherwise this cannot change\n    get ready(): Promise<Network> {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter(): Formatter {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network: Networkish): Network {\n        return getNetwork((network == null) ? \"homestead\": network);\n    }\n\n    async ccipReadFetch(tx: Transaction, calldata: string, urls: Array<string>): Promise<null | string> {\n        if (this.disableCcipRead || urls.length === 0) { return null; }\n\n        const sender = tx.to.toLowerCase();\n        const data = calldata.toLowerCase();\n\n        const errorMessages: Array<string> = [ ];\n\n        for (let i = 0; i < urls.length; i++) {\n            const url = urls[i];\n\n            // URL expansion\n            const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n\n            // If no {data} is present, use POST; otherwise GET\n            const json: string | null = (url.indexOf(\"{data}\") >= 0) ? null: JSON.stringify({ data, sender });\n\n            const result = await fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {\n                value.status = response.statusCode;\n                return value;\n            });\n\n            if (result.data) { return result.data; }\n\n            const errorMessage = (result.message || \"unknown error\");\n\n            // 4xx indicates the result is not present; stop\n            if (result.status >= 400 && result.status < 500) {\n                return logger.throwError(`response not found during CCIP fetch: ${ errorMessage }`, Logger.errors.SERVER_ERROR, { url, errorMessage });\n            }\n\n            // 5xx indicates server issue; try the next url\n            errorMessages.push(errorMessage);\n        }\n\n        return logger.throwError(`error encountered during CCIP fetch: ${ errorMessages.map((m) => JSON.stringify(m)).join(\", \") }`, Logger.errors.SERVER_ERROR, {\n            urls, errorMessages\n        });\n    }\n\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    async _getInternalBlockNumber(maxAge: number): Promise<number> {\n        await this._ready();\n\n        // Allowing stale data up to maxAge old\n        if (maxAge > 0) {\n\n            // While there are pending internal block requests...\n            while (this._internalBlockNumber) {\n\n                // ...\"remember\" which fetch we started with\n                const internalBlockNumber = this._internalBlockNumber;\n\n                try {\n                    // Check the result is not too stale\n                    const result = await internalBlockNumber;\n                    if ((getTime() - result.respTime) <= maxAge) {\n                        return result.blockNumber;\n                    }\n\n                    // Too old; fetch a new value\n                    break;\n\n                } catch(error) {\n\n                    // The fetch rejected; if we are the first to get the\n                    // rejection, drop through so we replace it with a new\n                    // fetch; all others blocked will then get that fetch\n                    // which won't match the one they \"remembered\" and loop\n                    if (this._internalBlockNumber === internalBlockNumber) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        const reqTime = getTime();\n\n        const checkInternalBlockNumber = resolveProperties({\n            blockNumber: this.perform(\"getBlockNumber\", { }),\n            networkError: this.getNetwork().then((network) => (null), (error) => (error))\n        }).then(({ blockNumber, networkError }) => {\n            if (networkError) {\n                // Unremember this bad internal block number\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n                throw networkError;\n            }\n\n            const respTime = getTime();\n\n            blockNumber = BigNumber.from(blockNumber).toNumber();\n            if (blockNumber < this._maxInternalBlockNumber) { blockNumber = this._maxInternalBlockNumber; }\n\n            this._maxInternalBlockNumber = blockNumber;\n            this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n            return { blockNumber, reqTime, respTime };\n        });\n\n        this._internalBlockNumber = checkInternalBlockNumber;\n\n        // Swallow unhandled exceptions; if needed they are handled else where\n        checkInternalBlockNumber.catch((error) => {\n            // Don't null the dead (rejected) fetch, if it has already been updated\n            if (this._internalBlockNumber === checkInternalBlockNumber) {\n                this._internalBlockNumber = null;\n            }\n        });\n\n        return (await checkInternalBlockNumber).blockNumber;\n    }\n\n    async poll(): Promise<void> {\n        const pollId = nextPollId++;\n\n        // Track all running promises, so we can trigger a post-poll once they are complete\n        const runners: Array<Promise<void>> = [];\n\n        let blockNumber: number = null;\n        try {\n            blockNumber = await this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n        } catch (error) {\n            this.emit(\"error\", error);\n            return;\n        }\n        this._setFastBlockNumber(blockNumber);\n\n        // Emit a poll event after we have the latest (fast) block number\n        this.emit(\"poll\", pollId, blockNumber);\n\n        // If the block has not changed, meh.\n        if (blockNumber === this._lastBlockNumber) {\n            this.emit(\"didPoll\", pollId);\n            return;\n        }\n\n        // First polling cycle, trigger a \"block\" events\n        if (this._emitted.block === -2) {\n            this._emitted.block = blockNumber - 1;\n        }\n\n        if (Math.abs((<number>(this._emitted.block)) - blockNumber) > 1000) {\n            logger.warn(`network block skew detected; skipping block events (emitted=${ this._emitted.block } blockNumber${ blockNumber })`);\n            this.emit(\"error\", logger.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                blockNumber: blockNumber,\n                event: \"blockSkew\",\n                previousBlockNumber: this._emitted.block\n            }));\n            this.emit(\"block\", blockNumber);\n\n        } else {\n            // Notify all listener for each block that has passed\n            for (let i = (<number>this._emitted.block) + 1; i <= blockNumber; i++) {\n                this.emit(\"block\", i);\n            }\n        }\n\n        // The emitted block was updated, check for obsolete events\n        if ((<number>this._emitted.block) !== blockNumber) {\n            this._emitted.block = blockNumber;\n\n            Object.keys(this._emitted).forEach((key) => {\n                // The block event does not expire\n                if (key === \"block\") { return; }\n\n                // The block we were at when we emitted this event\n                const eventBlockNumber = this._emitted[key];\n\n                // We cannot garbage collect pending transactions or blocks here\n                // They should be garbage collected by the Provider when setting\n                // \"pending\" events\n                if (eventBlockNumber === \"pending\") { return; }\n\n                // Evict any transaction hashes or block hashes over 12 blocks\n                // old, since they should not return null anyways\n                if (blockNumber - eventBlockNumber > 12) {\n                    delete this._emitted[key];\n                }\n            });\n        }\n\n        // First polling cycle\n        if (this._lastBlockNumber === -2) {\n            this._lastBlockNumber = blockNumber - 1;\n        }\n        // Find all transaction hashes we are waiting on\n        this._events.forEach((event) => {\n            switch (event.type) {\n                case \"tx\": {\n                    const hash = event.hash;\n                    let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt || receipt.blockNumber == null) { return null; }\n                        this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                        this.emit(hash, receipt);\n                        return null;\n                    }).catch((error: Error) => { this.emit(\"error\", error); });\n\n                    runners.push(runner);\n\n                    break;\n                }\n\n                case \"filter\": {\n                    // We only allow a single getLogs to be in-flight at a time\n                    if (!event._inflight) {\n                        event._inflight = true;\n\n                        // This is the first filter for this event, so we want to\n                        // restrict events to events that happened no earlier than now\n                        if (event._lastBlockNumber === -2) {\n                            event._lastBlockNumber = blockNumber - 1;\n                        }\n\n                        // Filter from the last *known* event; due to load-balancing\n                        // and some nodes returning updated block numbers before\n                        // indexing events, a logs result with 0 entries cannot be\n                        // trusted and we must retry a range which includes it again\n                        const filter = event.filter;\n                        filter.fromBlock = event._lastBlockNumber + 1;\n                        filter.toBlock = blockNumber;\n\n                        // Prevent fitler ranges from growing too wild, since it is quite\n                        // likely there just haven't been any events to move the lastBlockNumber.\n                        const minFromBlock = filter.toBlock - this._maxFilterBlockRange;\n                        if (minFromBlock > filter.fromBlock) { filter.fromBlock = minFromBlock; }\n\n                        if (filter.fromBlock < 0) { filter.fromBlock = 0; }\n\n                        const runner = this.getLogs(filter).then((logs) => {\n                            // Allow the next getLogs\n                            event._inflight = false;\n\n                            if (logs.length === 0) { return; }\n\n                            logs.forEach((log: Log) => {\n                                // Only when we get an event for a given block number\n                                // can we trust the events are indexed\n                                if (log.blockNumber > event._lastBlockNumber) {\n                                    event._lastBlockNumber = log.blockNumber;\n                                }\n\n                                // Make sure we stall requests to fetch blocks and txs\n                                this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n\n                                this.emit(filter, log);\n                            });\n                        }).catch((error: Error) => {\n                            this.emit(\"error\", error);\n\n                            // Allow another getLogs (the range was not updated)\n                            event._inflight = false;\n                        });\n                        runners.push(runner);\n                    }\n\n                    break;\n                }\n            }\n        });\n\n        this._lastBlockNumber = blockNumber;\n\n        // Once all events for this loop have been processed, emit \"didPoll\"\n        Promise.all(runners).then(() => {\n            this.emit(\"didPoll\", pollId);\n        }).catch((error) => { this.emit(\"error\", error); });\n\n        return;\n    }\n\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber: number): void {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) { this.poll(); }\n    }\n\n    get network(): Network {\n        return this._network;\n    }\n\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    async detectNetwork(): Promise<Network> {\n        return logger.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"provider.detectNetwork\"\n        });\n    }\n\n    async getNetwork(): Promise<Network> {\n        const network = await this._ready();\n\n        // Make sure we are still connected to the same network; this is\n        // only an external call for backends which can have the underlying\n        // network change spontaneously\n        const currentNetwork = await this.detectNetwork();\n        if (network.chainId !== currentNetwork.chainId) {\n\n            // We are allowing network changes, things can get complex fast;\n            // make sure you know what you are doing if you use \"any\"\n            if (this.anyNetwork) {\n                this._network = currentNetwork;\n\n                // Reset all internal block number guards and caches\n                this._lastBlockNumber = -2;\n                this._fastBlockNumber = null;\n                this._fastBlockNumberPromise = null;\n                this._fastQueryDate = 0;\n                this._emitted.block = -2;\n                this._maxInternalBlockNumber = -1024;\n                this._internalBlockNumber = null;\n\n                // The \"network\" event MUST happen before this method resolves\n                // so any events have a chance to unregister, so we stall an\n                // additional event loop before returning from /this/ call\n                this.emit(\"network\", currentNetwork, network);\n                await stall(0);\n\n                return this._network;\n            }\n\n            const error = logger.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                event: \"changed\",\n                network: network,\n                detectedNetwork: currentNetwork\n            });\n\n            this.emit(\"error\", error);\n            throw error;\n        }\n\n        return network;\n    }\n\n    get blockNumber(): number {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber: -1;\n    }\n\n    get polling(): boolean {\n        return (this._poller != null);\n    }\n\n    set polling(value: boolean) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) { this.poll(); }\n\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n\n        } else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n\n    get pollingInterval(): number {\n        return this._pollingInterval;\n    }\n\n    set pollingInterval(value: number) {\n        if (typeof(value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n\n        this._pollingInterval = value;\n\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n\n    _getFastBlockNumber(): Promise<number> {\n        const now = getTime();\n\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n\n        return this._fastBlockNumberPromise;\n    }\n\n    _setFastBlockNumber(blockNumber: number): void {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) { return; }\n\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n\n    async waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt> {\n        return this._waitForTransaction(transactionHash, (confirmations == null) ? 1: confirmations, timeout || 0, null);\n    }\n\n    async _waitForTransaction(transactionHash: string, confirmations: number, timeout: number, replaceable: { data: string, from: string, nonce: number, to: string, value: BigNumber, startBlock: number }): Promise<TransactionReceipt> {\n        const receipt = await this.getTransactionReceipt(transactionHash);\n\n        // Receipt is already good\n        if ((receipt ? receipt.confirmations: 0) >= confirmations) { return receipt; }\n\n        // Poll until the receipt is good...\n        return new Promise((resolve, reject) => {\n            const cancelFuncs: Array<() => void> = [];\n\n            let done = false;\n            const alreadyDone = function() {\n                if (done) { return true; }\n                done = true;\n                cancelFuncs.forEach((func) => { func(); });\n                return false;\n            };\n\n            const minedHandler = (receipt: TransactionReceipt) => {\n                if (receipt.confirmations < confirmations) { return; }\n                if (alreadyDone()) { return; }\n                resolve(receipt);\n            }\n            this.on(transactionHash, minedHandler);\n            cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });\n\n            if (replaceable) {\n                let lastBlockNumber = replaceable.startBlock;\n                let scannedBlock: number = null;\n                const replaceHandler = async (blockNumber: number) => {\n                    if (done) { return; }\n\n                    // Wait 1 second; this is only used in the case of a fault, so\n                    // we will trade off a little bit of latency for more consistent\n                    // results and fewer JSON-RPC calls\n                    await stall(1000);\n\n                    this.getTransactionCount(replaceable.from).then(async (nonce) => {\n                        if (done) { return; }\n\n                        if (nonce <= replaceable.nonce) {\n                            lastBlockNumber = blockNumber;\n\n                        } else {\n                            // First check if the transaction was mined\n                            {\n                                const mined = await this.getTransaction(transactionHash);\n                                if (mined && mined.blockNumber != null) { return; }\n                            }\n\n                            // First time scanning. We start a little earlier for some\n                            // wiggle room here to handle the eventually consistent nature\n                            // of blockchain (e.g. the getTransactionCount was for a\n                            // different block)\n                            if (scannedBlock == null) {\n                                scannedBlock = lastBlockNumber - 3;\n                                if (scannedBlock < replaceable.startBlock) {\n                                    scannedBlock = replaceable.startBlock;\n                                }\n                            }\n\n                            while (scannedBlock <= blockNumber) {\n                                if (done) { return; }\n\n                                const block = await this.getBlockWithTransactions(scannedBlock);\n                                for (let ti = 0; ti < block.transactions.length; ti++) {\n                                    const tx = block.transactions[ti];\n\n                                    // Successfully mined!\n                                    if (tx.hash === transactionHash) { return; }\n\n                                    // Matches our transaction from and nonce; its a replacement\n                                    if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                                        if (done) { return; }\n\n                                        // Get the receipt of the replacement\n                                        const receipt = await this.waitForTransaction(tx.hash, confirmations);\n\n                                        // Already resolved or rejected (prolly a timeout)\n                                        if (alreadyDone()) { return; }\n\n                                        // The reason we were replaced\n                                        let reason = \"replaced\";\n                                        if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                            reason = \"repriced\";\n                                        } else  if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                            reason = \"cancelled\"\n                                        }\n\n                                        // Explain why we were replaced\n                                        reject(logger.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                            cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                            reason,\n                                            replacement: this._wrapTransaction(tx),\n                                            hash: transactionHash,\n                                            receipt\n                                        }));\n\n                                        return;\n                                    }\n                                }\n                                scannedBlock++;\n                            }\n                        }\n\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n\n                    }, (error) => {\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n                    });\n                };\n\n                if (done) { return; }\n                this.once(\"block\", replaceHandler);\n\n                cancelFuncs.push(() => {\n                    this.removeListener(\"block\", replaceHandler);\n                });\n            }\n\n            if (typeof(timeout) === \"number\" && timeout > 0) {\n                const timer = setTimeout(() => {\n                    if (alreadyDone()) { return; }\n                    reject(logger.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                }, timeout);\n                if (timer.unref) { timer.unref(); }\n\n                cancelFuncs.push(() => { clearTimeout(timer); });\n            }\n        });\n    }\n\n    async getBlockNumber(): Promise<number> {\n        return this._getInternalBlockNumber(0);\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        await this.getNetwork();\n\n        const result = await this.perform(\"getGasPrice\", { });\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getGasPrice\",\n                result, error\n            });\n        }\n    }\n\n    async getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getBalance\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getBalance\",\n                params, result, error\n            });\n        }\n    }\n\n    async getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getTransactionCount\", params);\n        try {\n            return BigNumber.from(result).toNumber();\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getTransactionCount\",\n                params, result, error\n            });\n        }\n    }\n\n    async getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getCode\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getCode\",\n                params, result, error\n            });\n        }\n    }\n\n    async getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag),\n            position: Promise.resolve(position).then((p) => hexValue(p))\n        });\n        const result = await this.perform(\"getStorageAt\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getStorageAt\",\n                params, result, error\n            });\n        }\n    }\n\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx: Transaction, hash?: string, startBlock?: number): TransactionResponse {\n        if (hash != null && hexDataLength(hash) !== 32) { throw new Error(\"invalid response - sendTransaction\"); }\n\n        const result = <TransactionResponse>tx;\n\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n\n        result.wait = async (confirms?: number, timeout?: number) => {\n            if (confirms == null) { confirms = 1; }\n            if (timeout == null) { timeout = 0; }\n\n            // Get the details to detect replacement\n            let replacement = undefined;\n            if (confirms !== 0 && startBlock != null) {\n                replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock\n                };\n            }\n\n            const receipt = await this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n            if (receipt == null && confirms === 0) { return null; }\n\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n\n            if (receipt.status === 0) {\n                logger.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        };\n\n        return result;\n    }\n\n    async sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        const hexTx = await Promise.resolve(signedTransaction).then(t => hexlify(t));\n        const tx = this.formatter.transaction(signedTransaction);\n        if (tx.confirmations == null) { tx.confirmations = 0; }\n        const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n        try {\n            const hash = await this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n            return this._wrapTransaction(tx, hash, blockNumber);\n        } catch (error) {\n            (<any>error).transaction = tx;\n            (<any>error).transactionHash = tx.hash;\n            throw error;\n        }\n    }\n\n    async _getTransactionRequest(transaction: Deferrable<TransactionRequest>): Promise<Transaction> {\n        const values: any = await transaction;\n\n        const tx: any = { };\n\n        [\"from\", \"to\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v): null))\n        });\n\n        [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v): null));\n        });\n\n        [\"type\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v: null));\n        });\n\n        if (values.accessList) {\n            tx.accessList = this.formatter.accessList(values.accessList);\n        }\n\n        [\"data\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v): null));\n        });\n\n        return this.formatter.transactionRequest(await resolveProperties(tx));\n    }\n\n    async _getFilter(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Filter | FilterByBlockHash> {\n        filter = await filter;\n\n        const result: any = { };\n\n        if (filter.address != null) {\n            result.address = this._getAddress(filter.address);\n        }\n\n        [\"blockHash\", \"topics\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = (<any>filter)[key];\n        });\n\n        [\"fromBlock\", \"toBlock\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = this._getBlockTag((<any>filter)[key]);\n        });\n\n        return this.formatter.filter(await resolveProperties(result));\n    }\n\n    async _call(transaction: TransactionRequest, blockTag: BlockTag, attempt: number): Promise<string> {\n        if (attempt >= MAX_CCIP_REDIRECTS) {\n            logger.throwError(\"CCIP read exceeded maximum redirections\", Logger.errors.SERVER_ERROR, {\n                redirects: attempt, transaction\n            });\n        }\n\n        const txSender = transaction.to;\n\n        const result = await this.perform(\"call\", { transaction, blockTag });\n\n        // CCIP Read request via OffchainLookup(address,string[],bytes,bytes4,bytes)\n        if (attempt >= 0 && blockTag === \"latest\" && txSender != null && result.substring(0, 10) === \"0x556f1830\" && (hexDataLength(result) % 32 === 4)) {\n            try {\n                const data = hexDataSlice(result, 4);\n\n                // Check the sender of the OffchainLookup matches the transaction\n                const sender = hexDataSlice(data, 0, 32);\n                if (!BigNumber.from(sender).eq(txSender)) {\n                    logger.throwError(\"CCIP Read sender did not match\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                // Read the URLs from the response\n                const urls: Array<string> = [];\n                const urlsOffset = BigNumber.from(hexDataSlice(data, 32, 64)).toNumber();\n                const urlsLength = BigNumber.from(hexDataSlice(data, urlsOffset, urlsOffset + 32)).toNumber();\n                const urlsData = hexDataSlice(data, urlsOffset + 32);\n                for (let u = 0; u < urlsLength; u++) {\n                    const url = _parseString(urlsData, u * 32);\n                    if (url == null) {\n                        logger.throwError(\"CCIP Read contained corrupt URL string\", Logger.errors.CALL_EXCEPTION, {\n                            name: \"OffchainLookup\",\n                            signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                            transaction, data: result\n                        });\n                    }\n                    urls.push(url);\n                }\n\n                // Get the CCIP calldata to forward\n                const calldata = _parseBytes(data, 64);\n\n                // Get the callbackSelector (bytes4)\n                if (!BigNumber.from(hexDataSlice(data, 100, 128)).isZero()) {\n                    logger.throwError(\"CCIP Read callback selector included junk\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n                const callbackSelector = hexDataSlice(data, 96, 100);\n\n                // Get the extra data to send back to the contract as context\n                const extraData = _parseBytes(data, 128);\n\n                const ccipResult = await this.ccipReadFetch(<Transaction>transaction, calldata, urls);\n                if (ccipResult == null) {\n                    logger.throwError(\"CCIP Read disabled or provided no URLs\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                const tx = {\n                    to: txSender,\n                    data: hexConcat([ callbackSelector, encodeBytes([ ccipResult, extraData ]) ])\n                };\n\n                return this._call(tx, blockTag, attempt + 1);\n\n            } catch (error) {\n                if (error.code === Logger.errors.SERVER_ERROR) { throw error; }\n            }\n        }\n\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"call\",\n                params: { transaction, blockTag }, result, error\n            });\n        }\n\n    }\n\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const resolved = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction),\n            blockTag: this._getBlockTag(blockTag),\n            ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)\n        });\n        return this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0: -1);\n    }\n\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction)\n        });\n\n        const result = await this.perform(\"estimateGas\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"estimateGas\",\n                params, result, error\n            });\n        }\n    }\n\n    async _getAddress(addressOrName: string | Promise<string>): Promise<string> {\n        addressOrName = await addressOrName;\n        if (typeof(addressOrName) !== \"string\") {\n            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n        }\n\n        const address = await this.resolveName(addressOrName);\n        if (address == null) {\n            logger.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `resolveName(${ JSON.stringify(addressOrName) })`\n            });\n        }\n        return address;\n    }\n\n    async _getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>, includeTransactions?: boolean): Promise<Block | BlockWithTransactions> {\n        await this.getNetwork();\n\n        blockHashOrBlockTag = await blockHashOrBlockTag;\n\n        // If blockTag is a number (not \"latest\", etc), this is the block number\n        let blockNumber = -128;\n\n        const params: { [key: string]: any } = {\n            includeTransactions: !!includeTransactions\n        };\n\n        if (isHexString(blockHashOrBlockTag, 32)) {\n            params.blockHash = blockHashOrBlockTag;\n        } else {\n            try {\n                params.blockTag = await this._getBlockTag(blockHashOrBlockTag);\n                if (isHexString(params.blockTag)) {\n                    blockNumber = parseInt(params.blockTag.substring(2), 16);\n                }\n            } catch (error) {\n                logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n            }\n        }\n\n        return poll(async () => {\n            const block = await this.perform(\"getBlock\", params);\n\n            // Block was not found\n            if (block == null) {\n\n                // For blockhashes, if we didn't say it existed, that blockhash may\n                // not exist. If we did see it though, perhaps from a log, we know\n                // it exists, and this node is just not caught up yet.\n                if (params.blockHash != null) {\n                    if (this._emitted[\"b:\" + params.blockHash] == null) { return null; }\n                }\n\n                // For block tags, if we are asking for a future block, we return null\n                if (params.blockTag != null) {\n                    if (blockNumber > this._emitted.block) { return null; }\n                }\n\n                // Retry on the next block\n                return undefined;\n            }\n\n            // Add transactions\n            if (includeTransactions) {\n                let blockNumber: number = null;\n                for (let i = 0; i < block.transactions.length; i++) {\n                    const tx = block.transactions[i];\n                    if (tx.blockNumber == null) {\n                        tx.confirmations = 0;\n\n                    } else if (tx.confirmations == null) {\n                        if (blockNumber == null) {\n                            blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                        }\n\n                        // Add the confirmations using the fast block number (pessimistic)\n                        let confirmations = (blockNumber - tx.blockNumber) + 1;\n                        if (confirmations <= 0) { confirmations = 1; }\n                        tx.confirmations = confirmations;\n                    }\n                }\n\n                const blockWithTxs: any = this.formatter.blockWithTransactions(block);\n                blockWithTxs.transactions = blockWithTxs.transactions.map((tx: TransactionResponse) => this._wrapTransaction(tx));\n                return blockWithTxs;\n            }\n\n            return this.formatter.block(block);\n\n        }, { oncePoll: this });\n    }\n\n    getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block> {\n        return <Promise<Block>>(this._getBlock(blockHashOrBlockTag, false));\n    }\n\n    getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions> {\n        return <Promise<BlockWithTransactions>>(this._getBlock(blockHashOrBlockTag, true));\n    }\n\n    async getTransaction(transactionHash: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransaction\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            const tx = this.formatter.transactionResponse(result);\n\n            if (tx.blockNumber == null) {\n                tx.confirmations = 0;\n\n            } else if (tx.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - tx.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                tx.confirmations = confirmations;\n            }\n\n            return this._wrapTransaction(tx);\n        }, { oncePoll: this });\n    }\n\n    async getTransactionReceipt(transactionHash: string | Promise<string>): Promise<TransactionReceipt> {\n        await this.getNetwork();\n\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransactionReceipt\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            // \"geth-etc\" returns receipts before they are ready\n            if (result.blockHash == null) { return undefined; }\n\n            const receipt = this.formatter.receipt(result);\n\n            if (receipt.blockNumber == null) {\n                receipt.confirmations = 0;\n\n            } else if (receipt.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                receipt.confirmations = confirmations;\n            }\n\n            return receipt;\n        }, { oncePoll: this });\n    }\n\n    async getLogs(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Array<Log>> {\n        await this.getNetwork();\n        const params = await resolveProperties({ filter: this._getFilter(filter) });\n        const logs: Array<Log> = await this.perform(\"getLogs\", params);\n        logs.forEach((log) => {\n            if (log.removed == null) { log.removed = false; }\n        });\n        return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n    }\n\n    async getEtherPrice(): Promise<number> {\n        await this.getNetwork();\n        return this.perform(\"getEtherPrice\", { });\n    }\n\n    async _getBlockTag(blockTag: BlockTag | Promise<BlockTag>): Promise<BlockTag> {\n        blockTag = await blockTag;\n\n        if (typeof(blockTag) === \"number\" && blockTag < 0) {\n            if (blockTag % 1) {\n                logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n            }\n\n            let blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            blockNumber += blockTag;\n            if (blockNumber < 0) { blockNumber = 0; }\n            return this.formatter.blockTag(blockNumber)\n        }\n\n        return this.formatter.blockTag(blockTag);\n    }\n\n\n    async getResolver(name: string): Promise<null | Resolver> {\n        let currentName = name;\n        while (true) {\n            if (currentName === \"\" || currentName === \".\") { return null; }\n\n            // Optimization since the eth node cannot change and does\n            // not have a wildcard resolver\n            if (name !== \"eth\" && currentName === \"eth\") { return null; }\n\n            // Check the current node for a resolver\n            const addr = await this._getResolver(currentName, \"getResolver\");\n\n            // Found a resolver!\n            if (addr != null) {\n                const resolver = new Resolver(this, addr, name);\n\n                // Legacy resolver found, using EIP-2544 so it isn't safe to use\n                if (currentName !== name && !(await resolver.supportsWildcard())) { return null; }\n\n                return resolver;\n            }\n\n            // Get the parent node\n            currentName = currentName.split(\".\").slice(1).join(\".\");\n        }\n\n    }\n\n    async _getResolver(name: string, operation?: string): Promise<string> {\n        if (operation == null) { operation = \"ENS\"; }\n\n        const network = await this.getNetwork();\n\n        // No ENS...\n        if (!network.ensAddress) {\n            logger.throwError(\n                \"network does not support ENS\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { operation, network: network.name }\n            );\n        }\n\n        try {\n            // keccak256(\"resolver(bytes32)\")\n            const addrData = await this.call({\n                to: network.ensAddress,\n                data: (\"0x0178b8bf\" + namehash(name).substring(2))\n            });\n            return this.formatter.callAddress(addrData);\n        } catch (error) {\n            // ENS registry cannot throw errors on resolver(bytes32)\n        }\n\n        return null;\n    }\n\n    async resolveName(name: string | Promise<string>): Promise<null | string> {\n        name = await name;\n\n        // If it is already an address, nothing to resolve\n        try {\n            return Promise.resolve(this.formatter.address(name));\n        } catch (error) {\n            // If is is a hexstring, the address is bad (See #694)\n            if (isHexString(name)) { throw error; }\n        }\n\n        if (typeof(name) !== \"string\") {\n            logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n        }\n\n        // Get the addr from the resolver\n        const resolver = await this.getResolver(name);\n        if (!resolver) { return null; }\n\n        return await resolver.getAddress();\n    }\n\n    async lookupAddress(address: string | Promise<string>): Promise<null | string> {\n        address = await address;\n        address = this.formatter.address(address);\n\n        const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n        const resolverAddr = await this._getResolver(node, \"lookupAddress\");\n        if (resolverAddr == null) { return null; }\n\n        // keccak(\"name(bytes32)\")\n        const name = _parseString(await this.call({\n            to: resolverAddr,\n            data: (\"0x691f3431\" + namehash(node).substring(2))\n        }), 0);\n\n        const addr = await this.resolveName(name);\n        if (addr != address) { return null; }\n\n        return name;\n    }\n\n    async getAvatar(nameOrAddress: string): Promise<null | string> {\n        let resolver: Resolver = null;\n        if (isHexString(nameOrAddress)) {\n            // Address; reverse lookup\n            const address = this.formatter.address(nameOrAddress);\n\n            const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n            const resolverAddress = await this._getResolver(node, \"getAvatar\");\n            if (!resolverAddress) { return null; }\n\n            // Try resolving the avatar against the addr.reverse resolver\n            resolver = new Resolver(this, resolverAddress, node);\n            try {\n                const avatar = await resolver.getAvatar();\n                if (avatar) { return avatar.url; }\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n            }\n\n            // Try getting the name and performing forward lookup; allowing wildcards\n            try {\n                // keccak(\"name(bytes32)\")\n                const name = _parseString(await this.call({\n                    to: resolverAddress,\n                    data: (\"0x691f3431\" + namehash(node).substring(2))\n                }), 0);\n                resolver = await this.getResolver(name);\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n                return null;\n            }\n\n        } else {\n            // ENS name; forward lookup with wildcard\n            resolver = await this.getResolver(nameOrAddress);\n            if (!resolver) { return null; }\n        }\n\n        const avatar = await resolver.getAvatar();\n        if (avatar == null) { return null; }\n\n        return avatar.url;\n    }\n\n    perform(method: string, params: any): Promise<any> {\n        return logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n\n    _startEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _stopEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _addEventListener(eventName: EventType, listener: Listener, once: boolean): this {\n        const event = new Event(getEventTag(eventName), listener, once)\n        this._events.push(event);\n        this._startEvent(event);\n\n        return this;\n    }\n\n    on(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, false);\n    }\n\n    once(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, true);\n    }\n\n\n    emit(eventName: EventType, ...args: Array<any>): boolean {\n        let result = false;\n\n        let stopped: Array<Event> = [ ];\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) { return true; }\n\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n\n            result = true;\n\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n\n            return true;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return result;\n    }\n\n    listenerCount(eventName?: EventType): number {\n        if (!eventName) { return this._events.length; }\n\n        let eventTag = getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n\n    listeners(eventName?: EventType): Array<Listener> {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n\n        let eventTag = getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n\n    off(eventName: EventType, listener?: Listener): this {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n\n        const stopped: Array<Event> = [ ];\n\n        let found = false;\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) { return true; }\n            if (found) { return true; }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n\n    removeAllListeners(eventName?: EventType): this {\n        let stopped: Array<Event> = [ ];\n        if (eventName == null) {\n            stopped = this._events;\n\n            this._events = [ ];\n        } else {\n            const eventTag = getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) { return true; }\n                stopped.push(event);\n                return false;\n            });\n        }\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n}\n","export const HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n\n","\"use strict\";\n\nimport { BlockTag, FeeData, Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike } from \"@ethersproject/bytes\";\nimport { Deferrable, defineReadOnly, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst allowedTransactionKeys: Array<string> = [\n    \"accessList\", \"ccipReadEnabled\", \"chainId\", \"customData\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"\n];\n\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\n\n// EIP-712 Typed Data\n// See: https://eips.ethereum.org/EIPS/eip-712\n\nexport interface TypedDataDomain {\n    name?: string;\n    version?: string;\n    chainId?: BigNumberish;\n    verifyingContract?: string;\n    salt?: BytesLike;\n};\n\nexport interface TypedDataField {\n    name: string;\n    type: string;\n};\n\n// Sub-classes of Signer may optionally extend this interface to indicate\n// they have a private key available synchronously\nexport interface ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n}\n\n// Sub-Class Notes:\n//  - A Signer MUST always make sure, that if present, the \"from\" field\n//    matches the Signer, before sending or signing a transaction\n//  - A Signer SHOULD always wrap private information (such as a private\n//    key or mnemonic) in a function, so that console.log does not leak\n//    the data\n\n// @TODO: This is a temporary measure to preserve backwards compatibility\n//        In v6, the method on TypedDataSigner will be added to Signer\nexport interface TypedDataSigner {\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string>;\n}\n\nexport abstract class Signer {\n    readonly provider?: Provider;\n\n    ///////////////////\n    // Sub-classes MUST implement these\n\n    // Returns the checksum address\n    abstract getAddress(): Promise<string>\n\n    // Returns the signed prefixed-message. This MUST treat:\n    // - Bytes as a binary message\n    // - string as a UTF8-message\n    // i.e. \"0x1234\" is a SIX (6) byte string, NOT 2 bytes of data\n    abstract signMessage(message: Bytes | string): Promise<string>;\n\n    // Signs a transaction and returns the fully serialized, signed transaction.\n    // The EXACT transaction MUST be signed, and NO additional properties to be added.\n    // - This MAY throw if signing transactions is not supports, but if\n    //   it does, sentTransaction MUST be overridden.\n    abstract signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string>;\n\n    // Returns a new instance of the Signer, connected to provider.\n    // This MAY throw if changing providers is not supported.\n    abstract connect(provider: Provider): Signer;\n\n    readonly _isSigner: boolean;\n\n\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n\n\n    ///////////////////\n    // Sub-classes MAY override these\n\n    async getBalance(blockTag?: BlockTag): Promise<BigNumber> {\n        this._checkProvider(\"getBalance\");\n        return await this.provider.getBalance(this.getAddress(), blockTag);\n    }\n\n    async getTransactionCount(blockTag?: BlockTag): Promise<number> {\n        this._checkProvider(\"getTransactionCount\");\n        return await this.provider.getTransactionCount(this.getAddress(), blockTag);\n    }\n\n    // Populates \"from\" if unspecified, and estimates the gas for the transaction\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        this._checkProvider(\"estimateGas\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.estimateGas(tx);\n    }\n\n    // Populates \"from\" if unspecified, and calls with the transaction\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag): Promise<string> {\n        this._checkProvider(\"call\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.call(tx, blockTag);\n    }\n\n    // Populates all fields in a transaction, signs it and sends it to the network\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        this._checkProvider(\"sendTransaction\");\n        const tx = await this.populateTransaction(transaction);\n        const signedTx = await this.signTransaction(tx);\n        return await this.provider.sendTransaction(signedTx);\n    }\n\n    async getChainId(): Promise<number> {\n        this._checkProvider(\"getChainId\");\n        const network = await this.provider.getNetwork();\n        return network.chainId;\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        this._checkProvider(\"getGasPrice\");\n        return await this.provider.getGasPrice();\n    }\n\n    async getFeeData(): Promise<FeeData> {\n        this._checkProvider(\"getFeeData\");\n        return await this.provider.getFeeData();\n    }\n\n\n    async resolveName(name: string): Promise<string> {\n        this._checkProvider(\"resolveName\");\n        return await this.provider.resolveName(name);\n    }\n\n\n\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction: Deferrable<TransactionRequest>): Deferrable<TransactionRequest> {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n\n        const tx = shallowCopy(transaction);\n\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n\n        } else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n\n        return tx;\n    }\n\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    //\n    // Notes:\n    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n    async populateTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionRequest> {\n\n        const tx: Deferrable<TransactionRequest> = await resolveProperties(this.checkTransaction(transaction))\n\n        if (tx.to != null) {\n            tx.to = Promise.resolve(tx.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n\n            // Prevent this error from causing an UnhandledPromiseException\n            tx.to.catch((error) => {  });\n        }\n\n        // Do not allow mixing pre-eip-1559 and eip-1559 properties\n        const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);\n        if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n            logger.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n        } else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n            logger.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n        }\n\n        if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {\n            // Fully-formed EIP-1559 transaction (skip getFeeData)\n            tx.type = 2;\n\n        } else if (tx.type === 0 || tx.type === 1) {\n            // Explicit Legacy or EIP-2930 transaction\n\n            // Populate missing gasPrice\n            if (tx.gasPrice == null) { tx.gasPrice = this.getGasPrice(); }\n\n        } else {\n\n            // We need to get fee data to determine things\n            const feeData = await this.getFeeData();\n\n            if (tx.type == null) {\n                // We need to auto-detect the intended type of this transaction...\n\n                if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                    // The network supports EIP-1559!\n\n                    // Upgrade transaction from null to eip-1559\n                    tx.type = 2;\n\n                    if (tx.gasPrice != null) {\n                        // Using legacy gasPrice property on an eip-1559 network,\n                        // so use gasPrice as both fee properties\n                        const gasPrice = tx.gasPrice;\n                        delete tx.gasPrice;\n                        tx.maxFeePerGas = gasPrice;\n                        tx.maxPriorityFeePerGas = gasPrice;\n\n                    } else {\n                        // Populate missing fee data\n                        if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                        if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n                    }\n\n                } else if (feeData.gasPrice != null) {\n                    // Network doesn't support EIP-1559...\n\n                    // ...but they are trying to use EIP-1559 properties\n                    if (hasEip1559) {\n                        logger.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"populateTransaction\"\n                        });\n                    }\n\n                    // Populate missing fee data\n                    if (tx.gasPrice == null) { tx.gasPrice = feeData.gasPrice; }\n\n                    // Explicitly set untyped transaction to legacy\n                    tx.type = 0;\n\n                } else {\n                    // getFeeData has failed us.\n                    logger.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"signer.getFeeData\"\n                    });\n                }\n\n            } else if (tx.type === 2) {\n                // Explicitly using EIP-1559\n\n                // Populate missing fee data\n                if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n            }\n        }\n\n        if (tx.nonce == null) { tx.nonce = this.getTransactionCount(\"pending\"); }\n\n        if (tx.gasLimit == null) {\n            tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                if (forwardErrors.indexOf(error.code) >= 0) {\n                    throw error;\n                }\n\n                return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                    error: error,\n                    tx: tx\n                });\n            });\n        }\n\n        if (tx.chainId == null) {\n            tx.chainId = this.getChainId();\n        } else {\n            tx.chainId = Promise.all([\n                Promise.resolve(tx.chainId),\n                this.getChainId()\n            ]).then((results) => {\n                if (results[1] !== 0 && results[0] !== results[1]) {\n                    logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                }\n                return results[0];\n            });\n        }\n\n        return await resolveProperties(tx);\n    }\n\n\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n\n    _checkProvider(operation?: string): void {\n        if (!this.provider) { logger.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: (operation || \"_checkProvider\") });\n        }\n    }\n\n    static isSigner(value: any): value is Signer {\n        return !!(value && value._isSigner);\n    }\n}\n\nexport class VoidSigner extends Signer implements TypedDataSigner {\n    readonly address: string;\n\n    constructor(address: string, provider?: Provider) {\n        super();\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n\n    getAddress(): Promise<string> {\n        return Promise.resolve(this.address);\n    }\n\n    _fail(message: string, operation: string): Promise<any> {\n        return Promise.resolve().then(() => {\n            logger.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n\n    signMessage(message: Bytes | string): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n\n    connect(provider: Provider): VoidSigner {\n        return new VoidSigner(this.address, provider);\n    }\n}\n\n","export const version = \"abstract-signer/5.7.0\";\n","import { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nexport function id(text: string): string {\n    return keccak256(toUtf8Bytes(text));\n}\n","import { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { id } from \"./id\";\n\nconst padding = new Uint8Array(32);\npadding.fill(0);\n\nconst NegativeOne: BigNumber = BigNumber.from(-1);\nconst Zero: BigNumber = BigNumber.from(0);\nconst One: BigNumber = BigNumber.from(1);\nconst MaxUint256: BigNumber = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\nfunction hexPadRight(value: BytesLike) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32\n    if (padOffset) {\n        return hexConcat([ bytes, padding.slice(padOffset) ]);\n    }\n    return hexlify(bytes);\n}\n\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero.toHexString(), 32);\n\nconst domainFieldTypes: Record<string, string> = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\n\nconst domainFieldNames: Array<string> = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\n\nfunction checkString(key: string): (value: any) => string {\n    return function (value: any){\n        if (typeof(value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${ JSON.stringify(key) }`, `domain.${ key }`, value);\n        }\n        return value;\n    }\n}\n\nconst domainChecks: Record<string, (value: any) => any> = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function(value: any) {\n        try {\n            return BigNumber.from(value).toString()\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function(value: any) {\n        try {\n            return getAddress(value).toLowerCase();\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function(value: any) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) { throw new Error(\"bad length\"); }\n            return hexlify(bytes);\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n}\n\nfunction getBaseEncoder(type: string): (value: any) => string {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1): width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne): Zero;\n\n            return function(value: BigNumberish) {\n                const v = BigNumber.from(value);\n\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger.throwArgumentError(`value out-of-bounds for ${ type }`, \"value\", value);\n                }\n\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n\n            return function(value: BytesLike) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${ type }`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n\n    switch (type) {\n        case \"address\": return function(value: string) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function(value: boolean) {\n            return ((!value) ? hexFalse: hexTrue);\n        };\n        case \"bytes\": return function(value: BytesLike) {\n            return keccak256(value);\n        };\n        case \"string\": return function(value: string) {\n            return id(value);\n        };\n    }\n\n    return null;\n}\n\nfunction encodeType(name: string, fields: Array<TypedDataField>): string {\n    return `${ name }(${ fields.map(({ name, type }) => (type + \" \" + name)).join(\",\") })`;\n}\n\nexport class TypedDataEncoder {\n    readonly primaryType: string;\n    readonly types: Record<string, Array<TypedDataField>>;\n\n    readonly _encoderCache: Record<string, (value: any) => string>;\n    readonly _types: Record<string, string>;\n\n    constructor(types: Record<string, Array<TypedDataField>>) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n\n        defineReadOnly(this, \"_encoderCache\", { });\n        defineReadOnly(this, \"_types\", { });\n\n        // Link struct types to their direct child structs\n        const links: Record<string, Record<string, boolean>> = { };\n\n        // Link structs to structs which contain them as a child\n        const parents: Record<string, Array<string>> = { };\n\n        // Link all subtypes within a given struct\n        const subtypes: Record<string, Record<string, boolean>> = { };\n\n        Object.keys(types).forEach((type) => {\n            links[type] = { };\n            parents[type] = [ ];\n            subtypes[type] = { }\n        });\n\n        for (const name in types) {\n\n            const uniqueNames: Record<string, boolean> = { };\n\n            types[name].forEach((field) => {\n\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(`duplicate variable name ${ JSON.stringify(field.name) } in ${ JSON.stringify(name) }`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) { return ;}\n\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(`unknown type ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        } else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${ primaryTypes.map((t) => (JSON.stringify(t))).join(\", \") }`, \"types\", types);\n        }\n\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n\n        // Check for circular type references\n        function checkCircular(type: string, found: Record<string, boolean>) {\n            if (found[type]) {\n                logger.throwArgumentError(`circular type reference to ${ JSON.stringify(type) }`, \"types\", types);\n            }\n\n            found[type] = true;\n\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) { return; }\n\n                // Recursively check children\n                checkCircular(child, found);\n\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n\n            delete found[type];\n        }\n        checkCircular(this.primaryType, { });\n\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n\n    getEncoder(type: string): (value: any) => string {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n\n    _getEncoder(type: string): (value: any) => string {\n\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return encoder; }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value: Array<any>) => {\n                if (length >= 0 && value.length !== length) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n\n                return keccak256(hexConcat(result));\n            };\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value: Record<string, any>) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) { return keccak256(result); }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            }\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    encodeType(name: string): string {\n        const result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(`unknown type: ${ JSON.stringify(name) }`, \"name\", name);\n        }\n        return result;\n    }\n\n    encodeData(type: string, value: any): string {\n        return this.getEncoder(type)(value);\n    }\n\n    hashStruct(name: string, value: Record<string, any>): string {\n        return keccak256(this.encodeData(name, value));\n    }\n\n    encode(value: Record<string, any>): string {\n        return this.encodeData(this.primaryType, value);\n    }\n\n    hash(value: Record<string, any>): string {\n        return this.hashStruct(this.primaryType, value);\n    }\n\n    _visit(type: string, value: any, callback: (type: string, data: any) => any): any {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return callback(type, value); }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v: any) => this._visit(subtype, v, callback));\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, <Record<string, any>>{});\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    visit(value: Record<string, any>, callback: (type: string, data: any) => any): any {\n        return this._visit(this.primaryType, value, callback);\n    }\n\n    static from(types: Record<string, Array<TypedDataField>>): TypedDataEncoder {\n        return new TypedDataEncoder(types);\n    }\n\n    static getPrimaryType(types: Record<string, Array<TypedDataField>>): string {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n\n    static hashStruct(name: string, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n\n    static hashDomain(domain: TypedDataDomain): string {\n        const domainFields: Array<TypedDataField> = [ ];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${ JSON.stringify(name) }`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n\n    static encode(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n\n    static hash(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n\n    // Replaces all address types with ENS names with their looked up address\n    static async resolveNames(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, resolveName: (name: string) => Promise<string>): Promise<{ domain: TypedDataDomain, value: any }> {\n        // Make a copy to isolate it from the object passed in\n        domain = shallowCopy(domain);\n\n        // Look up all ENS names\n        const ensCache: Record<string, string> = { };\n\n        // Do we need to look up the domain's verifyingContract?\n        if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n            ensCache[domain.verifyingContract] = \"0x\";\n        }\n\n        // We are going to use the encoder to visit all the base values\n        const encoder = TypedDataEncoder.from(types);\n\n        // Get a list of all the addresses\n        encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && !isHexString(value, 20)) {\n                ensCache[value] = \"0x\";\n            }\n            return value;\n        });\n\n        // Lookup each name\n        for (const name in ensCache) {\n            ensCache[name] = await resolveName(name);\n        }\n\n        // Replace the domain verifyingContract if needed\n        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n            domain.verifyingContract = ensCache[domain.verifyingContract];\n        }\n\n        // Replace all ENS names with their address\n        value = encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && ensCache[value]) { return ensCache[value]; }\n            return value;\n        });\n\n        return { domain, value };\n    }\n\n    static getPayload(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): any {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n\n        // Derive the EIP712Domain Struct reference type\n        const domainValues: Record<string, any> = { };\n        const domainTypes: Array<{ name: string, type:string }> = [ ];\n\n        domainFieldNames.forEach((name) => {\n            const value = (<any>domain)[name];\n            if (value == null) { return; }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n\n        const encoder = TypedDataEncoder.from(types);\n\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        } else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n\n        // Validate the data structures and types\n        encoder.encode(value);\n\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type: string, value: any) => {\n\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof(value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n\n","\"use strict\";\n\n// See: https://github.com/ethereum/wiki/wiki/JSON-RPC\n\nimport { Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { Signer, TypedDataDomain, TypedDataField, TypedDataSigner } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Bytes, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { checkProperties, deepCopy, Deferrable, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { AccessList, accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson, poll } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider, Event } from \"./base-provider\";\n\n\nconst errorGas = [ \"call\", \"estimateGas\" ];\n\nfunction spelunk(value: any, requireData: boolean): null | { message: string, data: null | string } {\n    if (value == null) { return null; }\n\n    // These *are* the droids we're looking for.\n    if (typeof(value.message) === \"string\" && value.message.match(\"reverted\")) {\n        const data = isHexString(value.data) ? value.data: null;\n        if (!requireData || data) {\n            return { message: value.message, data };\n        }\n    }\n\n    // Spelunk further...\n    if (typeof(value) === \"object\") {\n        for (const key in value) {\n            const result = spelunk(value[key], requireData);\n            if (result) { return result; }\n        }\n        return null;\n    }\n\n    // Might be a JSON string we can further descend...\n    if (typeof(value) === \"string\") {\n        try {\n            return spelunk(JSON.parse(value), requireData);\n        } catch (error) { }\n    }\n\n    return null;\n}\n\nfunction checkError(method: string, error: any, params: any): any {\n\n    const transaction = params.transaction || params.signedTransaction;\n\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\") {\n        const result = spelunk(error, true);\n        if (result) { return result.data; }\n\n        // Nothing descriptive..\n        logger.throwError(\"missing revert data in call exception; Transaction reverted without a reason string\", Logger.errors.CALL_EXCEPTION, {\n            data: \"0x\", transaction, error\n        });\n    }\n\n    if (method === \"estimateGas\") {\n        // Try to find something, with a preference on SERVER_ERROR body\n        let result = spelunk(error.body, false);\n        if (result == null) { result = spelunk(error, false); }\n\n        // Found \"reverted\", this is a CALL_EXCEPTION\n        if (result) {\n            logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                reason: result.message, method, transaction, error\n            });\n        }\n    }\n\n    // @TODO: Should we spelunk for message too?\n\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof(error.error.message) === \"string\") {\n        message = error.error.message;\n    } else if (typeof(error.body) === \"string\") {\n        message = error.body;\n    } else if (typeof(error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit/i)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n\n    // \"nonce too low\"\n    if (message.match(/nonce (is )?too low/i)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced|transaction gas price.*too low/i)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/i)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nfunction timer(timeout: number): Promise<any> {\n    return new Promise(function(resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\n\nfunction getResult(payload: { error?: { code?: number, data?: any, message?: string }, result?: any }): any {\n    if (payload.error) {\n        // @TODO: not any\n        const error: any = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n\n    return payload.result;\n}\n\nfunction getLowerCase(value: string): string {\n    if (value) { return value.toLowerCase(); }\n    return value;\n}\n\nconst _constructorGuard = {};\n\nexport class JsonRpcSigner extends Signer implements TypedDataSigner {\n    readonly provider: JsonRpcProvider;\n    _index: number;\n    _address: string;\n\n    constructor(constructorGuard: any, provider: JsonRpcProvider, addressOrIndex?: string | number) {\n        super();\n\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n\n        defineReadOnly(this, \"provider\", provider);\n\n        if (addressOrIndex == null) { addressOrIndex = 0; }\n\n        if (typeof(addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n\n        } else if (typeof(addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n\n        } else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n\n    connect(provider: Provider): JsonRpcSigner {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n\n    connectUnchecked(): JsonRpcSigner {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n\n    getAddress(): Promise<string> {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index])\n        });\n    }\n\n    sendUncheckedTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        transaction = shallowCopy(transaction);\n\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) { address = address.toLowerCase(); }\n            return address;\n        });\n\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.provider.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n        }\n\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            } else {\n                tx.from = sender;\n            }\n\n            const hexTx = (<any>this.provider.constructor).hexlifyTransaction(tx, { from: true });\n\n            return this.provider.send(\"eth_sendTransaction\", [ hexTx ]).then((hash) => {\n                return hash;\n            }, (error) => {\n                if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                    logger.throwError(\"user rejected transaction\", Logger.errors.ACTION_REJECTED, {\n                        action: \"sendTransaction\",\n                        transaction: tx\n                    });\n                }\n\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        // This cannot be mined any earlier than any recent block\n        const blockNumber = await this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n\n        // Send the transaction\n        const hash = await this.sendUncheckedTransaction(transaction);\n\n        try {\n            // Unfortunately, JSON-RPC only provides and opaque transaction hash\n            // for a response, and we need the actual transaction, so we poll\n            // for it; it should show up very quickly\n            return await poll(async () => {\n                const tx = await this.provider.getTransaction(hash);\n                if (tx === null) { return undefined; }\n                return this.provider._wrapTransaction(tx, hash, blockNumber);\n            }, { oncePoll: this.provider });\n        } catch (error) {\n            (<any>error).transactionHash = hash;\n            throw error;\n        }\n    }\n\n    async signMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n\n\n        try {\n            return await this.provider.send(\"personal_sign\", [ hexlify(data), address.toLowerCase() ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"signMessage\",\n                    from: address,\n                    message: data\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _legacySignMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n\n        try {\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return await this.provider.send(\"eth_sign\", [ address.toLowerCase(), hexlify(data) ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_legacySignMessage\",\n                    from: address,\n                    message: data\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        // Populate any ENS names (in-place)\n        const populated = await _TypedDataEncoder.resolveNames(domain, types, value, (name: string) => {\n            return this.provider.resolveName(name);\n        });\n\n        const address = await this.getAddress();\n\n        try {\n            return await this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n            ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_signTypedData\",\n                    from: address,\n                    message: { domain: populated.domain, types, value: populated.value }\n                });\n            }\n            throw error;\n        }\n    }\n\n    async unlock(password: string): Promise<boolean> {\n        const provider = this.provider;\n\n        const address = await this.getAddress();\n\n        return provider.send(\"personal_unlockAccount\", [ address.toLowerCase(), password, null ]);\n    }\n}\n\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return <TransactionResponse>{\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations?: number) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n}\n\nexport class JsonRpcProvider extends BaseProvider {\n    readonly connection: ConnectionInfo;\n\n    _pendingFilter: Promise<number>;\n    _nextId: number;\n\n    // During any given event loop, the results for a given call will\n    // all be the same, so we can dedup the calls to save requests and\n    // bandwidth. @TODO: Try out generalizing this against send?\n    _eventLoopCache: Record<string, Promise<any>>;\n    get _cache(): Record<string, Promise<any>> {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = { };\n        }\n        return this._eventLoopCache;\n    }\n\n    constructor(url?: ConnectionInfo | string, network?: Networkish) {\n        let networkOrReady: Networkish | Promise<Network> = network;\n\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Default URL\n        if (!url) { url = getStatic<() => string>(this.constructor, \"defaultUrl\")(); }\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"connection\",Object.freeze({\n                url: url\n            }));\n        } else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n\n        this._nextId = 42;\n    }\n\n    static defaultUrl(): string {\n        return \"http:/\\/localhost:8545\";\n    }\n\n    detectNetwork(): Promise<Network> {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n\n    async _uncachedDetectNetwork(): Promise<Network> {\n        await timer(0);\n\n        let chainId = null;\n        try {\n            chainId = await this.send(\"eth_chainId\", [ ]);\n        } catch (error) {\n            try {\n                chainId = await this.send(\"net_version\", [ ]);\n            } catch (error) { }\n        }\n\n        if (chainId != null) {\n            const getNetwork = getStatic<(network: Networkish) => Network>(this.constructor, \"getNetwork\");\n            try {\n                return getNetwork(BigNumber.from(chainId).toNumber());\n            } catch (error) {\n                return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                    chainId: chainId,\n                    event: \"invalidNetwork\",\n                    serverError: error\n                });\n            }\n        }\n\n        return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n            event: \"noNetwork\"\n        });\n    }\n\n    getSigner(addressOrIndex?: string | number): JsonRpcSigner {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n\n    getUncheckedSigner(addressOrIndex?: string | number): UncheckedJsonRpcSigner {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return this.send(\"eth_accounts\", []).then((accounts: Array<string>) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([ \"eth_chainId\", \"eth_blockNumber\" ].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n\n            return result;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n\n            throw error;\n        });\n\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n\n        return result;\n    }\n\n    prepareRequest(method: string, params: any): [ string, Array<any> ] {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [ \"eth_blockNumber\", [] ];\n\n            case \"getGasPrice\":\n                return [ \"eth_gasPrice\", [] ];\n\n            case \"getBalance\":\n                return [ \"eth_getBalance\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getTransactionCount\":\n                return [ \"eth_getTransactionCount\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getCode\":\n                return [ \"eth_getCode\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getStorageAt\":\n                return [ \"eth_getStorageAt\", [ getLowerCase(params.address), hexZeroPad(params.position, 32), params.blockTag ] ];\n\n            case \"sendTransaction\":\n                return [ \"eth_sendRawTransaction\", [ params.signedTransaction ] ]\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [ \"eth_getBlockByNumber\", [ params.blockTag, !!params.includeTransactions ] ];\n                } else if (params.blockHash) {\n                    return [ \"eth_getBlockByHash\", [ params.blockHash, !!params.includeTransactions ] ];\n                }\n                return null;\n\n            case \"getTransaction\":\n                return [ \"eth_getTransactionByHash\", [ params.transactionHash ] ];\n\n            case \"getTransactionReceipt\":\n                return [ \"eth_getTransactionReceipt\", [ params.transactionHash ] ];\n\n            case \"call\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_call\", [ hexlifyTransaction(params.transaction, { from: true }), params.blockTag ] ];\n            }\n\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_estimateGas\", [ hexlifyTransaction(params.transaction, { from: true }) ] ];\n            }\n\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [ \"eth_getLogs\", [ params.filter ] ];\n\n            default:\n                break;\n        }\n\n        return null;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // Legacy networks do not like the type field being passed along (which\n        // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n        if (method === \"call\" || method === \"estimateGas\") {\n            const tx = params.transaction;\n            if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                // If there are no EIP-1559 properties, it might be non-EIP-1559\n                if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                    const feeData = await this.getFeeData();\n                    if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                        // Network doesn't know about EIP-1559 (and hence type)\n                        params = shallowCopy(params);\n                        params.transaction = shallowCopy(tx);\n                        delete params.transaction.type;\n                    }\n                }\n            }\n        }\n\n        const args = this.prepareRequest(method,  params);\n\n        if (args == null) {\n            logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n        }\n        try {\n            return await this.send(args[0], args[1])\n        } catch (error) {\n            return checkError(method, error, params);\n        }\n    }\n\n    _startEvent(event: Event): void {\n        if (event.tag === \"pending\") { this._startPending(); }\n        super._startEvent(event);\n    }\n\n    _startPending(): void {\n        if (this._pendingFilter != null) { return; }\n        const self = this;\n\n        const pendingFilter: Promise<number> = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n\n        pendingFilter.then(function(filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [ filterId ]).then(function(hashes: Array<string>) {\n                    if (self._pendingFilter != pendingFilter) { return null; }\n\n                    let seq = Promise.resolve();\n                    hashes.forEach(function(hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function() {\n                            return self.getTransaction(hash).then(function(tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n\n                    return seq.then(function() {\n                        return timer(1000);\n                    });\n                }).then(function() {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [ filterId ]);\n                        return;\n                    }\n                    setTimeout(function() { poll(); }, 0);\n\n                    return null;\n                }).catch((error: Error) => { });\n            }\n            poll();\n\n            return filterId;\n        }).catch((error: Error) => { });\n    }\n\n    _stopEvent(event: Event): void {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction: TransactionRequest, allowExtra?: { [key: string]: boolean }): { [key: string]: string | AccessList } {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) { allowed[key] = true; }\n            }\n        }\n\n        checkProperties(transaction, allowed);\n\n        const result: { [key: string]: string | AccessList } = {};\n\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            const value = hexValue(BigNumber.from((<any>transaction)[key]));\n            if (key === \"gasLimit\") { key = \"gas\"; }\n            result[key] = value;\n        });\n\n        [\"from\", \"to\", \"data\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            result[key] = hexlify((<any>transaction)[key]);\n        });\n\n        if ((<any>transaction).accessList) {\n            result[\"accessList\"] = accessListify((<any>transaction).accessList);\n        }\n\n        return result;\n    }\n}\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\n\nlet WS: any = null;\n\ntry {\n    WS = (WebSocket as any);\n    if (WS == null) { throw new Error(\"inject please\"); }\n} catch (error) {\n    const logger = new Logger(version);\n    WS = function() {\n        logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    }\n}\n//export default WS;\n//module.exports = WS;\nexport { WS as WebSocket };\n","\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Event } from \"./base-provider\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nimport { WebSocket } from \"./ws\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicates\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\n\nlet NextId = 1;\n\nexport type InflightRequest = {\n     callback: (error: Error, result: any) => void;\n     payload: string;\n};\n\nexport type Subscription = {\n    tag: string;\n    processFunc: (payload: any) => void;\n};\n\nexport interface WebSocketLike {\n    onopen: ((...args: Array<any>) => any) | null;\n    onmessage: ((...args: Array<any>) => any) | null;\n    onerror: ((...args: Array<any>) => any) | null;\n\n    readyState: number;\n\n    send(payload: any): void;\n    close(code?: number, reason?: string): void;\n}\n\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\n\nexport class WebSocketProvider extends JsonRpcProvider {\n    readonly _websocket: any;\n    readonly _requests: { [ name: string ]: InflightRequest };\n    readonly _detectNetwork: Promise<Network>;\n\n    // Maps event tag to subscription ID (we dedupe identical events)\n    readonly _subIds: { [ tag: string ]: Promise<string> };\n\n    // Maps Subscription ID to Subscription\n    readonly _subs: { [ name: string ]: Subscription };\n\n    _wsReady: boolean;\n\n    constructor(url: string | WebSocketLike, network?: Networkish) {\n\n        // This will be added in the future; please open an issue to expedite\n        if (network === \"any\") {\n            logger.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n            });\n        }\n\n        if (typeof(url) === \"string\") {\n            super(url, network);\n        } else {\n            super(\"_websocket\", network);\n        }\n\n        this._pollingInterval = -1;\n\n        this._wsReady = false;\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"_websocket\", new WebSocket(this.connection.url));\n        } else {\n            defineReadOnly(this, \"_websocket\", url);\n        }\n\n        defineReadOnly(this, \"_requests\", { });\n        defineReadOnly(this, \"_subs\", { });\n        defineReadOnly(this, \"_subIds\", { });\n        defineReadOnly(this, \"_detectNetwork\", super.detectNetwork());\n\n        // Stall sending requests until the socket is open...\n        this.websocket.onopen = () => {\n            this._wsReady = true;\n            Object.keys(this._requests).forEach((id) => {\n                this.websocket.send(this._requests[id].payload);\n            });\n        };\n\n        this.websocket.onmessage = (messageEvent: { data: string }) => {\n            const data = messageEvent.data;\n            const result = JSON.parse(data);\n            if (result.id != null) {\n                const id = String(result.id);\n                const request = this._requests[id];\n                delete this._requests[id];\n\n                if (result.result !== undefined) {\n                    request.callback(null, result.result);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: JSON.parse(request.payload),\n                        response: result.result,\n                        provider: this\n                    });\n\n                } else {\n                    let error: Error = null;\n                    if (result.error) {\n                        error = new Error(result.error.message || \"unknown error\");\n                        defineReadOnly(<any>error, \"code\", result.error.code || null);\n                        defineReadOnly(<any>error, \"response\", data);\n                    } else {\n                        error = new Error(\"unknown error\");\n                    }\n\n                    request.callback(error, undefined);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: JSON.parse(request.payload),\n                        provider: this\n                    });\n\n                }\n\n            } else if (result.method === \"eth_subscription\") {\n                // Subscription...\n                const sub = this._subs[result.params.subscription];\n                if (sub) {\n                    //this.emit.apply(this,                  );\n                    sub.processFunc(result.params.result)\n                }\n\n            } else {\n                console.warn(\"this should not happen\");\n            }\n        };\n\n        // This Provider does not actually poll, but we want to trigger\n        // poll events for things that depend on them (like stalling for\n        // block and transaction lookups)\n        const fauxPoll = setInterval(() => {\n            this.emit(\"poll\");\n        }, 1000);\n        if (fauxPoll.unref) { fauxPoll.unref(); }\n    }\n\n    // Cannot narrow the type of _websocket, as that is not backwards compatible\n    // so we add a getter and let the WebSocket be a public API.\n    get websocket(): WebSocketLike { return this._websocket; }\n\n    detectNetwork(): Promise<Network> {\n        return this._detectNetwork;\n    }\n\n    get pollingInterval(): number {\n        return 0;\n    }\n\n    resetEventsBlock(blockNumber: number): void {\n        logger.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resetEventBlock\"\n        });\n    }\n\n    set pollingInterval(value: number) {\n        logger.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPollingInterval\"\n        });\n    }\n\n    async poll(): Promise<void> {\n        return null;\n    }\n\n    set polling(value: boolean) {\n        if (!value) { return; }\n\n        logger.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPolling\"\n        });\n    }\n\n    send(method: string, params?: Array<any>): Promise<any> {\n        const rid = NextId++;\n\n        return new Promise((resolve, reject) => {\n            function callback(error: Error, result: any) {\n                if (error) { return reject(error); }\n                return resolve(result);\n            }\n\n            const payload = JSON.stringify({\n                method: method,\n                params: params,\n                id: rid,\n                jsonrpc: \"2.0\"\n            });\n\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: this\n            });\n\n            this._requests[String(rid)] = { callback, payload };\n\n            if (this._wsReady) { this.websocket.send(payload); }\n        });\n    }\n\n    static defaultUrl(): string {\n        return \"ws:/\\/localhost:8546\";\n    }\n\n    async _subscribe(tag: string, param: Array<any>, processFunc: (result: any) => void): Promise<void> {\n        let subIdPromise = this._subIds[tag];\n        if (subIdPromise == null) {\n            subIdPromise = Promise.all(param).then((param) => {\n                return this.send(\"eth_subscribe\", param);\n            });\n            this._subIds[tag] = subIdPromise;\n        }\n        const subId = await subIdPromise;\n        this._subs[subId] = { tag, processFunc };\n    }\n\n    _startEvent(event: Event): void {\n        switch (event.type) {\n            case \"block\":\n                this._subscribe(\"block\", [ \"newHeads\" ], (result: any) => {\n                    const blockNumber = BigNumber.from(result.number).toNumber();\n                    this._emitted.block = blockNumber;\n                    this.emit(\"block\", blockNumber);\n                });\n                break;\n\n            case \"pending\":\n                this._subscribe(\"pending\", [ \"newPendingTransactions\" ], (result: any) => {\n                    this.emit(\"pending\", result);\n                });\n                break;\n\n            case \"filter\":\n                this._subscribe(event.tag, [ \"logs\", this._getFilter(event.filter) ], (result: any) => {\n                    if (result.removed == null) { result.removed = false; }\n                    this.emit(event.filter, this.formatter.filterLog(result));\n                });\n                break;\n\n            case \"tx\": {\n                const emitReceipt = (event: Event) => {\n                    const hash = event.hash;\n                    this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt) { return; }\n                        this.emit(hash, receipt);\n                    });\n                };\n\n                // In case it is already mined\n                emitReceipt(event);\n\n                // To keep things simple, we start up a single newHeads subscription\n                // to keep an eye out for transactions we are watching for.\n                // Starting a subscription for an event (i.e. \"tx\") that is already\n                // running is (basically) a nop.\n                this._subscribe(\"tx\", [ \"newHeads\" ], (result: any) => {\n                    this._events.filter((e) => (e.type === \"tx\")).forEach(emitReceipt);\n                });\n                break;\n            }\n\n            // Nothing is needed\n            case \"debug\":\n            case \"poll\":\n            case \"willPoll\":\n            case \"didPoll\":\n            case \"error\":\n                break;\n\n            default:\n                console.log(\"unhandled:\", event);\n                break;\n        }\n    }\n\n    _stopEvent(event: Event): void {\n        let tag = event.tag;\n\n        if (event.type === \"tx\") {\n            // There are remaining transaction event listeners\n            if (this._events.filter((e) => (e.type === \"tx\")).length) {\n                return;\n            }\n            tag = \"tx\";\n        } else if (this.listenerCount(event.event)) {\n            // There are remaining event listeners\n            return;\n        }\n\n        const subId = this._subIds[tag];\n        if (!subId) { return; }\n\n       delete this._subIds[tag];\n       subId.then((subId) => {\n            if (!this._subs[subId]) { return; }\n            delete this._subs[subId];\n            this.send(\"eth_unsubscribe\", [ subId ]);\n        });\n    }\n\n    async destroy(): Promise<void> {\n        // Wait until we have connected before trying to disconnect\n        if (this.websocket.readyState === WebSocket.CONNECTING) {\n            await (new Promise((resolve) => {\n                this.websocket.onopen = function() {\n                    resolve(true);\n                };\n\n                this.websocket.onerror = function() {\n                    resolve(false);\n                };\n            }));\n        }\n\n        // Hangup\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n        this.websocket.close(1000);\n    }\n}\n","\n\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly, getStatic } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { CommunityResourcable } from \"./formatter\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\n\ntype getUrlFunc = (network: Network, apiKey: string) => string | ConnectionInfo;\n\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nexport class StaticJsonRpcProvider extends JsonRpcProvider {\n    async detectNetwork(): Promise<Network> {\n        let network = this.network;\n        if (network == null) {\n            network = await super.detectNetwork();\n\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // If still not set, set it\n            if (this._network == null) {\n                // A static network does not support \"any\"\n                defineReadOnly(this, \"_network\", network);\n\n                this.emit(\"network\", network, null);\n            }\n        }\n        return network;\n    }\n}\n\nexport abstract class UrlJsonRpcProvider extends StaticJsonRpcProvider implements CommunityResourcable {\n    readonly apiKey: any;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        logger.checkAbstract(new.target, UrlJsonRpcProvider);\n\n        // Normalize the Network and API Key\n        network = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n        apiKey = getStatic<(apiKey: string) => string>(new.target, \"getApiKey\")(apiKey);\n\n        const connection = getStatic<getUrlFunc>(new.target, \"getUrl\")(network, apiKey);\n\n        super(connection, network);\n\n        if (typeof(apiKey) === \"string\") {\n            defineReadOnly(this, \"apiKey\", apiKey);\n        } else if (apiKey != null) {\n            Object.keys(apiKey).forEach((key) => {\n                defineReadOnly<any, any>(this, key, apiKey[key]);\n            });\n        }\n    }\n\n    _startPending(): void {\n        logger.warn(\"WARNING: API provider does not support pending filters\");\n    }\n\n    isCommunityResource(): boolean {\n        return false;\n    }\n\n    getSigner(address?: string): JsonRpcSigner {\n        return logger.throwError(\n            \"API provider does not support signing\",\n            Logger.errors.UNSUPPORTED_OPERATION,\n            { operation: \"getSigner\" }\n        );\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return Promise.resolve([]);\n    }\n\n    // Return a defaultApiKey if null, otherwise validate the API key\n    static getApiKey(apiKey: any): any {\n        return apiKey;\n    }\n\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n    static getUrl(network: Network, apiKey: any): string | ConnectionInfo {\n        return logger.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n            operation: \"getUrl\"\n        });\n    }\n}\n","\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\nimport { WebSocketProvider } from \"./websocket-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\n\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\"\n\nexport class AlchemyWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new AlchemyProvider(network, apiKey);\n\n        const url = provider.connection.url.replace(/^http/i, \"ws\")\n                                           .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n\n        super(url, provider.network);\n        defineReadOnly(this, \"apiKey\", provider.apiKey);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n\nexport class AlchemyProvider extends UrlJsonRpcProvider {\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): AlchemyWebSocketProvider {\n        return new AlchemyWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: string): ConnectionInfo {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.alchemyapi.io/v2/\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.alchemyapi.io/v2/\";\n                break;\n            case \"kovan\":\n                host = \"eth-kovan.alchemyapi.io/v2/\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum\":\n                host = \"arb-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum-rinkeby\":\n                host = \"arb-rinkeby.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum-goerli\":\n                host = \"arb-goerli.g.alchemy.com/v2/\";\n                break;\n            case \"optimism\":\n                host = \"opt-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"optimism-kovan\":\n                host = \"opt-kovan.g.alchemy.com/v2/\";\n                break;\n            case \"optimism-goerli\":\n                host = \"opt-goerli.g.alchemy.com/v2/\"\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n","\nimport { Network } from \"@ethersproject/networks\";\n\nimport { showThrottleMessage } from \"./formatter\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport type { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n\nconst defaultApiKey = \"9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972\";\n\nfunction getHost(name: string): string {\n    switch (name) {\n        case \"homestead\":\n            return \"rpc.ankr.com/eth/\";\n        case \"ropsten\":\n            return \"rpc.ankr.com/eth_ropsten/\";\n        case \"rinkeby\":\n            return \"rpc.ankr.com/eth_rinkeby/\";\n        case \"goerli\":\n            return \"rpc.ankr.com/eth_goerli/\";\n\n        case \"matic\":\n            return \"rpc.ankr.com/polygon/\";\n\n        case \"arbitrum\":\n            return \"rpc.ankr.com/arbitrum/\";\n    }\n    return logger.throwArgumentError(\"unsupported network\", \"name\", name);\n}\n\nexport class AnkrProvider extends UrlJsonRpcProvider {\n    readonly apiKey: string;\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        if (apiKey == null) { apiKey = defaultApiKey; }\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\\/\" + getHost(network.name) + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n}\n","\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport class CloudflareProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey != null) {\n            logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return host;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // The Cloudflare provider does not support eth_blockNumber,\n        // so we get the latest block and pull it from that\n        if (method === \"getBlockNumber\") {\n            const block = await super.perform(\"getBlock\", { blockTag: \"latest\" });\n            return block.number;\n        }\n\n        return super.perform(method, params);\n    }\n}\n","\"use strict\";\n\nimport { BlockTag, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson } from \"@ethersproject/web\";\n\nimport { showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider } from \"./base-provider\";\n\n\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction: TransactionRequest): Record<string, string> {\n    const result: Record<string, string> = { };\n    for (let key in transaction) {\n        if ((<any>transaction)[key] == null) { continue; }\n        let value = (<any>transaction)[key];\n        if (key === \"type\" && value === 0) { continue; }\n\n        // Quantity-types require no leading zero, unless 0\n        if ((<any>{ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true })[key]) {\n            value = hexValue(hexlify(value));\n        } else if (key === \"accessList\") {\n            value = \"[\" + accessListify(value).map((set) => {\n                return `{address:\"${ set.address }\",storageKeys:[\"${ set.storageKeys.join('\",\"') }\"]}`;\n            }).join(\",\") + \"]\";\n        } else {\n            value = hexlify(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\n\nfunction getResult(result: { status?: number, message?: string, result?: any }): any {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n\n    if (result.status != 1 || typeof(result.message) !== \"string\" || !result.message.match(/^OK/)) {\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n\n    return result.result;\n}\n\nfunction getJsonResult(result: { jsonrpc: string, result?: any, error?: { code?: number, data?: any, message?: string} } ): any {\n    // This response indicates we are being throttled\n    if (result && (<any>result).status == 0 && (<any>result).message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        const error: any = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n\n    if (result.error) {\n        // @TODO: not any\n        const error: any = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) { error.code = result.error.code; }\n        if (result.error.data) { error.data = result.error.data; }\n        throw error;\n    }\n\n    return result.result;\n}\n\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag: string): number | \"latest\" {\n    if (blockTag === \"pending\") { throw new Error(\"pending not supported\"); }\n    if (blockTag === \"latest\") { return blockTag; }\n\n    return parseInt(blockTag.substring(2), 16);\n}\n\n\nfunction checkError(method: string, error: any, transaction: any): any {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n\n        // Etherscan keeps changing their string\n        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n            // Etherscan prefixes the data like \"Reverted 0x1234\"\n            let data = e.data;\n            if (data) { data = \"0x\" + data.replace(/^.*0x/i, \"\"); }\n\n            if (isHexString(data)) { return data; }\n\n            logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n                error, data: \"0x\"\n            });\n        }\n    }\n\n    // Get the message from any nested error structure\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR) {\n        if (error.error && typeof(error.error.message) === \"string\") {\n            message = error.error.message;\n        } else if (typeof(error.body) === \"string\") {\n            message = error.body;\n        } else if (typeof(error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n         logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n         });\n    }\n\n    if (message.match(/execution failed due to an exception|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nexport class EtherscanProvider extends BaseProvider{\n    readonly baseUrl: string;\n    readonly apiKey: string | null;\n\n    constructor(network?: Networkish, apiKey?: string) {\n        super(network);\n\n        defineReadOnly(this, \"baseUrl\", this.getBaseUrl());\n        defineReadOnly(this, \"apiKey\", apiKey || null);\n    }\n\n    getBaseUrl(): string {\n        switch(this.network ? this.network.name: \"invalid\") {\n            case \"homestead\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"ropsten\":\n                return \"https:/\\/api-ropsten.etherscan.io\";\n            case \"rinkeby\":\n                return \"https:/\\/api-rinkeby.etherscan.io\";\n            case \"kovan\":\n                return \"https:/\\/api-kovan.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            case \"optimism\":\n                return \"https:/\\/api-optimistic.etherscan.io\";\n            case \"optimism-kovan\":\n                return \"https:/\\/api-kovan-optimistic.etherscan.io\";\n            default:\n        }\n\n        return logger.throwArgumentError(\"unsupported network\", \"network\", this.network.name);\n    }\n\n    getUrl(module: string, params: Record<string, string>): string {\n        const query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${ key }=${ value }`\n            }\n            return accum\n        }, \"\");\n        const apiKey = ((this.apiKey) ? `&apikey=${ this.apiKey }`: \"\");\n        return `${ this.baseUrl }/api?module=${ module }${ query }${ apiKey }`;\n    }\n\n    getPostUrl(): string {\n        return `${ this.baseUrl }/api`;\n    }\n\n    getPostData(module: string, params: Record<string, any>): Record<string, any> {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    }\n\n    async fetch(module: string, params: Record<string, any>, post?: boolean): Promise<any> {\n        const url = (post ? this.getPostUrl(): this.getUrl(module, params));\n        const payload = (post ? this.getPostData(module, params): null);\n        const procFunc = (module === \"proxy\") ? getJsonResult: getResult;\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: url,\n            provider: this\n        });\n\n        const connection: ConnectionInfo = {\n            url: url,\n            throttleSlotInterval: 1000,\n            throttleCallback: (attempt: number, url: string) => {\n                if (this.isCommunityResource()) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        let payloadStr: string = null;\n        if (payload) {\n            connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n            payloadStr = Object.keys(payload).map((key) => {\n                return `${ key }=${ payload[key] }`\n            }).join(\"&\");\n        }\n\n        const result = await fetchJson(connection, payloadStr, procFunc || getJsonResult);\n\n        this.emit(\"debug\", {\n            action: \"response\",\n            request: url,\n            response: deepCopy(result),\n            provider: this\n        });\n\n        return result;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        return this.network;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n\n        switch (method) {\n            case \"getBlockNumber\":\n                return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n\n            case \"getGasPrice\":\n                return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n\n            case \"getBalance\":\n                // Returns base-10 result\n                return this.fetch(\"account\", {\n                    action: \"balance\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getTransactionCount\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionCount\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getCode\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getCode\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getStorageAt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getStorageAt\",\n                    address: params.address,\n                    position: params.position,\n                    tag: params.blockTag\n                });\n\n            case \"sendTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_sendRawTransaction\",\n                    hex: params.signedTransaction\n                }, true).catch((error) => {\n                    return checkError(\"sendTransaction\", error, params.signedTransaction);\n                });\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getBlockByNumber\",\n                        tag: params.blockTag,\n                        boolean: (params.includeTransactions ? \"true\": \"false\")\n                    });\n                }\n                throw new Error(\"getBlock by blockHash not implemented\");\n\n            case \"getTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionByHash\",\n                    txhash: params.transactionHash\n                });\n\n            case \"getTransactionReceipt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionReceipt\",\n                    txhash: params.transactionHash\n                });\n\n            case \"call\": {\n                if (params.blockTag !== \"latest\") {\n                    throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                }\n\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_call\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"call\", error, params.transaction);\n                }\n            }\n\n            case \"estimateGas\": {\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_estimateGas\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"estimateGas\", error, params.transaction);\n                }\n            }\n\n            case \"getLogs\": {\n                const args: Record<string, any> = { action: \"getLogs\" }\n\n                if (params.filter.fromBlock) {\n                    args.fromBlock = checkLogTag(params.filter.fromBlock);\n                }\n\n                if (params.filter.toBlock) {\n                    args.toBlock = checkLogTag(params.filter.toBlock);\n                }\n\n                if (params.filter.address) {\n                    args.address = params.filter.address;\n                }\n\n                // @TODO: We can handle slightly more complicated logs using the logs API\n                if (params.filter.topics && params.filter.topics.length > 0) {\n                    if (params.filter.topics.length > 1) {\n                        logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                    }\n\n                    if (params.filter.topics.length === 1) {\n                        const topic0 = params.filter.topics[0];\n                        if (typeof(topic0) !== \"string\" || topic0.length !== 66) {\n                            logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                        }\n                        args.topic0 = topic0;\n                    }\n                }\n\n                const logs: Array<any> = await this.fetch(\"logs\", args);\n\n                // Cache txHash => blockHash\n                let blocks: { [tag: string]: string } = {};\n\n                // Add any missing blockHash to the logs\n                for (let i = 0; i < logs.length; i++) {\n                    const log = logs[i];\n                    if (log.blockHash != null) { continue; }\n                    if (blocks[log.blockNumber] == null) {\n                        const block = await this.getBlock(log.blockNumber);\n                        if (block) {\n                            blocks[log.blockNumber] = block.hash;\n                        }\n                    }\n                    log.blockHash = blocks[log.blockNumber];\n                }\n\n                return logs;\n            }\n\n            case \"getEtherPrice\":\n                if (this.network.name !== \"homestead\") { return 0.0; }\n                return parseFloat((await this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n\n            default:\n                break;\n         }\n\n        return super.perform(method, params);\n    }\n\n    // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window available without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n    async getHistory(addressOrName: string | Promise<string>, startBlock?: BlockTag, endBlock?: BlockTag): Promise<Array<TransactionResponse>> {\n        const params = {\n            action: \"txlist\",\n            address: (await this.resolveName(addressOrName)),\n            startblock: ((startBlock == null) ? 0: startBlock),\n            endblock: ((endBlock == null) ? 99999999: endBlock),\n            sort: \"asc\"\n        };\n\n        const result = await this.fetch(\"account\", params);\n\n        return result.map((tx: any) => {\n            [\"contractAddress\", \"to\"].forEach(function(key) {\n                if (tx[key] == \"\") { delete tx[key]; }\n            });\n            if (tx.creates == null && tx.contractAddress != null) {\n                tx.creates = tx.contractAddress;\n            }\n            const item = this.formatter.transactionResponse(tx);\n            if (tx.timeStamp) { item.timestamp = parseInt(tx.timeStamp); }\n            return item;\n        });\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey == null);\n    }\n}\n","\"use strict\";\n\nexport function shuffled(array: Array<any>): Array<any> {\n    array = array.slice();\n\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n\n    return array;\n}\n","\"use strict\";\n\nimport { Block, BlockWithTransactions, Provider } from \"@ethersproject/abstract-provider\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { shuffled } from \"@ethersproject/random\";\nimport { poll } from \"@ethersproject/web\";\n\nimport { BaseProvider } from \"./base-provider\";\nimport { isCommunityResource } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction now() { return (new Date()).getTime(); }\n\n// Returns to network as long as all agree, or null if any is null.\n// Throws an error if any two networks do not match.\nfunction checkNetworks(networks: Array<Network>): Network {\n    let result = null;\n\n    for (let i = 0; i < networks.length; i++) {\n        const network = networks[i];\n\n        // Null! We do not know our network; bail.\n        if (network == null) { return null; }\n\n        if (result) {\n            // Make sure the network matches the previous networks\n            if (!(result.name === network.name && result.chainId === network.chainId &&\n                ((result.ensAddress === network.ensAddress) || (result.ensAddress == null && network.ensAddress == null)))) {\n\n                logger.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n           }\n        } else {\n            result = network;\n        }\n    }\n\n    return result;\n}\n\nfunction median(values: Array<number>, maxDelta?: number): number {\n    values = values.slice().sort();\n    const middle = Math.floor(values.length / 2);\n\n    // Odd length; take the middle\n    if (values.length % 2) {\n        return values[middle];\n    }\n\n    // Even length; take the average of the two middle\n    const a = values[middle - 1], b = values[middle];\n\n    if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n        return null;\n    }\n\n    return (a + b) / 2;\n}\n\nfunction serialize(value: any): string {\n    if (value === null) {\n        return \"null\";\n    } else if (typeof(value) === \"number\" || typeof(value) === \"boolean\") {\n        return JSON.stringify(value);\n    } else if (typeof(value) === \"string\") {\n        return value;\n    } else if (BigNumber.isBigNumber(value)) {\n        return value.toString();\n    } else if (Array.isArray(value)) {\n        return JSON.stringify(value.map((i) => serialize(i)));\n    } else if (typeof(value) === \"object\") {\n        const keys = Object.keys(value);\n        keys.sort();\n        return \"{\" + keys.map((key) => {\n            let v = value[key];\n            if (typeof(v) === \"function\") {\n                v = \"[function]\";\n            } else {\n                v = serialize(v);\n            }\n            return JSON.stringify(key) + \":\" + v;\n        }).join(\",\") + \"}\";\n    }\n\n    throw new Error(\"unknown value type: \" + typeof(value));\n}\n\n// Next request ID to use for emitting debug info\nlet nextRid = 1;\n\n\nexport interface FallbackProviderConfig {\n    // The Provider\n    provider: Provider;\n\n    // The priority to favour this Provider; lower values are used first (higher priority)\n    priority?: number;\n\n    // Timeout before also triggering the next provider; this does not stop\n    // this provider and if its result comes back before a quorum is reached\n    // it will be incorporated into the vote\n    // - lower values will cause more network traffic but may result in a\n    //   faster result.\n    stallTimeout?: number;\n\n    // How much this provider contributes to the quorum; sometimes a specific\n    // provider may be more reliable or trustworthy than others, but usually\n    // this should be left as the default\n    weight?: number;\n};\n\n// A Staller is used to provide a delay to give a Provider a chance to response\n// before asking the next Provider to try.\ntype Staller = {\n    wait: (func: () => void) => Promise<void>\n    getPromise: () => Promise<void>,\n    cancel: () => void\n};\n\nfunction stall(duration: number): Staller {\n    let cancel: () => void = null;\n\n    let timer: NodeJS.Timer = null;\n    let promise = <Promise<void>>(new Promise((resolve) => {\n        cancel = function() {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve();\n        }\n        timer = setTimeout(cancel, duration);\n    }));\n\n    const wait = (func: () => void) => {\n        promise = promise.then(func);\n        return promise;\n    }\n\n    function getPromise(): Promise<void> {\n        return promise;\n    }\n\n    return { cancel, getPromise, wait };\n}\n\nconst ForwardErrors = [\n    Logger.errors.CALL_EXCEPTION,\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n    Logger.errors.UNPREDICTABLE_GAS_LIMIT\n];\n\nconst ForwardProperties = [\n    \"address\",\n    \"args\",\n    \"errorArgs\",\n    \"errorSignature\",\n    \"method\",\n    \"transaction\",\n];\n\n\n// @TODO: Make this an object with staller and cancel built-in\ninterface RunningConfig extends FallbackProviderConfig {\n    start?: number;\n    done?: boolean;\n    cancelled?: boolean;\n    runner?: Promise<any>;\n    staller?: Staller;\n    result?: any;\n    error?: Error;\n};\n\nfunction exposeDebugConfig(config: RunningConfig, now?: number): any {\n    const result: any = {\n        weight: config.weight\n    };\n    Object.defineProperty(result, \"provider\", { get: () => config.provider });\n    if (config.start) { result.start = config.start; }\n    if (now) { result.duration = (now - config.start); }\n    if (config.done) {\n        if (config.error) {\n            result.error = config.error;\n        } else {\n            result.result = config.result || null;\n        }\n    }\n    return result;\n}\n\nfunction normalizedTally(normalize: (value: any) => string, quorum: number): (configs: Array<RunningConfig>) => any {\n    return function(configs: Array<RunningConfig>): any {\n\n        // Count the votes for each result\n        const tally: { [ key: string]: { count: number, result: any } } = { };\n        configs.forEach((c) => {\n            const value = normalize(c.result);\n            if (!tally[value]) { tally[value] = { count: 0, result: c.result }; }\n            tally[value].count++;\n        });\n\n        // Check for a quorum on any given result\n        const keys = Object.keys(tally);\n        for (let i = 0; i < keys.length; i++) {\n            const check = tally[keys[i]];\n            if (check.count >= quorum) {\n                return check.result;\n            }\n        }\n\n        // No quroum\n        return undefined;\n    }\n}\nfunction getProcessFunc(provider: FallbackProvider, method: string, params: { [ key: string ]: any }): (configs: Array<RunningConfig>) => any {\n\n    let normalize = serialize;\n\n    switch (method) {\n        case \"getBlockNumber\":\n            // Return the median value, unless there is (median + 1) is also\n            // present, in which case that is probably true and the median\n            // is going to be stale soon. In the event of a malicious node,\n            // the lie will be true soon enough.\n            return function(configs: Array<RunningConfig>): number {\n                const values = configs.map((c) => c.result);\n\n                // Get the median block number\n                let blockNumber = median(configs.map((c) => c.result), 2);\n                if (blockNumber == null) { return undefined; }\n\n                blockNumber = Math.ceil(blockNumber);\n\n                // If the next block height is present, its prolly safe to use\n                if (values.indexOf(blockNumber + 1) >= 0) { blockNumber++; }\n\n                // Don't ever roll back the blockNumber\n                if (blockNumber >= provider._highestBlockNumber) {\n                    provider._highestBlockNumber = blockNumber;\n                }\n\n                return provider._highestBlockNumber;\n            };\n\n        case \"getGasPrice\":\n            // Return the middle (round index up) value, similar to median\n            // but do not average even entries and choose the higher.\n            // Malicious actors must compromise 50% of the nodes to lie.\n            return function(configs: Array<RunningConfig>): BigNumber {\n                const values = configs.map((c) => c.result);\n                values.sort();\n                return values[Math.floor(values.length / 2)];\n            }\n\n        case \"getEtherPrice\":\n            // Returns the median price. Malicious actors must compromise at\n            // least 50% of the nodes to lie (in a meaningful way).\n            return function(configs: Array<RunningConfig>): number {\n                return median(configs.map((c) => c.result));\n            }\n\n        // No additional normalizing required; serialize is enough\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n        case \"getStorageAt\":\n        case \"call\":\n        case \"estimateGas\":\n        case \"getLogs\":\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            normalize = function(tx: any): string {\n                if (tx == null) { return null; }\n\n                tx = shallowCopy(tx);\n                tx.confirmations = -1;\n                return serialize(tx);\n            }\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getBlock\":\n            // We drop the confirmations from transactions as it is approximate\n            if (params.includeTransactions) {\n                normalize = function(block: BlockWithTransactions): string {\n                    if (block == null) { return null; }\n\n                    block = shallowCopy(block);\n                    block.transactions = block.transactions.map((tx) => {\n                        tx = shallowCopy(tx);\n                        tx.confirmations = -1;\n                        return tx;\n                    });\n                    return serialize(block);\n                };\n            } else {\n                normalize = function(block: Block): string {\n                    if (block == null) { return null; }\n                    return serialize(block);\n                }\n            }\n            break;\n\n        default:\n            throw new Error(\"unknown method: \" + method);\n    }\n\n    // Return the result if and only if the expected quorum is\n    // satisfied and agreed upon for the final result.\n    return normalizedTally(normalize, provider.quorum);\n\n}\n\n// If we are doing a blockTag query, we need to make sure the backend is\n// caught up to the FallbackProvider, before sending a request to it.\nasync function waitForSync(config: RunningConfig, blockNumber: number): Promise<BaseProvider> {\n    const provider = <BaseProvider>(config.provider);\n\n    if ((provider.blockNumber != null && provider.blockNumber >= blockNumber) || blockNumber === -1) {\n        return provider;\n    }\n\n    return poll(() => {\n        return new Promise((resolve, reject) => {\n            setTimeout(function() {\n\n                // We are synced\n                if (provider.blockNumber >= blockNumber) { return resolve(provider); }\n\n                // We're done; just quit\n                if (config.cancelled) { return resolve(null); }\n\n                // Try again, next block\n                return resolve(undefined);\n            }, 0);\n        });\n    }, { oncePoll: provider });\n}\n\nasync function getRunner(config: RunningConfig, currentBlockNumber: number, method: string, params: { [ key: string]: any }): Promise<any> {\n    let provider = config.provider;\n\n    switch (method) {\n        case \"getBlockNumber\":\n        case \"getGasPrice\":\n            return provider[method]();\n        case \"getEtherPrice\":\n            if ((<any>provider).getEtherPrice) {\n                return (<any>provider).getEtherPrice();\n            }\n            break;\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[method](params.address, params.blockTag || \"latest\");\n        case \"getStorageAt\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\");\n        case \"getBlock\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[(params.includeTransactions ? \"getBlockWithTransactions\": \"getBlock\")](params.blockTag || params.blockHash);\n        case \"call\":\n        case \"estimateGas\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            if (method === \"call\" && params.blockTag) {\n                return provider[method](params.transaction, params.blockTag);\n            }\n            return provider[method](params.transaction);\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            return provider[method](params.transactionHash);\n        case \"getLogs\": {\n            let filter = params.filter;\n            if ((filter.fromBlock && isHexString(filter.fromBlock)) || (filter.toBlock && isHexString(filter.toBlock))) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getLogs(filter);\n        }\n    }\n\n    return logger.throwError(\"unknown method error\", Logger.errors.UNKNOWN_ERROR, {\n        method: method,\n        params: params\n    });\n}\n\nexport class FallbackProvider extends BaseProvider {\n    readonly providerConfigs: ReadonlyArray<FallbackProviderConfig>;\n    readonly quorum: number;\n\n    // Due to the highly asyncronous nature of the blockchain, we need\n    // to make sure we never unroll the blockNumber due to our random\n    // sample of backends\n    _highestBlockNumber: number;\n\n    constructor(providers: Array<Provider | FallbackProviderConfig>, quorum?: number) {\n        if (providers.length === 0) {\n            logger.throwArgumentError(\"missing providers\", \"providers\", providers);\n        }\n\n        const providerConfigs: Array<FallbackProviderConfig> = providers.map((configOrProvider, index) => {\n            if (Provider.isProvider(configOrProvider)) {\n                const stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n                const priority = 1;\n                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });\n            }\n\n            const config: FallbackProviderConfig = shallowCopy(configOrProvider);\n\n            if (config.priority == null) { config.priority = 1; }\n            if (config.stallTimeout == null) {\n                config.stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n            }\n            if (config.weight == null) { config.weight = 1; }\n\n            const weight = config.weight;\n            if (weight % 1 || weight > 512 || weight < 1) {\n                logger.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", `providers[${ index }].weight`, weight);\n            }\n\n            return Object.freeze(config);\n        });\n\n        const total = providerConfigs.reduce((accum, c) => (accum + c.weight), 0);\n\n        if (quorum == null) {\n            quorum = total / 2;\n        } else if (quorum > total) {\n            logger.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n        }\n\n        // Are all providers' networks are known\n        let networkOrReady: Network | Promise<Network> = checkNetworks(providerConfigs.map((c) => (<any>(c.provider)).network));\n\n        // Not all networks are known; we must stall\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then(resolve, reject);\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Preserve a copy, so we do not get mutated\n        defineReadOnly(this, \"providerConfigs\", Object.freeze(providerConfigs));\n        defineReadOnly(this, \"quorum\", quorum);\n\n        this._highestBlockNumber = -1;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        const networks = await Promise.all(this.providerConfigs.map((c) => c.provider.getNetwork()));\n        return checkNetworks(networks);\n    }\n\n    async perform(method: string, params: { [name: string]: any }): Promise<any> {\n        // Sending transactions is special; always broadcast it to all backends\n        if (method === \"sendTransaction\") {\n            const results: Array<string | Error> = await Promise.all(this.providerConfigs.map((c) => {\n                return c.provider.sendTransaction(params.signedTransaction).then((result) => {\n                    return result.hash;\n                }, (error) => {\n                    return error;\n                });\n            }));\n\n            // Any success is good enough (other errors are likely \"already seen\" errors\n            for (let i = 0; i < results.length; i++) {\n                const result = results[i];\n                if (typeof(result) === \"string\") { return result; }\n            }\n\n            // They were all an error; pick the first error\n            throw results[0];\n        }\n\n        // We need to make sure we are in sync with our backends, so we need\n        // to know this before we can make a lot of calls\n        if (this._highestBlockNumber === -1 && method !== \"getBlockNumber\") {\n            await this.getBlockNumber();\n        }\n\n        const processFunc = getProcessFunc(this, method, params);\n\n        // Shuffle the providers and then sort them by their priority; we\n        // shallowCopy them since we will store the result in them too\n        const configs: Array<RunningConfig> = shuffled(this.providerConfigs.map(shallowCopy));\n        configs.sort((a, b) => (a.priority - b.priority));\n\n        const currentBlockNumber = this._highestBlockNumber;\n\n        let i = 0;\n        let first = true;\n        while (true) {\n            const t0 = now();\n\n            // Compute the inflight weight (exclude anything past)\n            let inflightWeight = configs.filter((c) => (c.runner && ((t0 - c.start) < c.stallTimeout)))\n                                        .reduce((accum, c) => (accum + c.weight), 0);\n\n            // Start running enough to meet quorum\n            while (inflightWeight < this.quorum && i < configs.length) {\n                const config = configs[i++];\n\n                const rid = nextRid++;\n\n                config.start = now();\n                config.staller = stall(config.stallTimeout);\n                config.staller.wait(() => { config.staller = null; });\n\n                config.runner = getRunner(config, currentBlockNumber, method, params).then((result) => {\n                    config.done = true;\n                    config.result = result;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                     }\n\n                }, (error) => {\n                    config.done = true;\n                    config.error = error;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                    }\n                });\n\n                if (this.listenerCount(\"debug\")) {\n                    this.emit(\"debug\", {\n                        action: \"request\",\n                        rid: rid,\n                        backend: exposeDebugConfig(config, null),\n                        request: { method: method, params: deepCopy(params) },\n                        provider: this\n                    });\n                }\n\n                inflightWeight += config.weight;\n            }\n\n            // Wait for anything meaningful to finish or stall out\n            const waiting: Array<Promise<any>> = [ ];\n            configs.forEach((c) => {\n                if (c.done || !c.runner) { return; }\n                waiting.push(c.runner);\n                if (c.staller) { waiting.push(c.staller.getPromise()); }\n            });\n\n            if (waiting.length) { await Promise.race(waiting); }\n\n            // Check the quorum and process the results; the process function\n            // may additionally decide the quorum is not met\n            const results = configs.filter((c) => (c.done && c.error == null));\n            if (results.length >= this.quorum) {\n                const result = processFunc(results);\n                if (result !== undefined) {\n                    // Shut down any stallers\n                    configs.forEach(c => {\n                        if (c.staller) { c.staller.cancel(); }\n                        c.cancelled = true;\n                    });\n                    return result;\n                }\n                if (!first) { await stall(100).getPromise(); }\n                first = false;\n            }\n\n            // No result, check for errors that should be forwarded\n            const errors = configs.reduce((accum, c) => {\n                if (!c.done || c.error == null) { return accum; }\n\n                const code = (<any>(c.error)).code;\n                if (ForwardErrors.indexOf(code) >= 0) {\n                    if (!accum[code]) { accum[code] = { error: c.error, weight: 0 }; }\n                    accum[code].weight += c.weight;\n                }\n\n                return accum;\n            }, <{ [ code: string ]: { error: Error, weight: number } }>({ }));\n\n            Object.keys(errors).forEach((errorCode: string) => {\n                const tally = errors[errorCode];\n                if (tally.weight < this.quorum) { return; }\n\n                // Shut down any stallers\n                configs.forEach(c => {\n                    if (c.staller) { c.staller.cancel(); }\n                    c.cancelled = true;\n                });\n\n                const e = <any>(tally.error);\n\n                const props: { [ name: string ]: any } = { };\n                ForwardProperties.forEach((name) => {\n                    if (e[name] == null) { return; }\n                    props[name] = e[name];\n                });\n\n                logger.throwError(e.reason || e.message, <any>errorCode, props);\n            });\n\n            // All configs have run to completion; we will never get more data\n            if (configs.filter((c) => !c.done).length === 0) { break; }\n        }\n\n        // Shut down any stallers; shouldn't be any\n        configs.forEach(c => {\n            if (c.staller) { c.staller.cancel(); }\n            c.cancelled = true;\n        });\n\n        return logger.throwError(\"failed to meet quorum\", Logger.errors.SERVER_ERROR, {\n            method: method,\n            params: params,\n            //results: configs.map((c) => c.result),\n            //errors: configs.map((c) => c.error),\n            results: configs.map((c) => exposeDebugConfig(c)),\n            provider: this\n        });\n    }\n}\n","\"use strict\";\n\nconst IpcProvider: any = null;\n\nexport {\n    IpcProvider\n};\n","\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n\nconst defaultProjectId = \"84842078b09946638c03157f83405213\"\n\nexport class InfuraWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new InfuraProvider(network, apiKey);\n        const connection = provider.connection;\n        if (connection.password) {\n            logger.throwError(\"INFURA WebSocket project secrets unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n            });\n        }\n\n        const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, network);\n\n        defineReadOnly(this, \"apiKey\", provider.projectId);\n        defineReadOnly(this, \"projectId\", provider.projectId);\n        defineReadOnly(this, \"projectSecret\", provider.projectSecret);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n\nexport class InfuraProvider extends UrlJsonRpcProvider {\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): InfuraWebSocketProvider {\n        return new InfuraWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        const apiKeyObj: { apiKey: string, projectId: string, projectSecret: string } = {\n            apiKey: defaultProjectId,\n            projectId: defaultProjectId,\n            projectSecret: null\n        };\n\n        if (apiKey == null) { return apiKeyObj; }\n\n        if (typeof(apiKey) === \"string\") {\n            apiKeyObj.projectId = apiKey;\n\n        } else if (apiKey.projectSecret != null) {\n            logger.assertArgument((typeof(apiKey.projectId) === \"string\"),\n                \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n            logger.assertArgument((typeof(apiKey.projectSecret) === \"string\"),\n                \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n\n            apiKeyObj.projectId = apiKey.projectId;\n            apiKeyObj.projectSecret = apiKey.projectSecret;\n\n        } else if (apiKey.projectId) {\n            apiKeyObj.projectId = apiKey.projectId;\n        }\n\n        apiKeyObj.apiKey = apiKeyObj.projectId;\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch(network ? network.name: \"unknown\") {\n            case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n            case \"ropsten\":\n                host = \"ropsten.infura.io\";\n                break;\n            case \"rinkeby\":\n                host = \"rinkeby.infura.io\";\n                break;\n            case \"kovan\":\n                host = \"kovan.infura.io\";\n                break;\n            case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.infura.io\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.infura.io\";\n                break;\n            case \"optimism\":\n                host = \"optimism-mainnet.infura.io\";\n                break;\n            case \"optimism-kovan\":\n                host = \"optimism-kovan.infura.io\";\n                break;\n            case \"arbitrum\":\n                host = \"arbitrum-mainnet.infura.io\";\n                break;\n            case \"arbitrum-rinkeby\":\n                host = \"arbitrum-rinkeby.infura.io\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.projectId === defaultProjectId) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n","\nimport { deepCopy } from \"@ethersproject/properties\";\nimport { fetchJson } from \"@ethersproject/web\";\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Experimental\n\nexport class JsonRpcBatchProvider extends JsonRpcProvider {\n    _pendingBatchAggregator: NodeJS.Timer;\n    _pendingBatch: Array<{\n        request: { method: string, params: Array<any>, id: number, jsonrpc: \"2.0\" },\n        resolve: (result: any) => void,\n        reject: (error: Error) => void\n    }>;\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        if (this._pendingBatch == null) {\n            this._pendingBatch = [ ];\n        }\n\n        const inflightRequest: any = { request, resolve: null, reject: null };\n\n        const promise = new Promise((resolve, reject) => {\n            inflightRequest.resolve = resolve;\n            inflightRequest.reject = reject;\n        });\n\n        this._pendingBatch.push(inflightRequest);\n\n        if (!this._pendingBatchAggregator) {\n            // Schedule batch for next event loop + short duration\n            this._pendingBatchAggregator = setTimeout(() => {\n\n                // Get teh current batch and clear it, so new requests\n                // go into the next batch\n                const batch = this._pendingBatch;\n                this._pendingBatch = null;\n                this._pendingBatchAggregator = null;\n\n                // Get the request as an array of requests\n                const request = batch.map((inflight) => inflight.request);\n\n                this.emit(\"debug\", {\n                    action: \"requestBatch\",\n                    request: deepCopy(request),\n                    provider: this\n                });\n\n                return fetchJson(this.connection, JSON.stringify(request)).then((result) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: request,\n                        response: result,\n                        provider: this\n                    });\n\n                    // For each result, feed it to the correct Promise, depending\n                    // on whether it was a success or error\n                    batch.forEach((inflightRequest, index) => {\n                        const payload = result[index];\n                        if (payload.error) {\n                            const error = new Error(payload.error.message);\n                            (<any>error).code = payload.error.code;\n                            (<any>error).data = payload.error.data;\n                            inflightRequest.reject(error);\n                        } else {\n                            inflightRequest.resolve(payload.result);\n                        }\n                    });\n\n                }, (error) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: request,\n                        provider: this\n                    });\n\n                    batch.forEach((inflightRequest) => {\n                        inflightRequest.reject(error);\n                    });\n                });\n\n            }, 10);\n        }\n\n        return promise;\n    }\n}\n","/* istanbul ignore file */\n\n\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Special API key provided by Nodesmith for ethers.js\nconst defaultApiKey = \"ETHERS_JS_SHARED\";\n\nexport class NodesmithProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey || defaultApiKey;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        logger.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n                break;\n            case \"ropsten\":\n                host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n                break;\n            case \"rinkeby\":\n                host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n                break;\n            case \"goerli\":\n                host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n                break;\n            case \"kovan\":\n                host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return (host + \"?apiKey=\" + apiKey);\n    }\n}\n","\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nconst defaultApplicationId = \"62e1ad51b37b8e00394bda3b\";\n\n\nexport class PocketProvider extends UrlJsonRpcProvider {\n    readonly applicationId: string;\n    readonly applicationSecretKey: string;\n    readonly loadBalancer: boolean;\n\n    static getApiKey(apiKey: any): any {\n        const apiKeyObj: { applicationId: string, applicationSecretKey: string, loadBalancer: boolean } = {\n            applicationId: null,\n            loadBalancer: true,\n            applicationSecretKey: null\n        };\n\n        // Parse applicationId and applicationSecretKey\n        if (apiKey == null) {\n            apiKeyObj.applicationId = defaultApplicationId;\n\n        } else if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n\n        } else if (apiKey.applicationSecretKey != null) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n\n        } else if (apiKey.applicationId) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n\n        } else {\n            logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"kovan\":\n                host = \"poa-kovan.gateway.pokt.network\";\n                break;\n            case \"matic\":\n                host = \"poly-mainnet.gateway.pokt.network\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai-rpc.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        const url = `https:/\\/${ host }/v1/lb/${ apiKey.applicationId }`\n\n        const connection: ConnectionInfo = { headers: { }, url };\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.applicationId === defaultApplicationId);\n    }\n}\n","\"use strict\";\n\nimport { Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Exported Types\nexport type ExternalProvider = {\n    isMetaMask?: boolean;\n    isStatus?: boolean;\n    host?: string;\n    path?: string;\n    sendAsync?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    send?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    request?: (request: { method: string, params?: Array<any> }) => Promise<any>\n}\n\nlet _nextId = 1;\n\nexport type JsonRpcFetchFunc = (method: string, params?: Array<any>) => Promise<any>;\n\ntype Web3LegacySend = (request: any, callback: (error: Error, response: any) => void) => void;\n\nfunction buildWeb3LegacyFetcher(provider: ExternalProvider, sendFunc: Web3LegacySend) : JsonRpcFetchFunc {\n    const fetcher = \"Web3LegacyFetcher\";\n\n    return function(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        return new Promise((resolve, reject) => {\n            this.emit(\"debug\", {\n                action: \"request\",\n                fetcher,\n                request: deepCopy(request),\n                provider: this\n            });\n\n            sendFunc(request, (error, response) => {\n\n                if (error) {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher,\n                        error,\n                        request,\n                        provider: this\n                    });\n\n                    return reject(error);\n                }\n\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher,\n                    request,\n                    response,\n                    provider: this\n                });\n\n                if (response.error) {\n                    const error = new Error(response.error.message);\n                    (<any>error).code = response.error.code;\n                    (<any>error).data = response.error.data;\n                    return reject(error);\n                }\n\n                resolve(response.result);\n            });\n        });\n    }\n}\n\nfunction buildEip1193Fetcher(provider: ExternalProvider): JsonRpcFetchFunc {\n    return function(method: string, params: Array<any>): Promise<any> {\n        if (params == null) { params = [ ]; }\n\n        const request = { method, params };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        return provider.request(request).then((response) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                response,\n                provider: this\n            });\n\n            return response;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                error,\n                provider: this\n            });\n\n            throw error;\n        });\n    }\n}\n\nexport class Web3Provider extends JsonRpcProvider {\n    readonly provider: ExternalProvider;\n    readonly jsonRpcFetchFunc: JsonRpcFetchFunc;\n\n    constructor(provider: ExternalProvider | JsonRpcFetchFunc, network?: Networkish) {\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n\n        let path: string = null;\n        let jsonRpcFetchFunc: JsonRpcFetchFunc = null;\n        let subprovider: ExternalProvider = null;\n\n        if (typeof(provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n\n        } else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n\n            subprovider = provider;\n\n            if (provider.request) {\n                if (path === \"\") { path = \"eip-1193:\"; }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            } else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            } else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            } else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n\n            if (!path) { path = \"unknown:\"; }\n        }\n\n        super(path, network);\n\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n","\"use strict\";\n\nimport {\n    Block,\n    BlockTag,\n    EventType,\n    FeeData,\n    Filter,\n    Log,\n    Listener,\n    Provider,\n    TransactionReceipt,\n    TransactionRequest,\n    TransactionResponse\n} from \"@ethersproject/abstract-provider\";\n\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\n\nimport { BaseProvider, EnsProvider, EnsResolver, Resolver } from \"./base-provider\";\n\nimport { AlchemyProvider, AlchemyWebSocketProvider } from \"./alchemy-provider\";\nimport { AnkrProvider } from \"./ankr-provider\";\nimport { CloudflareProvider } from \"./cloudflare-provider\";\nimport { EtherscanProvider } from \"./etherscan-provider\";\nimport { FallbackProvider, FallbackProviderConfig } from \"./fallback-provider\";\nimport { IpcProvider } from \"./ipc-provider\";\nimport { InfuraProvider, InfuraWebSocketProvider } from \"./infura-provider\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\nimport { JsonRpcBatchProvider } from \"./json-rpc-batch-provider\";\nimport { NodesmithProvider } from \"./nodesmith-provider\";\nimport { PocketProvider } from \"./pocket-provider\";\nimport { StaticJsonRpcProvider, UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Web3Provider } from \"./web3-provider\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { ExternalProvider, JsonRpcFetchFunc } from \"./web3-provider\";\n\nimport { CommunityResourcable, Formatter, isCommunityResourcable, isCommunityResource, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n////////////////////////\n// Helper Functions\n\nfunction getDefaultProvider(network?: Networkish, options?: any): BaseProvider {\n    if (network == null) { network = \"homestead\"; }\n\n    // If passed a URL, figure out the right type of provider based on the scheme\n    if (typeof(network) === \"string\") {\n        // @TODO: Add support for IpcProvider; maybe if it ends in \".ipc\"?\n\n        // Handle http and ws (and their secure variants)\n        const match = network.match(/^(ws|http)s?:/i);\n        if (match) {\n            switch (match[1].toLowerCase()) {\n                case \"http\": case \"https\":\n                    return new JsonRpcProvider(network);\n                case \"ws\": case \"wss\":\n                    return new WebSocketProvider(network);\n                default:\n                    logger.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n            }\n        }\n    }\n\n    const n = getNetwork(network);\n    if (!n || !n._defaultProvider) {\n        logger.throwError(\"unsupported getDefaultProvider network\", Logger.errors.NETWORK_ERROR, {\n            operation: \"getDefaultProvider\",\n            network: network\n        });\n    }\n\n    return n._defaultProvider({\n        FallbackProvider,\n\n        AlchemyProvider,\n        AnkrProvider,\n        CloudflareProvider,\n        EtherscanProvider,\n        InfuraProvider,\n        JsonRpcProvider,\n        NodesmithProvider,\n        PocketProvider,\n        Web3Provider,\n\n        IpcProvider,\n    }, options);\n}\n\n////////////////////////\n// Exports\n\nexport {\n\n    // Abstract Providers (or Abstract-ish)\n    Provider,\n    BaseProvider,\n\n    Resolver,\n\n    UrlJsonRpcProvider,\n\n    ///////////////////////\n    // Concrete Providers\n\n    FallbackProvider,\n\n    AlchemyProvider,\n    AlchemyWebSocketProvider,\n    AnkrProvider,\n    CloudflareProvider,\n    EtherscanProvider,\n    InfuraProvider,\n    InfuraWebSocketProvider,\n    JsonRpcProvider,\n    JsonRpcBatchProvider,\n    NodesmithProvider,\n    PocketProvider,\n    StaticJsonRpcProvider,\n    Web3Provider,\n    WebSocketProvider,\n\n    IpcProvider,\n\n\n    ///////////////////////\n    // Signer\n\n    JsonRpcSigner,\n\n\n    ///////////////////////\n    // Functions\n\n    getDefaultProvider,\n    getNetwork,\n    isCommunityResource,\n    isCommunityResourcable,\n    showThrottleMessage,\n\n\n    ///////////////////////\n    // Objects\n\n    Formatter,\n\n\n    ///////////////////////\n    // Types\n\n    Block,\n    BlockTag,\n    EventType,\n    FeeData,\n    Filter,\n    Log,\n    Listener,\n    TransactionReceipt,\n    TransactionRequest,\n    TransactionResponse,\n\n    ExternalProvider,\n    JsonRpcFetchFunc,\n\n    FallbackProviderConfig,\n\n    Network,\n    Networkish,\n\n    EnsProvider,\n    EnsResolver,\n\n    CommunityResourcable\n};\n\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"names":["logger","Logger","isHexable","value","toHexString","addSlice","array","slice","args","Array","prototype","call","arguments","Uint8Array","apply","isBytesLike","isHexString","length","isBytes","isInteger","constructor","i","v","arrayify","options","checkSafeUint53","result","unshift","parseInt","String","push","allowMissingPrefix","substring","hex","hexPad","throwArgumentError","concat","items","objects","map","item","reduce","accum","offset","object","set","stripZeros","start","match","HexCharacters","hexlify","Math","floor","toString","toLowerCase","hexDataLength","data","hexDataSlice","endOffset","hexConcat","forEach","hexValue","trimmed","hexStripZeros","hexZeroPad","splitSignature","signature","r","s","_vs","recoveryParam","yParityAndS","compact","bytes","vs","zeroPad","recId","BN","_BN","_constructorGuard","MAX_SAFE","_warnedToStringRadix","BigNumber","constructorGuard","throwError","operation","this","_hex","_isBigNumber","Object","freeze","toBigNumber","toBN","fromTwos","toTwos","from","other","add","sub","isZero","throwFault","div","mul","isNeg","umod","pow","isNegative","and","or","xor","maskn","shln","shrn","eq","lt","lte","gt","gte","toNumber","error","BigInt","e","warn","key","type","toHex","anyValue","fault","params","defineReadOnly","name","defineProperty","enumerable","writable","getStatic","ctor","getPrototypeOf","resolveProperties","promises","keys","Promise","resolve","then","all","results","shallowCopy","opaque","bigint","boolean","number","string","_isFrozen","undefined","isArray","isFrozen","_deepCopy","deepCopy","Description","info","ForkEvent","_isForkEvent","Provider","checkAbstract","block","getBlock","gasPrice","getGasPrice","catch","lastBaseFeePerGas","maxFeePerGas","maxPriorityFeePerGas","baseFeePerGas","eventName","listener","on","off","_isProvider","ethDefaultProvider","network","func","providers","providerList","InfuraProvider","infura","EtherscanProvider","etherscan","AlchemyProvider","alchemy","PocketProvider","pocket","provider","indexOf","CloudflareProvider","cloudflare","AnkrProvider","ankr","FallbackProvider","quorum","renetwork","etcDefaultProvider","url","JsonRpcProvider","homestead","chainId","ensAddress","_defaultProvider","ropsten","classicMordor","networks","unspecified","mainnet","morden","testnet","rinkeby","kovan","goerli","kintsugi","classic","classicMorden","classicTestnet","classicKotti","xdai","matic","maticmum","optimism","arbitrum","bnb","bnbt","getNetwork","standard","defaultProvider","UnicodeNormalizationForm","Utf8ErrorReason","BaseX","alphabet","charAt","_alphabetMap","source","digits","carry","j","base","k","_leader","q","TypeError","byte","Error","reverse","Base58","ignoreFunc","reason","output","badCodepoint","BAD_PREFIX","UNEXPECTED_CONTINUE","o","OVERRUN","Utf8ErrorFuncs","ignore","replace","OVERLONG","getUtf8CodePoints","onError","c","extraLength","overlongMask","res","nextChar","MISSING_CONTINUE","OUT_OF_RANGE","UTF16_SURROGATE","toUtf8Bytes","str","form","current","checkNormalize","normalize","charCodeAt","c2","pair","toUtf8String","codePoint","fromCharCode","join","keccak256","sha3","version","flat","depth","flatDeep","arr","val","read_compressed_payload","pos","read_payload","u16","symbol_count","total","acc","skip","pos_payload","read_width","read_buffer","read_bit","FULL","HALF","QRTR","MASK","register","symbols","low","range","end","mid","a","b","x","decode_arithmetic","signed","read_ascending","n","next","read_deltas","read_member_array","lookup","vX","vN","read_counts","read_transposed","w","m","fill","read_linear_table","dx","dy","read_zero_terminated_array","ys","_","j_dy","y","read_replacement_table","decode","VALID","Set","IGNORED","MAPPED","ret","fromEntries","read_mapped_map","EMOJI_ROOT","sorted","sort","read","branches","node","size","temp","valid","fe0f","save","check","read_emoji_trie","explode_cp","toUtf8CodePoints","filter_fe0f","cps","filter","cp","ens_normalize_post_check","split","label","lastIndexOf","every","err","message","ens_normalize","emoji_filter","input","emoji","consume_emoji_reversed","pop","has","toUpperCase","fromCodePoint","eaten","saved","stack","find","_a","splice","Zeros","checkComponent","comp","ensNameSplit","comps","last","namehash","sha256","hash","update","digest","getUrl","href","request","method","headers","body","skipFetchSetup","mode","cache","credentials","redirect","referrer","fetchOptions","opts","fetch","response","arrayBuffer","get","statusCode","status","statusMessage","statusText","staller","duration","setTimeout","bodyify","trim","fetchJson","connection","json","processFunc","updated","attemptLimit","throttleLimit","assertArgument","throttleCallback","throttleSlotInterval","errorPassThrough","allow304","timeout","allowGzip","user","password","allowInsecureAuthentication","argument","authorization","base64Encode","reData","RegExp","dataMatch","base64Decode","requestBody","requestMethod","flatHeaders","header","runningTimeout","timer","promise","reject","makeError","cancel","clearTimeout","runningFetch","attempt","location","tryAgain","stall","retryAfter","random","serverError","throttleRetry","race","_fetchData","JSON","parse","poll","ceiling","interval","done","retryLimit","oncePoll","once","onceBlock","arrayifyInteger","unarrayifyInteger","_encode","payload","child","encode","_decodeChildren","childOffset","decoded","_decode","consumed","lengthLength","getChecksumAddress","address","chars","expanded","hashed","ibanLookup","safeDigits","log10","log","LN10","ibanChecksum","checksum","getAddress","Zero","assert","msg","equal","l","utils","exports","zero2","word","toArray","enc","hi","lo","minAssert","minUtils","getNAF","num","bits","naf","max","bitLength","ws","clone","z","mod","andln","isOdd","isubn","iushrn","getJSF","k1","k2","jsf","m8","d1","d2","cmpn","u1","u2","m14","m24","cachedProperty","obj","computer","parseBytes","intFromLE","BaseCurve","conf","p","red","prime","zero","toRed","one","two","g","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","adjustCount","redN","_maxwellTrick","BasePoint","curve","precomputed","point","validate","_fixedNafMul","doubles","_getDoubles","I","step","nafW","repr","jpoint","mixedAdd","points","neg","toP","_wnafMul","nafPoints","_getNAFPoints","wnd","dblp","_wnafMulAdd","defW","coeffs","len","jacobianResult","wndWidth","comb","cmp","toJ","redNeg","index","ja","jb","tmp","decodePoint","byteLength","pointFromX","encodeCompressed","getX","getY","isEven","precompute","power","beta","_getBeta","_hasDoubles","ceil","dbl","create","module","superCtor","super_","configurable","TempCtor","ShortCurve","Base","tinv","redInvm","zeroA","fromRed","threeA","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","inherits","Point","isRed","inf","forceRed","JPoint","zOne","modn","lambda","betas","_getEndoRoots","lambdas","redMul","basis","vec","_getEndoBasis","ntinv","redSqrt","redAdd","redSub","a0","b0","a1","b1","a2","b2","prevR","aprxSqrt","ushrn","u","x1","y1","x2","y2","len1","sqr","negative","_endoSplit","v1","v2","c1","divRound","p1","p2","q1","q2","odd","redSqr","redIAdd","ax","rhs","redISub","_endoWnafMulAdd","npoints","ncoeffs","ineg","fromJSON","pre","endoMul","toJSON","obj2point","inspect","isInfinity","nx","ny","ys1","dyinv","mulAdd","jmulAdd","_precompute","negate","zinv","zinv2","ay","pz2","z2","s1","s2","h","h2","h3","nz","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","t","yyyy8","d","f","c8","delta","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","eqXToP","zs","rx","xc","iadd","require$$0","short","require$$1","mont","edwards","curves","PresetCurve","defineCurve","HmacDRBG","predResist","outLen","outSize","minEntropy","hmacStrength","_reseed","reseedInterval","K","V","entropy","entropyEnc","nonce","nonceEnc","pers","persEnc","_init","seed","_update","_hmac","kmac","reseed","addEnc","generate","KeyPair","ec","priv","pub","_importPrivate","privEnc","_importPublic","pubEnc","fromPublic","fromPrivate","getPublic","getPrivate","derive","sign","verify","Signature","_importDER","Position","place","getLength","buf","initial","octetLen","rmPadding","constructLength","octets","LN2","rlen","slen","toDER","backHalf","rand","EC","hasOwnProperty","nh","keyPair","keyFromPrivate","keyFromPublic","genKeyPair","drbg","ns2","iaddn","_truncateToN","truncOnly","bkey","ns1","iter","kp","kpX","invm","canonical","sinv","recoverPubKey","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Q","Qprime","elliptic","require$$2","require$$3","eddsa","_curve","getCurve","SigningKey","privateKey","p0","publicKey","digestBytes","otherKey","otherKeyPair","computePublicKey","_isSigningKey","compressed","signingKey","TransactionTypes","handleAddress","handleNumber","recoverAddress","computeAddress","sig","rs","recoverPublicKey","formatNumber","accessSetify","addr","storageKeys","storageKey","accessListify","localeCompare","formatAccessList","_serializeEip1559","transaction","fields","gasLimit","to","accessList","RLP","_serializeEip2930","_parseEipSignature","tx","serialize","recid","rawTransaction","raw","_parse","_parseEip2930","_parseEip1559","transactionType","Formatter","formats","getDefaultFormats","bind","bigNumber","blockTag","allowNull","blockHash","blockNumber","transactionIndex","confirmations","uint256","creates","transactionRequest","receiptLog","transactionHash","topics","arrayOf","logIndex","receipt","contractAddress","root","gasUsed","logsBloom","logs","cumulativeGasUsed","effectiveGasPrice","parentHash","timestamp","difficulty","miner","extraData","transactions","blockWithTransactions","transactionResponse","fromBlock","toBlock","filterLog","removed","allowFalsish","strict","getContractAddress","format","author","_difficulty","_block","gas","networkId","parseTransaction","byzantium","checkKey","checkValue","nullValue","replaceValue","isCommunityResourcable","isCommunityResource","throttleMessage","showThrottleMessage","console","checkTopic","topic","serializeTopics","unique","getEventTag","isForkEvent","getTime","Date","PollableEvents","Event","tag","_lastBlockNumber","_inflight","coinInfos","symbol","p2pkh","p2sh","prefix","ilk","bytes32ify","base58Encode","matcherIpfs","matchers","_parseString","_parseBytes","getIpfsLink","link","numPad","padded","bytesPad","encodeBytes","datas","byteCount","Resolver","resolvedAddress","formatter","_supportsEip2544","code","selector","parameters","ccipReadEnabled","supportsWildcard","CALL_EXCEPTION","_fetch","coinType","hexBytes","coinInfo","words","bech32","HashZero","callAddress","_fetchBytes","_getAddress","linkage","content","getText","avatar","scheme","_resolvedAddress","owner","tokenId","tokenOwner","balance","metadataUrl","metadata","stringify","imageUrl","image","ipfs","ipns","swarm","skynet","urlSafe","keyBytes","defaultFormatter","nextPollId","BaseProvider","_events","_emitted","disableCcipRead","getFormatter","anyNetwork","detectNetwork","_networkPromise","_ready","knownNetwork","emit","_maxInternalBlockNumber","_maxFilterBlockRange","_pollingInterval","_fastQueryDate","_network","event","calldata","urls","sender","errorMessages","errorMessage","maxAge","_internalBlockNumber","internalBlockNumber","respTime","reqTime","checkInternalBlockNumber","perform","networkError","_setFastBlockNumber","pollId","runners","_getInternalBlockNumber","pollingInterval","abs","previousBlockNumber","eventBlockNumber","runner","getTransactionReceipt","minFromBlock","getLogs","polling","currentNetwork","_fastBlockNumber","_fastBlockNumberPromise","detectedNetwork","_poller","setInterval","_bootstrapPoll","clearInterval","now","getBlockNumber","_waitForTransaction","replaceable","cancelFuncs","alreadyDone","minedHandler","removeListener","lastBlockNumber","startBlock","scannedBlock","replaceHandler","__awaiter","getTransactionCount","getTransaction","mined","getBlockWithTransactions","ti","waitForTransaction","cancelled","replacement","_wrapTransaction","unref","addressOrName","_getBlockTag","position","expectedHash","returnedHash","wait","confirms","signedTransaction","hexTx","values","redirects","txSender","urlsOffset","urlsLength","urlsData","callbackSelector","ccipReadFetch","ccipResult","_call","SERVER_ERROR","_getTransactionRequest","resolved","resolveName","blockHashOrBlockTag","includeTransactions","blockWithTxs","_getBlock","_getFilter","currentName","_getResolver","resolver","addrData","getResolver","resolverAddr","nameOrAddress","resolverAddress","getAvatar","pollable","_startEvent","_addEventListener","stopped","eventTag","_stopEvent","removeAllListeners","found","allowedTransactionKeys","forwardErrors","Signer","_checkProvider","getBalance","checkTransaction","estimateGas","populateTransaction","signTransaction","signedTx","sendTransaction","getFeeData","hasEip1559","feeData","getChainId","_isSigner","id","text","padding","NegativeOne","One","MaxUint256","hexTrue","hexFalse","domainFieldTypes","verifyingContract","salt","domainFieldNames","checkString","domainChecks","getBaseEncoder","width","boundsUpper","mask","boundsLower","padOffset","hexPadRight","encodeType","TypedDataEncoder","types","links","parents","subtypes","uniqueNames","field","baseType","primaryTypes","checkCircular","subtype","primaryType","st","_types","encoder","_encoderCache","_getEncoder","subEncoder","getEncoder","encodedType","encodeData","hashStruct","callback","_visit","domain","domainFields","EIP712Domain","hashDomain","ensCache","visit","domainValues","domainTypes","typesWithDomain","errorGas","spelunk","requireData","checkError","responseText","getResult","getLowerCase","JsonRpcSigner","addressOrIndex","UncheckedJsonRpcSigner","_address","_index","send","accounts","fromAddress","estimate","hexlifyTransaction","action","sendUncheckedTransaction","_TypedDataEncoder","populated","networkOrReady","_nextId","_eventLoopCache","_cache","_uncachedDetectNetwork","getSigner","connectUnchecked","jsonrpc","prepareRequest","_startPending","_pendingFilter","self","pendingFilter","filterId","hashes","seq","listenerCount","allowExtra","properties","allowed","WS","WebSocket","NextId","WebSocketProvider","_wsReady","websocket","onopen","_requests","onmessage","messageEvent","_subs","subscription","fauxPoll","_websocket","_detectNetwork","rid","param","subIdPromise","_subIds","subId","_subscribe","emitReceipt","readyState","CONNECTING","onerror","close","StaticJsonRpcProvider","_super","UrlJsonRpcProvider","apiKey","defaultApiKey","AlchemyWebSocketProvider","host","getHost","projectSecret","getTransactionPostData","maxFeePerGs","getJsonResult","checkLogTag","getBaseUrl","query","baseUrl","apikey","post","getPostUrl","getPostData","procFunc","payloadStr","txhash","postData","topic0","blocks","parseFloat","ethusd","endBlock","startblock","endblock","timeStamp","shuffled","checkNetworks","median","maxDelta","middle","nextRid","getPromise","ForwardErrors","ForwardProperties","exposeDebugConfig","config","weight","getProcessFunc","configs","_highestBlockNumber","tally","count","normalizedTally","waitForSync","getRunner","currentBlockNumber","getEtherPrice","getStorageAt","providerConfigs","configOrProvider","isProvider","stallTimeout","priority","first","t0","inflightWeight","backend","waiting","errors","errorCode","props","IpcProvider","defaultProjectId","InfuraWebSocketProvider","projectId","apiKeyObj","JsonRpcBatchProvider","_pendingBatch","inflightRequest","_pendingBatchAggregator","batch","inflight","NodesmithProvider","defaultApplicationId","applicationId","loadBalancer","applicationSecretKey","buildWeb3LegacyFetcher","sendFunc","fetcher","Web3Provider","path","jsonRpcFetchFunc","subprovider","isMetaMask","buildEip1193Fetcher","sendAsync","getDefaultProvider","endian","isBN","Buffer","wordSize","window","require","parseHex4Bits","parseHexByte","lowerBound","parseBase","min","move","dest","src","left","right","_initNumber","_initArray","_parseHex","_parseBase","_strip","limbLen","limbPow","imuln","_iaddn","copy","_move","_expand","_normSign","Symbol","for","zeros","groupSizes","groupBases","out","groupSize","groupBase","modrn","idivn","toBuffer","toArrayLike","smallMulTo","ncarry","rword","maxJ","ArrayType","reqLength","allocUnsafe","allocate","_toArrayLikeLE","shift","_toArrayLikeBE","clz32","_countBits","_zeroBits","zeroBits","inotn","testn","notn","iuor","ior","uor","iuand","iand","uand","iuxor","ixor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","isub","comb10MulTo","al0","ah0","al1","ah1","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","bl0","bh0","bl1","bh1","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","guessLen13b","conjugate","normalize13b","round","convert13b","stub","ph","mulp","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","isqr","toBitArray","iushln","carryMask","newCarry","ishln","hint","extended","maskedWords","ishrn","ushln","imaskn","addn","subn","iabs","_ishlnsubmul","_wordDiv","bhi","diff","qj","divmod","positive","divn","dm","half","r2","egcd","A","B","C","D","yp","xp","im","jm","gcd","_invmp","bincn","ucmp","gtn","gten","ltn","lten","eqn","Red","ctx","convertTo","_forceRed","convertFrom","redShl","shl","_verify2","redIMul","_verify1","redISqr","sqrt","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","_prime","Mont","imod","rinv","minv","ireduce","imulK","strip","prev","mod3","nOne","lpow","inv","currentLen"],"sourceRoot":""}